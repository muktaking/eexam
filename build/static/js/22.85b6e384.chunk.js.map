{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","utils/paginate.js","../node_modules/react-bootstrap/esm/Alert.js","components/pagination/pagination.jsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/examBuilder/card/card.jsx","components/examBuilder/examSpec.jsx","components/examBuilder/filter.jsx","components/examBuilder/selectedQuestionsPreview.jsx","container/examBuilder/examBuilder.js"],"names":["CardImg","React","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","show","transition","Fade","closeLabel","controllables","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","onClose","dismissible","Transition","handleClose","useEventCallback","e","alert","role","undefined","CloseButton","onClick","label","unmountOnExit","in","DivStyledAsH4","SafeAnchor","Heading","pagination","itemsCount","onPageHandler","currentPage","pageCount","Math","ceil","number","push","Item","key","active","style","width","height","PageItem","disabled","activeLabel","createButton","name","defaultValue","_class","_temp","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","_this$props","First","Prev","Ellipsis","Next","Last","Pagination","size","decoratedBsPrefix","card","header","headerBgColor","showHeader","centeredStyle","position","top","left","transform","zIndex","ExamSpec","categories","selectedQuestionIds","useState","hideMsg","setHideMsg","dispatch","useDispatch","loading","useSelector","state","examPaper","successMsg","success","errorMsg","error","Spinner","animation","initialValues","title","type","categoryType","singleQuestionMark","questionStemLength","penaltyMark","timeLimit","validate","onSubmit","onSubmitHandler","errors","handleChange","handleSubmit","description","questions","length","JSON","stringify","Form","Group","controlId","Label","Control","placeholder","onChange","multiple","map","categorySlug","slug","replace","id","Button","values","onLoadingLoader","postExamProfile","validator","isLength","min","max","isInt","isNumeric","filter","SelectedQuestionsPreview","selectedQuestions","selectedQuestionsHandler","ListGroup","question","index","qText","Badge","cursor","ExamPaper","handleShow","setState","checkHandleChange","isChecked","target","checked","actionHandleChange","onGetQuestionByCategoryLoader","page","onFetchCategoryLoader","onGetQuestionLoader","checkedQuestionIds","Object","keys","isNaN","RoutesConfig","ExamBuilder","metaInfo","Modal","onHide","closeButton","bottom","right","Row","Col","lg","category","q","FormCheck","Check","inline","connect","auth","api","fetchCategory","getQuestionLoader","getQuestionByCategoryLoader"],"mappings":"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","file":"static/js/22.85b6e384.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar controllables = {\n  show: 'onClose'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, controllables),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      Transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    onClose(false, e);\n  });\n  var alert = React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return React.createElement(Transition, _extends({\n    unmountOnExit: true,\n    ref: ref\n  }, props, {\n    in: show\n  }), alert);\n});\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nAlert.Heading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nexport default Alert;","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\n\r\nconst pagination = ({ itemsCount, pageSize, onPageHandler, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const items = [];\r\n  for (let number = 1; number <= pageCount; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        onClick={() => {\r\n          onPageHandler(number);\r\n        }}\r\n        active={number === currentPage}\r\n        className=\"my-2 mr-2 text-center\"\r\n        style={{width:\"40px\",height:'30px'}}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  return <Pagination className=\"justify-content-start align-content-start flex-wrap\" >{items}</Pagination>;\r\n};\r\n\r\nexport default pagination;\r\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  var _class, _temp;\n\n  if (label === void 0) {\n    label = name;\n  }\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(_class, _React$Component);\n\n    function _class() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = _class.prototype;\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n      delete props.active;\n      return React.createElement(PageItem, props, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, children || defaultValue), React.createElement(\"span\", {\n        className: \"sr-only\"\n      }, label));\n    };\n\n    return _class;\n  }(React.Component), _class.displayName = name, _temp;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { First, Prev, Ellipsis, Next, Last } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst card = ({ header, children, headerBgColor, showHeader }) => {\r\n  return (\r\n    <Card className=\"mt-5\">\r\n      {showHeader && (\r\n        <Card.Header\r\n          className={\"text-center font-weight-bold \" + \"bg-\" + headerBgColor}\r\n        >\r\n          {header}\r\n        </Card.Header>\r\n      )}\r\n      <Card.Body>{children}</Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default card;\r\n","import { Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { useFormik } from \"formik\";\r\nimport validator from \"validator\";\r\nimport { onLoadingLoader, postExamProfile } from \"../../store/examPaper\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst centeredStyle = {\r\n  // styling to display server response in middle of screen\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  /* bring your own prefixes */\r\n  transform: \"translate(-50%, -50%)\",\r\n  zIndex: \"1000\",\r\n};\r\n\r\nconst ExamSpec = ({ categories, selectedQuestionIds }) => {\r\n  const [hideMsg, setHideMsg] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.examPaper.loading);\r\n  const successMsg = useSelector((state) => state.examPaper.success);\r\n  const errorMsg = useSelector((state) => state.examPaper.error);\r\n\r\n  return (\r\n    <>\r\n    {loading  && <Spinner\r\n        animation=\"border\"\r\n        role=\"status\"\r\n        variant=\"dark\"\r\n        className=\"content-center\"\r\n    ></Spinner>}\r\n    <Formik\r\n      initialValues={{\r\n        title: \"\",\r\n        type: \"0\",\r\n        categoryType: [],\r\n        singleQuestionMark: \"1\",\r\n        questionStemLength: \"5\",\r\n        penaltyMark: \"0\",\r\n        timeLimit: \"40\",\r\n      }}\r\n      validate={validate}\r\n      onSubmit={onSubmitHandler(selectedQuestionIds, dispatch, setHideMsg)}\r\n    >\r\n      {({ errors, handleChange, handleSubmit }) => (\r\n        <ExamCard header=\"Exam Specification\" showHeader={true}>\r\n          {hideMsg && successMsg && (\r\n            <Alert //\r\n              variant={\"success\"}\r\n              className=\"text-center\"\r\n              style={centeredStyle}\r\n              onClose={() => setHideMsg(false)}\r\n              dismissible\r\n            >\r\n              {successMsg.title +\r\n                \" --->  \" +\r\n                successMsg.description +\r\n                \" --->  \" +\r\n                successMsg.questions.length +\r\n                \" questions\"}\r\n            </Alert>\r\n          )}\r\n          {hideMsg && errorMsg && (\r\n            <Alert //\r\n              variant={\"success\"}\r\n              className=\"text-center\"\r\n              style={centeredStyle}\r\n              onClose={() => setHideMsg(false)}\r\n              dismissible\r\n            >\r\n              {JSON.stringify(errorMsg)}\r\n            </Alert>\r\n          )}\r\n          <Form>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter title\"\r\n                name=\"title\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.title ? (\r\n              <div className=\"alert alert-danger\">{errors.title}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"type\">\r\n              <Form.Label>Exam Type</Form.Label>\r\n              <Form.Control as=\"select\" name=\"type\" onChange={handleChange}>\r\n                <option value=\"0\">Assignment</option>\r\n                <option value=\"1\">Weekly</option>\r\n                <option value=\"2\">Monthly</option>\r\n                <option value=\"3\">Assesment</option>\r\n                <option value=\"4\">Term</option>\r\n                <option value=\"5\">Test</option>\r\n                <option value=\"6\">Final</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"categoryType\">\r\n              <Form.Label>Category Type</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                multiple\r\n                name=\"categoryType\"\r\n                onChange={handleChange}\r\n                //value={categories[0] && categories[0].id}\r\n                // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n              >\r\n                // eslint-disable-next-line react/prop-types //\r\n                eslint-disable-next-line react/prop-types\r\n                {categories.map((value) => {\r\n                  //console.log(categories[0].id);\r\n                  let categorySlug = value.slug.replace(/_/g, \" / \");\r\n                  return <option value={value.id}>{categorySlug}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"textarea\"\r\n                placeholder=\"description\"\r\n                name=\"description\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.description ? (\r\n              <div className=\"alert alert-danger\">{errors.description}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"singleQuestionMark\">\r\n              <Form.Label>Single Question Mark</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"1\"\r\n                name=\"singleQuestionMark\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.singleQuestionMark ? (\r\n              <div className=\"alert alert-danger\">\r\n                {errors.singleQuestionMark}\r\n              </div>\r\n            ) : null}\r\n            <Form.Group controlId=\"questionStemLength\">\r\n              <Form.Label>Question Stem Length</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"5\"\r\n                name=\"questionStemLength\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.questionStemLength ? (\r\n              <div className=\"alert alert-danger\">{errors.questionStemLength}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"penaltyMark\">\r\n              <Form.Label>Penalty Mark</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"0\"\r\n                name=\"penaltyMark\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.penaltyMark ? (\r\n              <div className=\"alert alert-danger\">{errors.penaltyMark}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"timeLimit\">\r\n              <Form.Label>Time Limit(Minutes)</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"40\"\r\n                name=\"timeLimit\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.timeLimit ? (\r\n              <div className=\"alert alert-danger\">{errors.timeLimit}</div>\r\n            ) : null}\r\n          </Form>\r\n          <Button onClick={handleSubmit}>Submit</Button>\r\n        </ExamCard>\r\n      )}\r\n    </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExamSpec;\r\n\r\nfunction onSubmitHandler(selectedQuestionIds, dispatch, setHideMsg) {\r\n  return (values) => {\r\n    if (selectedQuestionIds.length > 0) {\r\n      dispatch(onLoadingLoader());\r\n      setHideMsg(true);\r\n      dispatch(postExamProfile(values, selectedQuestionIds));\r\n    } else {\r\n      alert(\"Their is no selected Question\");\r\n    }\r\n  };\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  } else if (!validator.isLength(values.title, { min: 3, max: 20 })) {\r\n    errors.title = \"Title should be between 3-20 characters\";\r\n  }\r\n  if (!values.description) {\r\n    errors.description = \"Required\";\r\n  } else if (!validator.isLength(values.description, { min: 3, max: 50 })) {\r\n    errors.description = \"Description should be between 3-50 characters\";\r\n  }\r\n  if (!values.singleQuestionMark) {\r\n    errors.singleQuestionMark = \"Required\";\r\n  } else if (!validator.isInt(values.singleQuestionMark)) {\r\n    errors.singleQuestionMark = \"Single Question Mark should be Integer value\";\r\n  }\r\n  if (!values.questionStemLength) {\r\n    errors.questionStemLength = \"Required\";\r\n  } else if (!validator.isNumeric(values.questionStemLength)) {\r\n    errors.questionStemLength = \"Question stem length should be Numeric value\";\r\n  }\r\n  if (!values.penaltyMark) {\r\n    errors.penaltyMark = \"Required\";\r\n  } else if (!validator.isNumeric(values.penaltyMark)) {\r\n    errors.penaltyMark = \"penalty Mark should be Numeric value\";\r\n  }\r\n  if (!values.timeLimit) {\r\n    errors.timeLimit = \"Required\";\r\n  } else if (!validator.isInt(values.timeLimit)) {\r\n    errors.timeLimit = \"Timelimit Mark should be Interger Value\";\r\n  }\r\n  return errors;\r\n};\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst filter = ({ handleChange, categories }) => {\r\n  return (\r\n    <ExamCard header=\"Filter\" showHeader={true}>\r\n      <Form.Group controlId=\"formGridParent\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Form.Control as=\"select\" defaultValue=\"top\" name=\"categoryId\" onChange={handleChange}>\r\n          <option  disabled value=\"top\">Top...</option>\r\n          {categories.map((value) => {\r\n            let categorySlug = value.slug.replace(/_/g, \" / \");\r\n            return <option value={value.id}>{categorySlug}</option>;\r\n          })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </ExamCard>\r\n  );\r\n};\r\n\r\nexport default filter;\r\n","import React from \"react\";\r\nimport { Badge, ListGroup } from \"react-bootstrap\";\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst SelectedQuestionsPreview = ({selectedQuestions, selectedQuestionsHandler}) => {\r\n  return (\r\n    <ExamCard header=\"Selected Questions Preview\" showHeader={false}>\r\n      {\r\n        <ListGroup className=\"my-2\">\r\n          {selectedQuestions.map((question, index) => (\r\n            <ListGroup.Item key={index} variant={\"success\"}>\r\n              {`${index + 1}. ${question.title} --> ${question.qText}`}\r\n              <Badge variant=\"danger ml-2\" onClick={()=>{\r\n                selectedQuestionsHandler(question.id)\r\n                }}\r\n                style={{cursor: 'pointer'}}\r\n              \r\n              ><FaTimes /></Badge>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      }\r\n    </ExamCard>\r\n  );\r\n};\r\n\r\nexport default SelectedQuestionsPreview;\r\n","import React, { Component } from \"react\";\r\nimport { Alert, Badge, Button, Col, Form, FormCheck, ListGroup, Modal, Row } from \"react-bootstrap\";\r\nimport { FaShoppingBasket } from 'react-icons/fa';\r\nimport { connect } from \"react-redux\";\r\nimport ExamSpec from \"../../components/examBuilder/examSpec\";\r\nimport Filter from \"../../components/examBuilder/filter\";\r\nimport SelectedQuestionsPreview from \"../../components/examBuilder/selectedQuestionsPreview\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport MetaInfo from \"../../components/seo/metainfo\";\r\nimport { RoutesConfig } from \"../../config/routes.config\";\r\nimport { fetchCategory } from \"../../store/category\";\r\nimport {\r\n  getQuestionByCategoryLoader, getQuestionLoader\r\n} from \"../../store/question\";\r\nimport { paginate } from \"../../utils/paginate\";\r\n\r\n\r\nclass ExamPaper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      selectedQuestions: [],\r\n      pageSize: 10,\r\n      currentPage: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader();\r\n    this.props.onGetQuestionLoader();\r\n  }\r\n\r\n  handleShow = () => { //control modal show state\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => { //control modal show state\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  checkHandleChange = (e, question) => {\r\n    const isChecked = e.target.checked;\r\n    const value = e.target.value;\r\n\r\n    if(isChecked){\r\n      this.setState({[value]: {\r\n        checked: true,\r\n        id: question.id,\r\n        title: question.title,\r\n        qText: question.qText\r\n      }});\r\n    } else {\r\n      this.setState({[value]: {\r\n        checked: false\r\n      }});\r\n    } \r\n\r\n  };\r\n\r\n  actionHandleChange = (e)=>{\r\n    e = e.target;\r\n    const v = e.value;\r\n\r\n    switch(v){\r\n      case 'mAll':\r\n      this.props.question.questions.map(e=>{this.setState({[e.id]: {checked: true, id: e.id, title: e.title, qText: e.qText}})});\r\n        break;\r\n      case 'uAll':\r\n        this.props.question.questions.map(e=>{this.setState({[e.id]: {checked: false}})});\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  selectedQuestionsHandler = (id)=>{\r\n    this.setState({\r\n      selectedQuestions: this.state.selectedQuestions.filter(question=> question.id != id),\r\n      [id]: {checked: false}\r\n    })\r\n\r\n  }\r\n\r\n  handleChange = (e) => { // the category controller\r\n    e = e.target;\r\n    this.props.onGetQuestionByCategoryLoader(e.value);\r\n    this.setState({\r\n      id: e.value,\r\n    });\r\n  };\r\n\r\n  onPageHandler = (page) => { // for pagination\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const questions = paginate(\r\n      this.props.question.questions,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n\r\n    const checkedQuestionIds = Object.keys(this.state).filter(key=> !isNaN(key) && this.state[key].checked);\r\n\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.ExamBuilder.metaInfo} />\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Selected Questions Preview</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <SelectedQuestionsPreview\r\n              selectedQuestions={this.state.selectedQuestions}\r\n              selectedQuestionsHandler={this.selectedQuestionsHandler}\r\n            />\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* Preview questions cart */}\r\n        <div style={{position:'fixed', bottom: '50px', right: '20px', width: '50px', height: '35px', zIndex:'99'}}>\r\n          <Button onClick={this.handleShow} title=\"Questions Busket\">\r\n            <FaShoppingBasket size={'2rem'}/>\r\n          </Button>\r\n          <span className=\"bg-danger text-white p-1 text-center\" style={{position: 'absolute', top: '-15px' , right: '-10px'}}>\r\n            {this.state.selectedQuestions.length}\r\n          </span>\r\n        </div>\r\n\r\n        <Row>\r\n          <Col lg={4}>\r\n            <Alert variant={\"primary\"} className=\"text-center mt-3\">\r\n              Total number of Question is :\r\n              {this.props.question.questions.length}\r\n            </Alert>\r\n            \r\n            <Filter\r\n              handleChange={this.handleChange}\r\n              categories={this.props.category.categories}\r\n            />\r\n            <ExamSpec categories={this.props.category.categories} selectedQuestionIds={this.state.selectedQuestions.map(q=>q.id)} />\r\n            \r\n          </Col>\r\n          <Col lg={8}>\r\n            <FormCheck>\r\n              <ListGroup className=\"my-2\">\r\n                {questions.length < 1 && <p className=\"text-danger\">No Question in this category.</p>}\r\n                {questions.map((question, index) => (\r\n                  <ListGroup.Item\r\n                    key={question.id}\r\n                    variant={index % 2 === 0 ? \"dark\" : \"light\"}\r\n                  >\r\n                    { <Form.Check\r\n                      //ref={this.state.input}\r\n                        inline\r\n                        type=\"checkbox\"\r\n                        value={question.id}\r\n                        onChange={(e)=>{this.checkHandleChange(e,question)}}\r\n                        checked={this.state[question.id] && this.state[question.id].checked}\r\n                      />\r\n                    }\r\n                    \r\n                    {`${(index + 1) +  (this.state.pageSize * (this.state.currentPage - 1) )}. ${question.title} --> ${question.qText}`}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </FormCheck>\r\n            <p className=\"text-muted\">** Please add checked questions to <Badge variant=\"info\">Preview Cart</Badge>. Otherwise no questions will be avaiable in exam.</p>\r\n            <Pagination\r\n              itemsCount={this.props.question.questions.length}\r\n              pageSize={this.state.pageSize}\r\n              currentPage={this.state.currentPage}\r\n              onPageHandler={this.onPageHandler}\r\n            />\r\n\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({selectedQuestions: checkedQuestionIds.map(id=>this.state[id])})\r\n                }}\r\n                className=\"mr-5 mb-2 mb-sm-0\"\r\n              >\r\n                Add Questions to Preview Cart\r\n              </Button>\r\n\r\n              <Form.Group controlId=\"formGridParent\">\r\n                <Form.Label>Actions</Form.Label>\r\n                <Form.Control as=\"select\" name=\"action\" onChange={this.actionHandleChange}  >\r\n                <option>Select...</option>\r\n                  <option value=\"mAll\">Mark All</option>\r\n                  <option value=\"uAll\">UnMark All</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n            </div>\r\n\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onGetQuestionLoader: () => dispatch(getQuestionLoader()),\r\n    onGetQuestionByCategoryLoader: (id) =>\r\n      dispatch(getQuestionByCategoryLoader(id)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    question: state.question,\r\n    category: state.category,\r\n    api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamPaper);\r\n"],"sourceRoot":""}