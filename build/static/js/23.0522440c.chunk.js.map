{"version":3,"sources":["components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/exams/examLists.js","container/dashboard/component/exams.js","container/dashboard/component/users.js","container/dashboard/admin.jsx","components/dashboard/bigCards/bigCard/bigCard.jsx","components/dashboard/bigCards/mainContentCards/examsFeaturedCard.jsx","components/dashboard/bigCards/mainContentCards/reportCard.jsx","components/dashboard/bigCards/sideCards/recentActivityCard.jsx","components/dashboard/bigCards/bigCards.jsx","components/dashboard/miniCards/miniInfoBlock/miniBlock/icon.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/footer.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/header.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/index.js","components/dashboard/miniCards/miniInfoBlock/rank.js","components/dashboard/miniCards/miniInfoBlock/result.js","components/dashboard/miniCards/miniInfoBlock/totalExam.js","components/dashboard/miniCards/miniInfoBlock/upcomingExam.js","components/dashboard/miniCards/miniCards.jsx","container/dashboard/dashboard.jsx","container/dashboard/index.js"],"names":["iconStyle","SocialShare","title","description","url","props","process","REACT_APP_BASE_URL","className","variant","style","fontSize","quote","hashtag","size","round","body","source","categoryTypeVariant","name","ExamCard","width","examId","imgSrc","categoryType","createdAt","free","examLoader","dispatch","useDispatch","token","useSelector","state","auth","intl","useIntl","useState","res","setRes","key","canActivate","rolePermitted","admin","Img","src","Body","Title","fontWeight","Subtitle","map","category","formatMessage","id","defaultMessage","moment","calendar","to","onClick","resetExamResultLoader","disabled","trigger","placement","overlay","PopoverWrapper","React","forwardRef","ref","as","Content","axios","baseURL","REACT_APP_SITE_URL","method","then","response","catch","error","JSON","stringify","getRndInteger","min","max","Math","floor","random","listCard","exams","landing","authToken","show","setShow","handleClose","onHide","Header","closeButton","toUpperCase","slice","exam","length","imageUrl","filter","cat","Footer","marginTop","position","top","left","i","height","examType","ExamLists","this","onGetAllExamsLoader","RoutesConfig","Exams","metaInfo","Object","keys","Component","injectIntl","connect","getAllExamsLoader","Table","striped","bordered","hover","responsive","ind","type","join","format","Users","users","user","Image","avatar","roundedCircle","firstName","lastName","userName","email","roleToString","role","setUsers","setExams","useEffect","get","console","log","data","_","Row","Col","md","Badge","BigCard","startDate","Date","endDate","startHandleChange","date","setState","endHandleChange","reportHandler","Accordion","defaultActiveKey","Card","header","Toggle","Button","eventKey","icon","Collapse","showDatePicker","selected","onChange","children","ExamsFeaturedCard","featuredExams","dashboard","headerColor","index","ReportCard","userExamStat","labels","examTitles","datasets","label","stat","value","averageScore","totalMark","toFixed","fill","borderColor","backgroundColor","borderWidth","maxBarThickness","barPercentage","options","scales","yAxes","ticks","beginAtZero","SideCard","ListGroup","Item","color","attemptNumbers","lastAttemptTime","startOf","fromNow","BigCards","xl","lg","classes","footer","heading","cardHeader","Text","miniBlock","faIcon","footerHeading","footerValue","faFooterIcon","sm","rank","result","totalExam","upcomingExam","MiniCards","userExamInfo","Dashboard","loading","setLoading","getUserLoader","status","dashboardStudent","payload","e","Spinner","animation","mentor"],"mappings":"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","file":"static/js/23.0522440c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport { Badge, Button, Card, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { EmailIcon, EmailShareButton, FacebookIcon, FacebookShareButton, LinkedinIcon, LinkedinShareButton, TwitterIcon, TwitterShareButton } from 'react-share';\r\nimport { resetExamResultLoader } from '../../../store/exams';\r\nimport { canActivate, rolePermitted } from '../../../utils/canActivate';\r\n\r\nconst iconStyle = {\r\n    size: 35,\r\n    round: true\r\n}\r\n\r\nconst SocialShare = ({title, description, url,...props})=> {\r\n    url = process.env.REACT_APP_BASE_URL + url;\r\n\r\n    return <div className=\"mt-3\" {...props}>\r\n\r\n            <hr />\r\n\r\n            <Badge variant=\"success\" className=\"mr-1 p-1\" style={{fontSize: '.8rem'}}>Share on</Badge>\r\n\r\n            <FacebookShareButton\r\n            url={url}\r\n            quote={description}\r\n            hashtag={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </FacebookShareButton>\r\n\r\n            <TwitterShareButton\r\n            url={url}\r\n            title={description}\r\n            hashtag={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </TwitterShareButton>\r\n\r\n            <EmailShareButton\r\n            url={url}\r\n            body={description}\r\n            title={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </EmailShareButton>\r\n\r\n            <LinkedinShareButton\r\n            url={url}\r\n            source={url}\r\n            body={description}\r\n            title={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </LinkedinShareButton>\r\n\r\n        </div>\r\n    };\r\n\r\nconst categoryTypeVariant = (name)=>{\r\n    let variant = \"primary\"\r\n    switch (name) {\r\n        case 'Featured':\r\n            variant = \"warning\"\r\n            break;\r\n        case 'Free':\r\n            variant = \"secondary\"\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return variant;\r\n}\r\n\r\nexport default function ExamCard({width=\"350px\", examId, imgSrc, title, categoryType, description, createdAt, free, examLoader}) {\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(state=> state.auth.token);\r\n    const intl = useIntl();\r\n    const [res, setRes] = useState(null);\r\n\r\n    return (\r\n        <>\r\n            <Card key={examId} className=\"mr-2 mb-2\" style={{width:width}}>\r\n                {!canActivate(rolePermitted.admin, token) && <Card.Img\r\n                    variant=\"top\"\r\n                    src={imgSrc}\r\n                />}\r\n                <Card.Body>\r\n                    <div>\r\n                        <Card.Title style={{fontSize: '1.4rem' ,fontWeight: '900'}}>{title}</Card.Title>\r\n                        \r\n                        <Card.Subtitle>\r\n                        {categoryType &&\r\n                            categoryType.map((category) => (\r\n                            <Badge key={category.name} variant={categoryTypeVariant(category.name)} className=\"mr-1\">\r\n                                {category.name}\r\n                            </Badge>\r\n                            ))}\r\n                        </Card.Subtitle>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"mt-1 pt-2\">\r\n                        <p className=\"\">{description} </p>\r\n                \r\n                        <p className=\"text-muted text-right\">\r\n                            {intl.formatMessage({id: 'db.so', defaultMessage: \"Start on\"})} : {moment(createdAt).calendar()}\r\n                        </p>\r\n                    </div>\r\n        \r\n                    {!canActivate(rolePermitted.admin, token) && <> \r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <Link  className=\"text-white\" to={(free ? \"/exams/free/\" : \"/exams/\") + examId}>\r\n                                    <Button variant=\"outline-primary\" onClick={()=>{\r\n                                        dispatch(resetExamResultLoader());\r\n                                        }}>\r\n                                            <FormattedMessage id=\"btn.start\" defaultMessage=\"Start Exam\"/>\r\n                                    </Button>\r\n                                </Link>\r\n                                <Link className=\"text-white\" to={\"/result/rank/\" + examId}>\r\n                                    <Button onClick={()=>{dispatch(resetExamResultLoader())}} variant=\"outline-dark\">\r\n                                        <FormattedMessage id=\"btn.rank\" defaultMessage=\"Rank\"/>\r\n                                    </Button>\r\n                                </Link>\r\n                                \r\n                            </div>\r\n                            <SocialShare url={\"/exams/\"+examId} title={title} description={description} />                    \r\n                        </> \r\n                    }\r\n\r\n                    {canActivate(rolePermitted.admin, token) && <div>\r\n                            <Button disabled={true} variant=\"primary\" className=\"mr-3\" >\r\n                                Edit\r\n                            </Button>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={<PopoverWrapper id={examId} res={res} setRes={setRes} token={token} examLoader={examLoader} />}>\r\n                                <Button onClick={()=>{dispatch(resetExamResultLoader())}} variant=\"danger\">\r\n                                    Delete\r\n                                </Button>\r\n                            </OverlayTrigger>    \r\n                            \r\n                        </div>}\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst PopoverWrapper = React.forwardRef(({id, res, setRes, token, examLoader, ...props}, ref)=>(\r\n    <Popover id=\"popover-basic\" ref={ref} {...props} >\r\n      <Popover.Title as=\"h3\">Are You Sure To delete The Exam</Popover.Title>\r\n      <Popover.Content>\r\n          <p>\r\n              {res}\r\n          </p>\r\n        <Button variant=\"danger\" onClick={()=>{\r\n            //setAuthorizationToken(token);\r\n            axios({\r\n                baseURL: process.env.REACT_APP_SITE_URL,\r\n                url: '/exams/' + id,\r\n                method: 'delete',\r\n              })\r\n            .then(response=>{\r\n                examLoader();\r\n                setRes(\"Successfully Deleted\");\r\n            })\r\n            .catch(error=>{\r\n                setRes(\"Can not delete the exam\"+ JSON.stringify(error));\r\n            })\r\n        }}>Yes</Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  ));\r\n  ","import React, { useState } from 'react';\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap';\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"./examCard\";\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\n\r\nexport default function listCard({title,exams,landing, examLoader}) {\r\n  const authToken = useSelector((state) => state.auth.token ? true : false);\r\n  const intl = useIntl();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n      <Modal show={show} onHide={handleClose} size={\"xl\"}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n           {intl.formatMessage({id: 'btn.more', defaultMessage: \"More\"})}\r\n           <Badge variant=\"warning\">{\" \" +title.toUpperCase() + \" \"}</Badge> \r\n           {intl.formatMessage({id: 'btn.exams', defaultMessage: \"Exams\"})}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className=\"mt-3 ml-3\">\r\n            <Col className=\"d-flex justify-content-center flex-wrap\">\r\n                { exams.slice(2).map((exam) => ( \r\n                    <ExamCard \r\n                      key={exam.id}\r\n                      examId = {exam.id} \r\n                      imgSrc = {exam.categoryType.length > 0 ? process.env.REACT_APP_SITE_URL+\"/\"+  exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl : '/assets/image/uncat.jpg'}\r\n                      title = {exam.title}\r\n                      categoryType = {exam.categoryType.length > 0 ? exam.categoryType : [{name: 'Uncategorized'}]}\r\n                      description = {exam.description}\r\n                      createdAt = {exam.createdAt}\r\n                      free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                      examLoader = {examLoader}\r\n                    />                \r\n                ))}\r\n                \r\n            </Col>\r\n          </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        <div className=\"mb-2 border position-relative\" style={{marginTop: \"100px\"}}>\r\n        <h3 className=\"text-center bg-warning text-light px-2 py-1\" style={{position: \"absolute\", top:\"-30px\",left:\"50px\" }}>{title.toUpperCase() + \" \"} { (!landing && <Badge variant=\"light\" className=\"ml-2\"> {exams.length}</Badge> )} </h3>\r\n        <div className=\"mt-4\">\r\n          <div className=\"d-flex justify-content-around flex-wrap\">\r\n              { exams.length < 1 && <p className=\"lead text-danger\"> {title + \" \" + intl.formatMessage({id: 'noExamCreated', defaultMessage: \"Exams is not created\"})} </p>}\r\n              { exams.map((exam,i) => ( i < 3 ?\r\n                  <ExamCard\r\n                    key={exam.id} \r\n                    examId = {exam.id} \r\n                    imgSrc = {exam.categoryType.length > 0 ? process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl : '/assets/image/uncat.jpg'}\r\n                    title = {exam.title}\r\n                    categoryType = {exam.categoryType.length > 0 ? exam.categoryType : [{name: 'Uncategorized'}]}\r\n                    description = {exam.description}\r\n                    createdAt = {exam.createdAt}\r\n                    free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                    examLoader = {examLoader}\r\n                  />\r\n                  : \"\"\r\n              \r\n              ))}\r\n              \r\n          </div>\r\n          {!landing && <div className=\"my-2 d-flex justify-content-center\">\r\n            {exams.length > 2 ? <Button style={{height:\"50px\", width: \"150px\"}} onClick={()=>{\r\n              handleShow()\r\n            }}>{intl.formatMessage({id: 'btn.more', defaultMessage: \"More...\"})}.</Button> : \"\"}\r\n          </div>}\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from \"react-redux\";\r\nimport GallaryCard from \"../../components/exams/gallary/gallaryCard\";\r\nimport MetaInfo from '../../components/seo/metainfo';\r\nimport { RoutesConfig } from '../../config/routes.config';\r\nimport { getAllExamsLoader } from \"../../store/exams\";\r\n\r\nexport const examType = [\r\n  \"Assignment\",\r\n  \"Weekly\",\r\n  \"Monthly\",\r\n  \"Assesment\",\r\n  \"Term\",\r\n  \"Test\",\r\n  \"Final\",\r\n];\r\n\r\nclass ExamLists extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onGetAllExamsLoader();\r\n  }\r\n  \r\n  render() {\r\n  \r\n    return (\r\n      <>\r\n      <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n      \r\n      {/* {this.props.exams.exams.length < 1 && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )} */}\r\n        {Object.keys(this.props.exams.exams).map(key=> this.props.exams.exams[key] && \r\n        <GallaryCard\r\n        key={key} \r\n        title={this.props.intl.formatMessage({id: key, defaultMessage: key})} \r\n        exams={this.props.exams.exams[key]}\r\n        examLoader = {this.props.onGetAllExamsLoader}\r\n        />)}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetAllExamsLoader: () => dispatch(getAllExamsLoader()),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams,\r\n  };\r\n};\r\n\r\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)((ExamLists)));\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { examType } from '../../exams/examLists'\r\n\r\nexport default function Exams({exams}) {\r\n    return (\r\n        <div>\r\n\r\n            <Table striped bordered hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>Title</th>\r\n                    <th>Type</th>\r\n                    <th>Description</th>\r\n                    <th>Category</th>\r\n                    <th>Start From</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>                    \r\n                    {exams.map((exam, ind)=><tr key={ind}>\r\n                        <td>{ind+1}</td>\r\n                        <td>{exam.title}</td>\r\n                        <td>{examType[exam.type]}</td>\r\n                        <td>{exam.description}</td>\r\n                        <td>{exam.categoryType.map(cat=>cat.name).join(', ')}</td>\r\n                        <td>{moment(exam.createdAt).format('YYYY-MM-DD, hh:mm a')}</td>\r\n                    </tr>)}\r\n                   \r\n                </tbody>\r\n            </Table>\r\n                        \r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Image, Table } from 'react-bootstrap'\r\nimport { roleToString } from '../../../utils/canActivate'\r\n\r\nexport default function Users({users}) {\r\n    return (\r\n        <div>\r\n\r\n            <Table striped bordered hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>Avatar</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Username</th>\r\n                    <th>Email</th>\r\n                    <th>Role</th>\r\n                    <th>User From</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>                    \r\n                    {users.map((user, ind)=><tr key={ind}>\r\n                        <td>{ind+1}</td>\r\n                        <td className=\"\" >\r\n                            <Image height=\"35\" width=\"35\" src={\"/assets/image/avatar/\" + user.avatar + '.png'} roundedCircle />\r\n                        </td>\r\n                        <td>{user.firstName}</td>\r\n                        <td>{user.lastName}</td>\r\n                        <td>{user.userName}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{roleToString(user.role)}</td>\r\n                        <td>{moment(user.createdAt).format('YYYY-MM-DD')}</td>\r\n                    </tr>)}\r\n                   \r\n                </tbody>\r\n            </Table>\r\n                        \r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport * as _ from 'lodash';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Badge, Col, Row } from 'react-bootstrap';\r\nimport { FaPaperclip, FaUsers } from 'react-icons/fa';\r\nimport Exams from './component/exams';\r\nimport Users from './component/users';\r\n\r\n\r\nexport default function admin() {\r\n    const [users, setUsers] = useState([]);\r\n    const [exams, setExams] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        axios.get(process.env.REACT_APP_SITE_URL + \"/dashboard/admin\")\r\n        .then(response=> {\r\n            console.log(response)\r\n            setUsers(response.data.users);\r\n            setExams(_.flatMap(response.data.exams)); \r\n        })\r\n        .catch(error=>console.log(error));\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <div className=\"d-flex\">\r\n                        <div title=\"Users\" className=\"p-2 m-2\">\r\n                            <FaUsers className=\"mt-3\" size={\"2.4rem\"} />\r\n                            <Badge style={{fontSize: \"1.1rem\"}}>{users.length}</Badge>\r\n                        </div>\r\n                        <div title=\"Exams\" className=\"p-2 m-2\">\r\n                            <FaPaperclip className=\"mt-3\" size={\"2.4rem\"} />\r\n                            <Badge style={{fontSize: \"1.1rem\"}}>{exams.length}</Badge>\r\n                        </div>\r\n                    </div>\r\n                    <Users users={users} />\r\n                    <hr />\r\n                    <Exams exams={exams} />\r\n                </Col>\r\n                <Col md={4}>\r\n                    \r\n                </Col>\r\n\r\n            </Row>            \r\n        </div>\r\n    )\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nclass BigCard extends Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  };\r\n\r\n  startHandleChange = (date) => {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  };\r\n  endHandleChange = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n  reportHandler = () => {\r\n    //console.log(this.state.startDate, this.state.endDate);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\" className=\"mb-3\">\r\n        <Card className=\"border-top-0\">\r\n          <Card.Header className={\"bg-dark\" + \" text-light\"}>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {this.props.header}\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                <FontAwesomeIcon\r\n                  icon={\"bars\"}\r\n                  size=\"lg\"\r\n                  className=\"text-light\"\r\n                />\r\n              </Accordion.Toggle>\r\n              {/* <span className=\"\">More..</span> */}\r\n            </div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              {this.props.showDatePicker && (\r\n                <div className=\"d-flex flex-wrap justify-content-between mb-3\">\r\n                  <div>\r\n                    <span>Start Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={\"calendar-alt\"}\r\n                      size=\"2x\"\r\n                      className=\"mx-2\"\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.startDate}\r\n                      onChange={this.startHandleChange}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"\">End Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={\"calendar-alt\"}\r\n                      size=\"2x\"\r\n                      className=\"mx-2\"\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.endDate}\r\n                      onChange={this.endHandleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <Button onClick={this.reportHandler}>Show</Button>\r\n                </div>\r\n              )}\r\n              <hr />\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BigCard;\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"../../../exams/gallary/examCard\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\n\r\nconst ExamsFeaturedCard = () => {\r\n  const featuredExams = useSelector((state) => state.dashboard.featuredExams);\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({id: 'db.fe', defaultMessage: \"Featured Exams\"})}\r\n      headerColor={\"primary\"}\r\n      showDatePicker={false}\r\n    >\r\n      <div  className=\"d-flex justify-content-around flex-wrap\">\r\n        {featuredExams.map((exam, index) => (\r\n            <ExamCard\r\n              key={exam.id}\r\n              examId = {exam.id} \r\n              imgSrc = {exam.categoryType.length > 0 ? process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl : '/assets/image/uncat.jpg'}\r\n              title = {exam.title}\r\n              categoryType = {exam.categoryType.length > 0 ? exam.categoryType : [{name: 'Uncategorized'}]}\r\n              description = {exam.description}\r\n              createdAt = {exam.createdAt}\r\n            />\r\n        ))}\r\n      </div>\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default ExamsFeaturedCard;\r\n","import * as _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\n\r\nconst ReportCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat);\r\n  const intl = useIntl();\r\n\r\n  const examTitles = userExamStat\r\n    ? _.map(userExamStat.examTitles, \"title\")\r\n    : [];\r\n  const mark = userExamStat\r\n    ? _.map(\r\n        userExamStat.stat,\r\n        (value) => +((value.averageScore / value.totalMark) * 100).toFixed(2)\r\n      )\r\n    : [];\r\n  //const stat = userExamStat ? _.map(userExamStat.stat, \"averageScore\") : [];\r\n\r\n  const options = {\r\n    responsive: true, // Instruct chart js to respond nicely.\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 100,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  const data = {\r\n    labels: examTitles,\r\n    datasets: [\r\n      {\r\n        label: \"Marks in Percentage\", // Name the series\r\n        data: mark, // Specify the data values array\r\n        fill: false,\r\n        borderColor: \"#2196f3\", // Add custom color border (Line)\r\n        backgroundColor: \"#2196f3\", // Add custom color background (Points and Fill)\r\n        borderWidth: 1, // Specify bar border width\r\n        maxBarThickness: 35,\r\n        barPercentage: 0.5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BigCard header={intl.formatMessage({id: 'db.ur', defaultMessage: \"User Reports\"})} headerColor={\"info\"} showDatePicker={false}>\r\n      <Bar data={data} options={options} />\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default ReportCard;\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { MdInfo } from \"react-icons/md\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\n\r\nconst SideCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat);\r\n  const intl = useIntl();\r\n\r\n  const examTitles = userExamStat ? userExamStat.examTitles : [];\r\n  const stat = userExamStat ? userExamStat.stat : [];\r\n\r\n  return (\r\n    <BigCard\r\n      header={intl.formatMessage({id: 'db.ra', defaultMessage: \"Recent Activity\"})}\r\n      headerColor={\"warning\"}\r\n      showDatePicker={false}\r\n    >\r\n      <ListGroup as=\"ul\" variant=\"flush\">\r\n        {examTitles &&\r\n          examTitles.map((exam, index) => {\r\n            if (index < 6)\r\n              return (\r\n                <ListGroup.Item key={index} as=\"li\" className=\"\">\r\n                  {/* <Badge variant=\"info\" className=\"rounded p-1\"> */}\r\n                  <MdInfo size=\"1.5em\" color=\"magenta\" />\r\n                  {/* </Badge> */}\r\n                  <Badge variant=\"light\">{exam.title}</Badge>Exam attempted{\" \"}\r\n                  <Badge variant=\"danger\">{stat[index].attemptNumbers}</Badge>{\" \"}\r\n                  times.\r\n                  <p className=\"text-muted pl-3\" style={{ fontSize: \"80%\" }}>\r\n                    last attempt{\" \"}\r\n                    {moment(stat[index].lastAttemptTime)\r\n                      .startOf(\"day\")\r\n                      .fromNow()}\r\n                  </p>\r\n                </ListGroup.Item>\r\n              );\r\n          })}\r\n      </ListGroup>\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default SideCard;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ExamFeaturedCard from \"./mainContentCards/examsFeaturedCard\";\r\nimport ReportCard from \"./mainContentCards/reportCard\";\r\nimport RecentActivityCard from \"./sideCards/recentActivityCard\";\r\n\r\n\r\nconst BigCards = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xl={8} lg={12}>\r\n          <ReportCard />\r\n          <hr />\r\n          <ExamFeaturedCard />\r\n          <hr />\r\n        </Col>\r\n        <Col xl={4}>\r\n          <RecentActivityCard />\r\n          <hr />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BigCards;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n//import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst icon = ({ icon, size, classes }) => (\r\n  <FontAwesomeIcon icon={icon} size={size} className={classes} />\r\n);\r\nexport default icon;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Icon from \"./icon\";\r\n\r\nconst footer = ({ color, heading, value, icon }) => {\r\n  return (\r\n    <Card.Footer className={\"bg-dark\" + \" text-light text-right\"}>\r\n      <span className=\"mr-2\">{heading}</span>\r\n      <span className=\"mr-5\">{value}</span>\r\n      <Icon icon={icon} size=\"md\" className=\"mr-2\" />\r\n    </Card.Footer>\r\n  );\r\n};\r\n\r\nexport default footer;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst cardHeader = ({ heading, color, value, id }) => (\r\n  <Card.Text className=\"text-right text-secondary\">\r\n    <h5>{heading}</h5>\r\n    <h3 className={\"text-\" + color}>{id ? <Link to ={\"exams/\"+id}> {value} </Link> : value}</h3>\r\n  </Card.Text>\r\n);\r\n\r\nexport default cardHeader;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Icon from \"./icon\";\r\n\r\n\r\nconst miniBlock = ({\r\n  heading,\r\n  color,\r\n  value,\r\n  id,\r\n  faIcon,\r\n  footerHeading,\r\n  footerValue,\r\n  faFooterIcon,\r\n}) => {\r\n  return (\r\n    <Card className=\"card-common mt-2\" >\r\n      <Card.Body>\r\n        <Row>\r\n          <Col sm={8}>\r\n            <Header heading={heading} color={color} value={value} id={id}/>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <div className=\"d-flex  align-items-center justify-content-end h-100\">\r\n              <Icon icon={faIcon} size={\"3x\"} classes={\"text-\" + color} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Footer\r\n        color={color}\r\n        heading={footerHeading}\r\n        value={footerValue}\r\n        icon={faFooterIcon}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default miniBlock;\r\n","import React from \"react\";\r\nimport { useIntl } from 'react-intl';\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\n\r\nconst rank = ({ value, footerValue }) => {\r\n  const intl = useIntl();\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({id: \"db.er\", defaultMessage: \"Your Rank\"})}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={\"medal\"}\r\n      footerHeading={intl.formatMessage({id: 'db.ts', defaultMessage: \"Total Student\"})}\r\n      footerValue={footerValue}\r\n      color={\"warning\"}\r\n      faFooterIcon={\"users\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default rank;\r\n","import React from \"react\";\r\nimport { useIntl } from 'react-intl';\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\nconst result = ({ value, footerValue }) => {\r\n  const intl = useIntl();\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({id: \"db.os\", defaultMessage: \"Overall Score\"})}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={\"poll\"}\r\n      footerHeading={intl.formatMessage({id: \"db.of\", defaultMessage: \"Out of\"})}\r\n      footerValue={footerValue}\r\n      color={\"dark\"}\r\n      faFooterIcon={\"balance-scale\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default result;\r\n","import React from \"react\";\r\nimport { useIntl } from 'react-intl';\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\n\r\nconst totalExam = ({ value, footerValue }) => {\r\n  const intl = useIntl();\r\n  \r\n\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({id: 'db.te', defaultMessage: \"Total Exams\"})}\r\n      value={value}\r\n      faIcon={\"file-alt\"}\r\n      footerHeading={intl.formatMessage({id: 'db.et', defaultMessage: \"Exam Taken\"})}\r\n      footerValue={footerValue}\r\n      color={\"info\"}\r\n      faFooterIcon={\"file-import\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default totalExam;\r\n","import React from \"react\";\r\nimport { useIntl } from 'react-intl';\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\n\r\n\r\nconst upcomingExam = ({ value, footerValue,id }) => {\r\n  const intl = useIntl();\r\n  return (\r\n    <MiniBlock\r\n      heading={intl.formatMessage({id: \"db.le\", defaultMessage: \"Latest Exam\"})}\r\n      //\r\n      value={value}\r\n      //\r\n      id={id}\r\n      faIcon={\"file\"}\r\n      footerHeading={intl.formatMessage({id: 'db.so', defaultMessage: \"Start On\"})}\r\n      footerValue={footerValue}\r\n      color={\"success\"}\r\n      faFooterIcon={\"clock\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default upcomingExam;\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Rank from \"./miniInfoBlock/rank\";\r\nimport Result from \"./miniInfoBlock/result\";\r\nimport TotalExam from \"./miniInfoBlock/totalExam\";\r\nimport UpcomingExam from \"./miniInfoBlock/upcomingExam\";\r\n\r\n\r\n\r\nclass MiniCards extends Component {\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { totalExam, rank, upcomingExam, result } = this.props.userExamInfo;\r\n    return (\r\n          <div className=\"d-md-flex justify-content-around flex-wrap\">\r\n            <TotalExam value={totalExam[0]} footerValue={totalExam[1]} />\r\n            <Rank value={rank[0]} footerValue={rank[1]} />\r\n            <UpcomingExam\r\n                value={upcomingExam[0]}\r\n                id={upcomingExam[2]}\r\n                footerValue={moment(upcomingExam[1]).format(\"DD-MM-YYYY\")}\r\n              />\r\n              <Result value={result[0]} footerValue={result[1]} />\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userExamInfo: state.dashboard.userExamInfo,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniCards);\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigCards from \"../../components/dashboard/bigCards/bigCards\";\r\nimport MiniCards from \"../../components/dashboard/miniCards/miniCards\";\r\nimport MetaInfo from \"../../components/seo/metainfo\";\r\nimport { RoutesConfig } from \"../../config/routes.config\";\r\nimport { dashboardStudent } from \"../../store/dashboard\";\r\nimport { resetExamResultLoader } from \"../../store/exams\";\r\nimport { getUserLoader } from \"../../store/user\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(resetExamResultLoader());\r\n    dispatch(getUserLoader());\r\n    setLoading(true);\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + \"/dashboard\")\r\n      .then((response) => {\r\n        setLoading(false);\r\n        if (response.status === 200) {\r\n          dispatch({ type: dashboardStudent.type, payload: response.data });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        console.log(e)\r\n      });\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {\r\n        loading && <Spinner\r\n        animation=\"grow\"\r\n        role=\"status\"\r\n        variant=\"dark\"\r\n        className=\"content-center\"\r\n       >\r\n       </Spinner>\r\n      }\r\n      <MetaInfo {...RoutesConfig.Dashboard.metaInfo} />\r\n\r\n      <MiniCards />\r\n      <hr className=\"my-3\" />\r\n      <BigCards />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { canActivate, rolePermitted } from '../../utils/canActivate';\r\nimport Admin from './admin';\r\nimport General from './dashboard';\r\n\r\n\r\nexport default function Dashboard() {\r\n    const token = useSelector(state=> state.auth.token);\r\n    return (\r\n        <div>\r\n            {canActivate(rolePermitted.mentor, token) \r\n                ? <Admin />\r\n                : <General />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}