{"version":3,"sources":["components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/landing/exam/exam.jsx"],"names":["iconStyle","SocialShare","title","description","url","props","process","className","variant","style","fontSize","quote","hashtag","size","round","body","source","categoryTypeVariant","name","ExamCard","width","height","examId","imgSrc","categoryType","createdAt","free","examLoader","dispatch","useDispatch","token","useSelector","state","auth","intl","useIntl","useState","res","setRes","key","canActivate","rolePermitted","admin","Img","src","Body","Title","fontWeight","Subtitle","map","category","formatMessage","id","defaultMessage","moment","calendar","to","onClick","resetExamResultLoader","disabled","trigger","placement","overlay","PopoverWrapper","React","forwardRef","ref","as","Content","axios","baseURL","method","then","response","catch","error","JSON","stringify","getRndInteger","min","max","Math","floor","random","listCard","exams","landing","authToken","show","setShow","handleClose","onHide","Header","closeButton","toUpperCase","slice","exam","length","imageUrl","filter","cat","Footer","marginTop","position","top","left","i","Exam","get","status","setState","data","e","console","log","this","Component","injectIntl"],"mappings":"qXAWMA,EACI,GADJA,GAEK,EAGLC,EAAc,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,IAAOC,EAAU,6CAGvD,OAFAD,EAAME,6BAAiCF,EAEhC,uCAAKG,UAAU,QAAWF,GAEzB,6BAEA,kBAAC,IAAD,CAAOG,QAAQ,UAAUD,UAAU,WAAWE,MAAO,CAACC,SAAU,UAAhE,YAEA,kBAAC,IAAD,CACAN,IAAKA,EACLO,MAAOR,EACPS,QAASV,EACTK,UAAU,QAGN,kBAAC,IAAD,CAAcM,KAAMb,EAAgBc,MAAOd,KAG/C,kBAAC,IAAD,CACAI,IAAKA,EACLF,MAAOC,EACPS,QAASV,EACTK,UAAU,QAGN,kBAAC,IAAD,CAAaM,KAAMb,EAAgBc,MAAOd,KAG9C,kBAAC,IAAD,CACAI,IAAKA,EACLW,KAAMZ,EACND,MAAOA,EACPK,UAAU,QAGN,kBAAC,IAAD,CAAWM,KAAMb,EAAgBc,MAAOd,KAG5C,kBAAC,IAAD,CACAI,IAAKA,EACLY,OAAQZ,EACRW,KAAMZ,EACND,MAAOA,EACPK,UAAU,QAGN,kBAAC,IAAD,CAAcM,KAAMb,EAAgBc,MAAOd,OAMrDiB,EAAsB,SAACC,GACzB,IAAIV,EAAU,UACd,OAAQU,GACJ,IAAK,WACDV,EAAU,UACV,MACJ,IAAK,OACDA,EAAU,YAMlB,OAAOA,GAGI,SAASW,EAAT,GAA+H,IAAD,IAA3GC,aAA2G,MAArG,MAAqG,MAA9FC,cAA8F,MAAvF,MAAuF,EAAhFC,EAAgF,EAAhFA,OAAQC,EAAwE,EAAxEA,OAAQrB,EAAgE,EAAhEA,MAAOsB,EAAyD,EAAzDA,aAAcrB,EAA2C,EAA3CA,YAAasB,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WACtHC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAGA,EAAMC,KAAKH,SACvCI,EAAOC,cAH4H,EAInHC,mBAAS,MAJ0G,mBAIlIC,EAJkI,KAI7HC,EAJ6H,KAMzI,OACI,oCACI,kBAAC,IAAD,CAAMC,IAAKjB,EAAQf,UAAU,YAAYE,MAAO,CAACW,MAAOA,EAAQ,QAC1DoB,YAAYC,IAAcC,MAAOZ,IAAU,kBAAC,IAAKa,IAAN,CACzCnC,QAAQ,MACRoC,IAAKrB,EACLH,MAAOA,EACPC,OAAQA,IAEZ,kBAAC,IAAKwB,KAAN,KACI,6BACI,kBAAC,IAAKC,MAAN,CAAYrC,MAAO,CAACC,SAAU,SAAUqC,WAAY,QAAS7C,GAE7D,kBAAC,IAAK8C,SAAN,KACCxB,GACGA,EAAayB,KAAI,SAACC,GAAD,OACjB,kBAAC,IAAD,CAAOX,IAAKW,EAAShC,KAAMV,QAASS,EAAoBiC,EAAShC,MAAOX,UAAU,QAC7E2C,EAAShC,WAOtB,yBAAKX,UAAU,aACX,uBAAGA,UAAU,IAAIJ,EAAjB,KAEA,uBAAGI,UAAU,yBACR2B,EAAKiB,cAAc,CAACC,GAAI,QAASC,eAAgB,aADtD,MACuEC,IAAO7B,GAAW8B,cAI3Ff,YAAYC,IAAcC,MAAOZ,IAAU,oCACrC,yBAAKvB,UAAU,iCACX,kBAAC,OAAD,CAAOA,UAAU,aAAaiD,IAAK9B,EAAO,eAAiB,WAAaJ,GACpE,kBAAC,IAAD,CAAQd,QAAQ,kBAAkBiD,QAAS,WACvC7B,EAAS8B,iBAEL,kBAAC,IAAD,CAAkBN,GAAG,YAAYC,eAAe,iBAG5D,kBAAC,OAAD,CAAM9C,UAAU,aAAaiD,GAAI,gBAAkBlC,GAC/C,kBAAC,IAAD,CAAQmC,QAAS,WAAK7B,EAAS8B,gBAA2BlD,QAAQ,gBAC9D,kBAAC,IAAD,CAAkB4C,GAAG,WAAWC,eAAe,YAK3D,kBAACpD,EAAD,CAAaG,IAAK,UAAUkB,EAAQpB,MAAOA,EAAOC,YAAaA,KAItEqC,YAAYC,IAAcC,MAAOZ,IAAU,6BACpC,kBAAC,IAAD,CAAQ6B,UAAU,EAAMnD,QAAQ,UAAUD,UAAU,QAApD,QAGA,kBAAC,IAAD,CAAgBqD,QAAQ,QAAQC,UAAU,MAAMC,QAAS,kBAACC,EAAD,CAAgBX,GAAI9B,EAAQe,IAAKA,EAAKC,OAAQA,EAAQR,MAAOA,EAAOH,WAAYA,KACrI,kBAAC,IAAD,CAAQ8B,QAAS,WAAK7B,EAAS8B,gBAA2BlD,QAAQ,UAAlE,eAahC,IAAMuD,EAAiBC,IAAMC,YAAW,WAAiDC,GAAjD,IAAEd,EAAF,EAAEA,GAAIf,EAAN,EAAMA,IAAKC,EAAX,EAAWA,OAAeX,GAA1B,EAAmBG,MAAnB,EAA0BH,YAAetB,EAAzC,iEACpC,kBAAC,IAAD,eAAS+C,GAAG,gBAAgBc,IAAKA,GAAS7D,GACxC,kBAAC,IAAQyC,MAAT,CAAeqB,GAAG,MAAlB,mCACA,kBAAC,IAAQC,QAAT,KACI,2BACK/B,GAEP,kBAAC,IAAD,CAAQ7B,QAAQ,SAASiD,QAAS,WAE9BY,IAAM,CACFC,QAAShE,qCACTF,IAAK,UAAYgD,EACjBmB,OAAQ,WAEXC,MAAK,SAAAC,GACF9C,IACAW,EAAO,2BAEVoC,OAAM,SAAAC,GACHrC,EAAO,0BAA2BsC,KAAKC,UAAUF,SAZzD,a,uKCjKR,SAASG,EAAcC,EAAKC,GAC1B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAASA,EAIrC,SAASK,EAAT,GAAsD,IAAnClF,EAAkC,EAAlCA,MAAMmF,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,QAAS3D,EAAa,EAAbA,WAC/C4D,EAAYxD,aAAY,SAACC,GAAD,QAAWA,EAAMC,KAAKH,SAC9CI,EAAOC,cAFqD,EAI1CC,oBAAS,GAJiC,mBAI3DoD,EAJ2D,KAIrDC,EAJqD,KAK5DC,EAAc,kBAAMD,GAAQ,IAGhC,OACE,oCACA,kBAAC,IAAD,CAAOD,KAAMA,EAAMG,OAAQD,EAAa7E,KAAM,MAC5C,kBAAC,IAAM+E,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAM/C,MAAP,KACEZ,EAAKiB,cAAc,CAACC,GAAI,WAAYC,eAAgB,SACrD,kBAAC,IAAD,CAAO7C,QAAQ,WAAW,IAAKN,EAAM4F,cAAgB,KACpD5D,EAAKiB,cAAc,CAACC,GAAI,YAAaC,eAAgB,YAGzD,kBAAC,IAAMR,KAAP,KAEI,kBAAC,IAAD,CAAKtC,UAAU,aACf,kBAAC,IAAD,CAAKA,UAAU,2CACT8E,EAAMU,MAAM,GAAG9C,KAAI,SAAC+C,GAAD,OACjB,kBAAC,IAAD,CACEzD,IAAKyD,EAAK5C,GACV9B,OAAU0E,EAAK5C,GACf7B,OAAUyE,EAAKxE,aAAayE,OAAS,EAAI3F,sCAAqC0F,EAAKxE,aAAasD,EAAc,EAAEkB,EAAKxE,aAAayE,SAASC,SAAW,0BACtJhG,MAAS8F,EAAK9F,MACdsB,aAAgBwE,EAAKxE,aAAayE,OAAS,EAAID,EAAKxE,aAAe,CAAC,CAACN,KAAM,kBAC3Ef,YAAe6F,EAAK7F,YACpBsB,UAAauE,EAAKvE,UAClBC,MAAS6D,GAAaS,EAAKxE,aAAa2E,QAAO,SAAAC,GAAG,MAAgB,SAAbA,EAAIlF,QAAiB+E,OAAS,EACnFtE,WAAcA,UAQ5B,kBAAC,IAAM0E,OAAP,KACE,kBAAC,IAAD,CAAQ7F,QAAQ,YAAYiD,QAASiC,GAArC,WAKF,yBAAKnF,UAAU,gCAAgCE,MAAO,CAAC6F,UAAW,UAClE,wBAAI/F,UAAU,8CAA8CE,MAAO,CAAC8F,SAAU,WAAYC,IAAI,QAAQC,KAAK,SAAWvG,EAAM4F,cAAgB,IAA5I,KAAqJR,GAAW,kBAAC,IAAD,CAAO9E,QAAQ,QAAQD,UAAU,QAAjC,IAA0C8E,EAAMY,QAAhN,KACA,yBAAK1F,UAAU,QACb,yBAAKA,UAAU,2CACT8E,EAAMY,OAAS,GAAK,uBAAG1F,UAAU,oBAAb,IAAkCL,EAAQ,IAAMgC,EAAKiB,cAAc,CAACC,GAAI,gBAAiBC,eAAgB,yBAAzG,KACpBgC,EAAMpC,KAAI,SAAC+C,EAAKU,GAAN,OAAcA,EAAI,EAC1B,kBAAC,IAAD,CACEnE,IAAKyD,EAAK5C,GACV9B,OAAU0E,EAAK5C,GACf7B,OAAUyE,EAAKxE,aAAayE,OAAS,EAAI3F,sCAAoC0F,EAAKxE,aAAasD,EAAc,EAAEkB,EAAKxE,aAAayE,SAASC,SAAW,0BACrJhG,MAAS8F,EAAK9F,MACdsB,aAAgBwE,EAAKxE,aAAayE,OAAS,EAAID,EAAKxE,aAAe,CAAC,CAACN,KAAM,kBAC3Ef,YAAe6F,EAAK7F,YACpBsB,UAAauE,EAAKvE,UAClBC,MAAS6D,GAAaS,EAAKxE,aAAa2E,QAAO,SAAAC,GAAG,MAAgB,SAAbA,EAAIlF,QAAiB+E,OAAS,EACnFtE,WAAcA,IAEd,QAKR2D,GAAW,yBAAK/E,UAAU,sCACzB8E,EAAMY,OAAS,EAAI,kBAAC,IAAD,CAAQxF,MAAO,CAACY,OAAO,OAAQD,MAAO,SAAUqC,QAAS,WA/D9DgC,GAAQ,KAiEnBvD,EAAKiB,cAAc,CAACC,GAAI,WAAYC,eAAgB,YAFpC,KAE6D,S,sIC5EvFsD,E,YAEJ,WAAYtG,GAAO,IAAD,8BAChB,+CACK2B,MAAQ,CACXqD,MAAO,IAHO,E,iFAME,IAAD,OACjBhB,IAAMuC,IAAItG,qDACTkE,MAAK,SAAAnC,GACa,KAAdA,EAAIwE,QAAe,EAAKC,SAAS,CAACzB,MAAOhD,EAAI0E,UAEjDrC,OAAM,SAAAsC,GACLC,QAAQC,IAAIF,Q,+BAKd,OAAQ,yBAAK5D,GAAG,OAAO7C,UAAU,eAC/B,kBAAC,IAAD,CAAaL,MAAOiH,KAAK9G,MAAM6B,KAAKiB,cAAc,CAACC,GAAG,QAASC,eAAgB,uBAAwBgC,MAAO8B,KAAKnF,MAAMqD,MAAOC,SAAS,S,GApB5H8B,aAyBJC,sBAAWV","file":"static/js/34.72ae8f6c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport { Badge, Button, Card, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { EmailIcon, EmailShareButton, FacebookIcon, FacebookShareButton, LinkedinIcon, LinkedinShareButton, TwitterIcon, TwitterShareButton } from 'react-share';\r\nimport { resetExamResultLoader } from '../../../store/exams';\r\nimport { canActivate, rolePermitted } from '../../../utils/canActivate';\r\n\r\nconst iconStyle = {\r\n    size: 35,\r\n    round: true\r\n}\r\n\r\nconst SocialShare = ({title, description, url,...props})=> {\r\n    url = process.env.REACT_APP_BASE_URL + url;\r\n\r\n    return <div className=\"mt-3\" {...props}>\r\n\r\n            <hr />\r\n\r\n            <Badge variant=\"success\" className=\"mr-1 p-1\" style={{fontSize: '.8rem'}}>Share on</Badge>\r\n\r\n            <FacebookShareButton\r\n            url={url}\r\n            quote={description}\r\n            hashtag={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </FacebookShareButton>\r\n\r\n            <TwitterShareButton\r\n            url={url}\r\n            title={description}\r\n            hashtag={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </TwitterShareButton>\r\n\r\n            <EmailShareButton\r\n            url={url}\r\n            body={description}\r\n            title={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </EmailShareButton>\r\n\r\n            <LinkedinShareButton\r\n            url={url}\r\n            source={url}\r\n            body={description}\r\n            title={title}\r\n            className=\"mr-1\"\r\n            \r\n            >\r\n                <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n            </LinkedinShareButton>\r\n\r\n        </div>\r\n    };\r\n\r\nconst categoryTypeVariant = (name)=>{\r\n    let variant = \"primary\"\r\n    switch (name) {\r\n        case 'Featured':\r\n            variant = \"warning\"\r\n            break;\r\n        case 'Free':\r\n            variant = \"secondary\"\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return variant;\r\n}\r\n\r\nexport default function ExamCard({width=\"350\", height=\"180\", examId, imgSrc, title, categoryType, description, createdAt, free, examLoader}) {\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(state=> state.auth.token);\r\n    const intl = useIntl();\r\n    const [res, setRes] = useState(null);\r\n\r\n    return (\r\n        <>\r\n            <Card key={examId} className=\"mr-2 mb-2\" style={{width: width + \"px\"}} >\r\n                {!canActivate(rolePermitted.admin, token) && <Card.Img\r\n                    variant=\"top\"\r\n                    src={imgSrc}\r\n                    width={width}\r\n                    height={height}\r\n                />}\r\n                <Card.Body>\r\n                    <div>\r\n                        <Card.Title style={{fontSize: '1.4rem' ,fontWeight: '900'}}>{title}</Card.Title>\r\n                        \r\n                        <Card.Subtitle>\r\n                        {categoryType &&\r\n                            categoryType.map((category) => (\r\n                            <Badge key={category.name} variant={categoryTypeVariant(category.name)} className=\"mr-1\">\r\n                                {category.name}\r\n                            </Badge>\r\n                            ))}\r\n                        </Card.Subtitle>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"mt-1 pt-2\">\r\n                        <p className=\"\">{description} </p>\r\n                \r\n                        <p className=\"text-muted text-right\">\r\n                            {intl.formatMessage({id: 'db.so', defaultMessage: \"Start on\"})} : {moment(createdAt).calendar()}\r\n                        </p>\r\n                    </div>\r\n        \r\n                    {!canActivate(rolePermitted.admin, token) && <> \r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <Link  className=\"text-white\" to={(free ? \"/exams/free/\" : \"/exams/\") + examId}>\r\n                                    <Button variant=\"outline-primary\" onClick={()=>{\r\n                                        dispatch(resetExamResultLoader());\r\n                                        }}>\r\n                                            <FormattedMessage id=\"btn.start\" defaultMessage=\"Start Exam\"/>\r\n                                    </Button>\r\n                                </Link>\r\n                                <Link className=\"text-white\" to={\"/result/rank/\" + examId}>\r\n                                    <Button onClick={()=>{dispatch(resetExamResultLoader())}} variant=\"outline-dark\">\r\n                                        <FormattedMessage id=\"btn.rank\" defaultMessage=\"Rank\"/>\r\n                                    </Button>\r\n                                </Link>\r\n                                \r\n                            </div>\r\n                            <SocialShare url={\"/exams/\"+examId} title={title} description={description} />                    \r\n                        </> \r\n                    }\r\n\r\n                    {canActivate(rolePermitted.admin, token) && <div>\r\n                            <Button disabled={true} variant=\"primary\" className=\"mr-3\" >\r\n                                Edit\r\n                            </Button>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={<PopoverWrapper id={examId} res={res} setRes={setRes} token={token} examLoader={examLoader} />}>\r\n                                <Button onClick={()=>{dispatch(resetExamResultLoader())}} variant=\"danger\">\r\n                                    Delete\r\n                                </Button>\r\n                            </OverlayTrigger>    \r\n                            \r\n                        </div>}\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst PopoverWrapper = React.forwardRef(({id, res, setRes, token, examLoader, ...props}, ref)=>(\r\n    <Popover id=\"popover-basic\" ref={ref} {...props} >\r\n      <Popover.Title as=\"h3\">Are You Sure To delete The Exam</Popover.Title>\r\n      <Popover.Content>\r\n          <p>\r\n              {res}\r\n          </p>\r\n        <Button variant=\"danger\" onClick={()=>{\r\n            //setAuthorizationToken(token);\r\n            axios({\r\n                baseURL: process.env.REACT_APP_SITE_URL,\r\n                url: '/exams/' + id,\r\n                method: 'delete',\r\n              })\r\n            .then(response=>{\r\n                examLoader();\r\n                setRes(\"Successfully Deleted\");\r\n            })\r\n            .catch(error=>{\r\n                setRes(\"Can not delete the exam\"+ JSON.stringify(error));\r\n            })\r\n        }}>Yes</Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  ));\r\n  ","import React, { useState } from 'react';\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap';\r\nimport { useIntl } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"./examCard\";\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\n\r\nexport default function listCard({title,exams,landing, examLoader}) {\r\n  const authToken = useSelector((state) => state.auth.token ? true : false);\r\n  const intl = useIntl();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n      <Modal show={show} onHide={handleClose} size={\"xl\"}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n           {intl.formatMessage({id: 'btn.more', defaultMessage: \"More\"})}\r\n           <Badge variant=\"warning\">{\" \" +title.toUpperCase() + \" \"}</Badge> \r\n           {intl.formatMessage({id: 'btn.exams', defaultMessage: \"Exams\"})}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className=\"mt-3 ml-3\">\r\n            <Col className=\"d-flex justify-content-center flex-wrap\">\r\n                { exams.slice(2).map((exam) => ( \r\n                    <ExamCard \r\n                      key={exam.id}\r\n                      examId = {exam.id} \r\n                      imgSrc = {exam.categoryType.length > 0 ? process.env.REACT_APP_SITE_URL+\"/\"+  exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl : '/assets/image/uncat.jpg'}\r\n                      title = {exam.title}\r\n                      categoryType = {exam.categoryType.length > 0 ? exam.categoryType : [{name: 'Uncategorized'}]}\r\n                      description = {exam.description}\r\n                      createdAt = {exam.createdAt}\r\n                      free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                      examLoader = {examLoader}\r\n                    />                \r\n                ))}\r\n                \r\n            </Col>\r\n          </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        <div className=\"mb-2 border position-relative\" style={{marginTop: \"100px\"}}>\r\n        <h3 className=\"text-center bg-warning text-light px-2 py-1\" style={{position: \"absolute\", top:\"-30px\",left:\"50px\" }}>{title.toUpperCase() + \" \"} { (!landing && <Badge variant=\"light\" className=\"ml-2\"> {exams.length}</Badge> )} </h3>\r\n        <div className=\"mt-4\">\r\n          <div className=\"d-flex justify-content-around flex-wrap\">\r\n              { exams.length < 1 && <p className=\"lead text-danger\"> {title + \" \" + intl.formatMessage({id: 'noExamCreated', defaultMessage: \"Exams is not created\"})} </p>}\r\n              { exams.map((exam,i) => ( i < 3 ?\r\n                  <ExamCard\r\n                    key={exam.id} \r\n                    examId = {exam.id} \r\n                    imgSrc = {exam.categoryType.length > 0 ? process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl : '/assets/image/uncat.jpg'}\r\n                    title = {exam.title}\r\n                    categoryType = {exam.categoryType.length > 0 ? exam.categoryType : [{name: 'Uncategorized'}]}\r\n                    description = {exam.description}\r\n                    createdAt = {exam.createdAt}\r\n                    free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                    examLoader = {examLoader}\r\n                  />\r\n                  : \"\"\r\n              \r\n              ))}\r\n              \r\n          </div>\r\n          {!landing && <div className=\"my-2 d-flex justify-content-center\">\r\n            {exams.length > 2 ? <Button style={{height:\"50px\", width: \"150px\"}} onClick={()=>{\r\n              handleShow()\r\n            }}>{intl.formatMessage({id: 'btn.more', defaultMessage: \"More...\"})}.</Button> : \"\"}\r\n          </div>}\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport React, { Component } from \"react\";\r\nimport { injectIntl } from 'react-intl';\r\nimport GallaryCard from '../../../components/exams/gallary/gallaryCard';\r\n//import \"./exam.scss\";\r\n\r\n\r\nclass Exam extends Component{\r\n\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      exams: []\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    axios.get(process.env.REACT_APP_SITE_URL + '/exams/featured')\r\n    .then(res=>{\r\n      if(res.status == 200) this.setState({exams: res.data});\r\n    })\r\n    .catch(e=>{\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (<div id=\"exam\" className=\"mb-5 offset\">\r\n      <GallaryCard title={this.props.intl.formatMessage({id:'db.fe', defaultMessage: \"Our Featured Exams\"})} exams={this.state.exams} landing={true}/>\r\n    </div>)\r\n  }\r\n};\r\n\r\nexport default injectIntl(Exam);\r\n"],"sourceRoot":""}