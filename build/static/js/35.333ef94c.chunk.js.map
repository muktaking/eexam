{"version":3,"sources":["container/exams/component/examByCat.js","container/exams/examListsByCatShower.js"],"names":["ExamByCat","exam","dispatch","useDispatch","authToken","useSelector","state","auth","token","Col","sm","Badge","variant","style","position","top","left","categoryType","filter","cat","name","length","className","size","title","moment","createdAt","format","to","id","Button","onClick","resetExamResultLoader","defaultMessage","description","ExamListsByCatShower","useParams","idA","split","useState","exams","setExams","useEffect","axios","get","process","then","response","data","catch","e","console","log","map","Row","width","key"],"mappings":"gQASe,SAASA,EAAT,GAA4B,IAARC,EAAO,EAAPA,KACzBC,EAAWC,cACXC,EAAYC,aAAY,SAACC,GAAD,QAAWA,EAAMC,KAAKC,SACpD,OACI,oCACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACD,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,MAAO,CAACC,SAAU,WAAYC,IAAK,QAASC,KAAM,WACrEZ,GAAaH,EAAKgB,aAAaC,QAAO,SAAAC,GAAG,MAAgB,SAAbA,EAAIC,QAAiBC,OAAS,GAAK,QAErF,wBAAIC,UAAU,IACV,kBAAC,IAAD,CAAcC,KAAK,WACnB,0BAAMD,UAAU,QACXrB,EAAKuB,QAGd,yBAAKF,UAAU,IACX,kBAAC,IAAD,CAASC,KAAK,WACd,kBAACZ,EAAA,EAAD,CAAOW,UAAU,OAAOV,QAAQ,SAASa,IAAOxB,EAAKyB,WAAWC,OAAO,yBAG/E,kBAAClB,EAAA,EAAD,CAAKC,GAAI,EAAGY,UAAU,6BAClB,kBAAC,OAAD,CAAOA,UAAU,aAAaM,KAAOxB,GAAaH,EAAKgB,aAAaC,QAAO,SAAAC,GAAG,MAAgB,SAAbA,EAAIC,QAAiBC,OAAS,EAAK,eAAiB,WAAapB,EAAK4B,IACnJ,kBAACC,EAAA,EAAD,CAAQlB,QAAQ,gBAAgBmB,QAAS,WACrC7B,EAAS8B,iBAEL,kBAAC,IAAD,CAAkBH,GAAG,YAAYI,eAAe,kBAIhE,kBAACxB,EAAA,EAAD,CAAKC,GAAI,IACL,6BACA,uBAAGY,UAAU,IACT,kBAAC,IAAD,CAAYC,KAAK,WACjB,0BAAMD,UAAU,QAASrB,EAAKiC,gBClCvC,SAASC,IAAwB,IACrCN,EAAMO,cAANP,GACFT,EAAc,KAARiB,EAAc,KACzB,GAAGR,EAAH,OAAqBA,EAAGS,MAAM,KAA9B,mBAAQlB,EAAR,KAAciB,EAAd,KAH2C,MAIjBE,mBAAS,IAJQ,mBAIpCC,EAJoC,KAI7BC,EAJ6B,KAgB3C,OAVAC,qBAAU,WACNC,IAAMC,IAAIC,qDAAsDR,GAC/DS,MAAK,SAAAC,GACFN,EAASM,EAASC,SAErBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAGlB,IAEE,yBAAK5B,UAAU,QACX,wBAAIA,UAAU,eACV,0BAAMA,UAAU,QAAhB,yBACA,kBAACX,EAAA,EAAD,CAAOC,QAAQ,WAAWQ,IAE9B,uBAAGE,UAAU,2BAA2BkB,EAAMnB,OAAS,GAAK,wBAC5D,yBAAKC,UAAU,kCACVkB,EAAMa,KAAI,SAAApD,GAAI,OAAE,kBAACqD,EAAA,EAAD,CAAKhC,UAAU,kCAAkCT,MAAO,CAAC0C,MAAO,UAC7E,kBAACvD,EAAD,CAAWwD,IAAKvD,EAAKuB,MAAOvB,KAAMA,U","file":"static/js/35.333ef94c.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport React from 'react';\r\nimport { Badge, Button, Col } from \"react-bootstrap\";\r\nimport { BsClock, BsFileText, BsLayersFill } from \"react-icons/bs\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { resetExamResultLoader } from \"../../../store/exams\";\r\n\r\nexport default function ExamByCat({exam}) {\r\n    const dispatch = useDispatch();\r\n    const authToken = useSelector((state) => state.auth.token ? true : false);\r\n    return (\r\n        <>\r\n            <Col sm={7}>\r\n                    <Badge variant=\"warning\" style={{position: \"absolute\", top: '-25px', left: \"-10px\"}}>\r\n                        {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 && \"Free\" }\r\n                    </Badge>\r\n                    <h4 className=\"\">\r\n                        <BsLayersFill size=\"1.5rem\" />\r\n                        <span className=\"ml-2\" >\r\n                            {exam.title}\r\n                        </span>\r\n                    </h4>\r\n                    <div className=\"\">\r\n                        <BsClock size=\"1.5rem\" /> \r\n                        <Badge className=\"ml-2\" variant=\"light\">{moment(exam.createdAt).format('YYYY-MM-DD hh:mm A')}</Badge>\r\n                    </div>\r\n                </Col>\r\n                <Col sm={5} className=\"d-flex align-items-center\">\r\n                    <Link  className=\"text-white\" to={((!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0) ? \"/exams/free/\" : \"/exams/\") + exam.id}>\r\n                        <Button variant=\"outline-light\" onClick={()=>{\r\n                            dispatch(resetExamResultLoader());\r\n                            }}>\r\n                                <FormattedMessage id=\"btn.start\" defaultMessage=\"Start Exam\"/>\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n                <Col sm={12}>\r\n                    <hr />   \r\n                    <p className=\"\">\r\n                        <BsFileText size=\"1.5rem\" />\r\n                        <span className=\"ml-2\" >{exam.description}</span>                     \r\n                    </p>\r\n                </Col>            \r\n        </>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Badge, Row } from \"react-bootstrap\";\r\nimport { useParams } from 'react-router';\r\nimport ExamByCat from \"./component/examByCat\";\r\n\r\n\r\n\r\nexport default function ExamListsByCatShower() {\r\n    const {id} = useParams();\r\n    let [name, idA] = [null, null];\r\n    if(id) [name, idA] = id.split('-');\r\n    const [exams, setExams] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        axios.get(process.env.REACT_APP_SITE_URL + \"/exams/category/\" + idA)\r\n        .then(response=>{\r\n            setExams(response.data);\r\n        })\r\n        .catch(e=>{\r\n            console.log(e)\r\n        })\r\n        \r\n    },[])\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h2 className=\"text-center\">\r\n                <span className=\"mr-2\">Available Exams Under</span>\r\n                <Badge variant=\"warning\">{name}</Badge>\r\n            </h2>\r\n            <p className=\"text-center text-danger\">{exams.length < 1 && \"NO Exam is avaiable.\"}</p>\r\n            <div className=\"d-flex justify-content-between\">\r\n                {exams.map(exam=><Row className=\"m-2 p-3 bg-secondary text-white\" style={{width: \"350px\"}}>\r\n                    <ExamByCat key={exam.title} exam={exam} />\r\n                </Row>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}