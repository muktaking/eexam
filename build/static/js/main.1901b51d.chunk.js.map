{"version":3,"sources":["utils/canActivate.js","components/navbar/navbarHome.jsx","container/404.js","container/landing/contact/contact.jsx","store/api.js","store/exams.js","components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/landing/exam/exam.jsx","container/landing/miniBlock/miniBlock.jsx","container/landing/feature/feature.jsx","container/landing/home/home.jsx","container/landing/landing.jsx","store/user.js","components/sidebar/sidebar.jsx","components/sidebar/sidebarMini.jsx","components/topbar/topbar.jsx","store/category.js","utils/errorHandler.js","utils/setAuthorizationToken.js","container/category/categoryForm.js","container/category/category.jsx","components/dashboard/bigCards/bigCard/bigCard.jsx","components/dashboard/bigCards/mainContentCards/examsFeaturedCard.jsx","components/dashboard/bigCards/mainContentCards/reportCard.jsx","components/dashboard/bigCards/sideCards/recentActivityCard.jsx","components/dashboard/bigCards/bigCards.jsx","components/dashboard/miniCards/miniInfoBlock/miniBlock/icon.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/footer.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/header.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/index.js","components/dashboard/miniCards/miniInfoBlock/rank.js","components/dashboard/miniCards/miniInfoBlock/result.js","components/dashboard/miniCards/miniInfoBlock/totalExam.js","components/dashboard/miniCards/miniInfoBlock/upcomingExam.js","components/dashboard/miniCards/miniCards.jsx","store/dashboard.js","container/dashboard/dashboard.jsx","store/examPaper.js","components/examBuilder/card/card.jsx","components/examBuilder/examSpec.jsx","components/examBuilder/filter.jsx","components/examBuilder/selectedQuestionsPreview.jsx","components/pagination/pagination.jsx","store/question.js","utils/paginate.js","container/examBuilder/examBuilder.js","container/exams/examLists.js","components/exams/paper/question/stem.jsx","components/exams/paper/question/question.jsx","components/navbar/subNavBar.js","container/exams/examTaker.js","container/question/questionsUpload.jsx","container/question/questionStem.view.jsx","container/question/questionView.jsx","container/question/question.js","container/result/rank.js","components/result/gist.js","components/result/stem.js","container/result/result.js","container/layout.jsx","store/auth.js","container/registration/login.jsx","container/registration/logout.jsx","container/registration/signup.jsx","container/routePages.jsx","App.jsx","store/index.js","index.js","store/middleware/index.js"],"names":["rolePermitted","canActivate","role","token","jwtDecode","connect","state","isAuthenticated","auth","props","intl","useIntl","itemsName","formatMessage","id","defaultMessage","pagesName","pages","Navbar","bg","variant","fixed","expand","to","className","Toggle","aria-controls","Collapse","Nav","map","value","index","Item","key","as","isLanding","activeClass","spy","smooth","offset","duration","href","activeClassName","pathname","showUnder","icon","size","transform","NotFound","style","top","this","location","message","Component","contact","Row","Col","md","target","rel","slice","createSlice","name","initialState","result","error","reducers","apiCallBegun","api","action","apiCallSuccess","payload","apiCallFail","apiCallReset","actions","questions","questionIdsByOrder","singleQuestionMark","singleStemMark","penaltyMark","timeLimit","examResult","totalMark","totalScore","totalPenaltyMark","totalScorePercentage","timeTakenToComplete","rank","exam","examError","exams","resetExamResult","getAllExams","getExamById","forEach","e","push","getFreeExamById","getExamError","resetExamError","postExamById","resultArray","examRankById","postExamError","categoryTypeVariant","ExamCard","width","examId","imgSrc","title","categoryType","description","createdAt","free","Card","Img","src","Body","Title","fontSize","fontWeight","Subtitle","category","Badge","Text","moment","calendar","Button","onClick","listCard","landing","authToken","useSelector","useState","show","setShow","handleClose","Modal","onHide","Header","closeButton","toUpperCase","process","imageUrl","filter","cat","length","Footer","marginTop","position","left","i","min","max","Math","floor","random","height","Exam","axios","get","then","res","status","setState","data","catch","console","log","injectIntl","miniBlock","heading","para","feature","features","faIcons","Jumbotron","xs","home","firstName","lastName","userName","email","avatar","getUser","user","avater","getUserLoader","dispatch","url","method","onSuccess","type","sendToken","Sidebar","classes","sideNav","join","sideNavLink","fa","menuName","navLinks","onGetUserLoader","Brand","styles","exact","topbar","isLoggedIn","paddingLeft","pageName","categories","catHierarchy","getCategory","fetchCategory","errorHandler","response","responseData","statusCode","v","property","Object","values","constraints","toString","setAuthorizationToken","defaults","headers","common","CategoryForm","submitHandler","handleChange","formErrors","selectOptionValueRef","showEditCategoryAccordionStateHandler","Accordion","defaultActiveKey","eventKey","Form","onSubmit","enctype","Group","controlId","Label","Control","placeholder","onChange","ref","categorySlug","slug","replace","selected","parentId","order","image","formValid","rest","valid","Category","resetState","isEditCategory","popover","Popover","Content","deleteCategory","hideResponse","preventDefault","current","FormData","keys","append","loading","request","baseURL","responseClass","onFetchCategoryLoader","setTimeout","editCategorysubmitHandler","files","validator","isLength","contains","isInt","isMongoId","isNumeric","isEmpty","showEditCategoryComponent","React","createRef","delete","Helmet","Spinner","animation","Alert","OverlayTrigger","trigger","placement","rootClose","overlay","disabled","onCreateCategoryloader","createCategory","BigCard","startDate","Date","endDate","startHandleChange","date","endHandleChange","reportHandler","header","showDatePicker","children","ExamsFeaturedCard","featuredExams","dashboard","headerColor","ListGroup","ReportCard","userExamStat","labels","_","examTitles","datasets","label","stat","averageScore","toFixed","fill","borderColor","backgroundColor","borderWidth","maxBarThickness","barPercentage","options","responsive","scales","yAxes","ticks","beginAtZero","SideCard","color","attemptNumbers","lastAttemptTime","startOf","fromNow","BigCards","xl","lg","footer","cardHeader","faIcon","footerHeading","footerValue","faFooterIcon","sm","totalExam","upcomingExam","MiniCards","userExamInfo","format","dashboardStudent","Dashboard","useDispatch","useEffect","ids","success","selectedQuestions","onLoading","onError","selectedQuestionsLoader","card","headerBgColor","showHeader","centeredStyle","zIndex","ExamSpec","hideMsg","setHideMsg","selectedQuestionIds","examPaper","successMsg","errorMsg","initialValues","questionStemLength","validate","onSubmitHandler","errors","handleSubmit","onClose","dismissible","JSON","stringify","multiple","examSpec","alert","defaultValue","SelectedQuestionsPreview","finalSelectedQuestions","setFinalSelectedQuestions","finalSelectedQuestionIds","setFinalSelectedQuestionIds","question","qText","ListGroupItem","pagination","itemsCount","pageSize","onPageHandler","currentPage","pageCount","ceil","items","number","Pagination","active","getQuestions","paginate","pageNumber","startIndex","take","ExamPaper","handleShow","checkHandleChange","isChecked","checked","split","preState","checkedQuestionIds","includes","checkedQuestions","actionHandleChange","onGetQuestionByCategoryLoader","page","onGetQuestionLoader","bottom","right","FormCheck","Check","inline","defaultChecked","onSelectedQuestionsLoader","getQuestionByCategoryLoader","ExamLists","onGetAllExamsLoader","onResetExamResult","questionStemView","qType","stem","QuestionForm","stems","Completionist","renderer","hours","minutes","seconds","completed","ExamTaker","now","timeExpired","modalShow","arrowState","showPagination","answers","answerIds","Set","modalHide","onHandleChange","add","onSwithchHandleChange","find","o","onPostFreeExamByIdLoader","match","params","onPostExamByIdLoader","onResetExamLoader","onGetExamByIdLoader","onGetFreeExamByIdLoader","onComplete","Switch","onTick","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","prevPageText","nextPageText","getExamByIdLoader","getFreeExamByIdLoader","postExamByIdLoader","postFreeExamByIdLoader","withRouter","questionUpload","categoryRef","CategorySlug","InputGroup","Prepend","showEditQuestionAccordionStateHandler","stemAmount","Question","aStemSba","isIn","test","qStem","aStem","fbStem","onCreateQuestionLoader","uploadHandler","file","post","uploadedExcelQuestion","errorResponse","toastShow","Toast","questionData","config","createQuestionLoader","onUploadQuestionLoader","uploadQuestionLoader","Rank","onExamRankByLoader","horizontal","Table","striped","bordered","hover","ind","userId","score","attempts","examRankByIdLoader","Gist","bgColor","answerStatus","QTypeNumber","answer","QType","Result","humanize","item","stemResult","lassName","generalFeedback","Image","InnerContent","Container","fluid","path","component","ExamBuilder","render","bmBurgerButton","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","bmMorphShape","bmItemList","bmItem","display","bmOverlay","authStart","authSuccess","accessToken","expireIn","authFail","logout","checkAuthTimeOut","expirationTime","Home","username","password","errorMessage","isValid","onAuth","isEmail","noValidate","onStart","onAutoAuth","localStorage","getItem","Logout","onLogoutLoader","removeItem","SignUp","isAlphanumeric","matches","repeatPassword","equals","passwordRef","gender","history","novalidate","routes","Login","Signup","Landing","LogoutPage","App","onTryAutologin","titleTemplate","defaultTitle","lang","amp","content","expirationDate","getTime","combineReducers","apiReducer","authReducer","userReducer","categoryReducer","questionReducer","examPaperReducer","examsReducer","dashboardReducer","library","fab","faHome","faUser","faEnvelope","faShoppingCart","faChartLine","faChartBar","faTable","faWrench","faFileAlt","faSearch","faComments","faBell","faSignOutAlt","faSync","faFileImport","faMedal","faClock","faPoll","faBalanceScale","faUsers","faFile","faCalendarAlt","faStar","faBars","faCloud","faHourglass","faThumbsUp","faQuoteLeft","faArrowUp","store","configureStore","reducer","rootReducers","middleware","getDefaultMiddleware","getState","next","a","async","setItem","ReactDOM","locale","Bangla","messages","document","getElementById"],"mappings":"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","file":"static/js/main.1901b51d.chunk.js","sourcesContent":["import jwtDecode from \"jwt-decode\";\r\n\r\nexport const rolePermitted = {\r\n  guest: 0,\r\n  student: 1,\r\n  mentor: 2,\r\n  moderator: 3,\r\n  coordinator: 4,\r\n  admin: 5,\r\n};\r\n\r\nexport const canActivate = (role, token) => {\r\n  const tokenRole = token ? jwtDecode(token).role : -1;\r\n  return tokenRole >= role;\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n//import Scrollspy from \"react-scrollspy\";\r\nimport { Link as LinkScroll } from \"react-scroll\";\r\nimport ScrollToTop from 'react-scroll-up';\r\n\r\n//import Spinner from \"react-bootstrap/Spinner\";\r\n//import \"./navbarLanding.css\";\r\n\r\nconst navbarHome = (props) => {\r\n  const intl = useIntl()\r\n  const itemsName = [intl.formatMessage({id: 'btn.home', defaultMessage: \"home\"}),intl.formatMessage({id: 'btn.contact', defaultMessage: \"contact\"})];\r\n  const pagesName = props.isAuthenticated\r\n    ? [intl.formatMessage({id:'btn.db',defaultMessage: \"dashboard\"}), \r\n    intl.formatMessage({id: 'btn.exams', defaultMessage: \"exams\"}),\r\n    intl.formatMessage({id: 'btn.logout', defaultMessage: \"logout\"})]\r\n    : [\r\n      intl.formatMessage({id: 'btn.exams', defaultMessage: \"exams\"}),\r\n      intl.formatMessage({id: 'btn.signup', defaultMessage: \"signup\"}), \r\n      intl.formatMessage({id: 'btn.login', defaultMessage: \"login\"})];\r\n  const items = [\"home\", \"contact\"];\r\n  const pages = props.isAuthenticated\r\n    ? [\"dashboard\",\"exams\" ,\"logout\"]\r\n    : [\"exams\",\"signup\", \"login\"];\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"md\">\r\n      {/* {props.auth.loading && (\r\n        <Spinner\r\n          animation=\"border\"\r\n          role=\"status\"\r\n          variant=\"light\"\r\n          className=\"mr-2\"\r\n        ></Spinner>\r\n      )} */}\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        Exam Point\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"navbarResponsive\" />\r\n      <Navbar.Collapse id=\"navbarResponsive\">\r\n        <Nav className=\"ml-auto\">\r\n          {/* <Scrollspy\r\n          items={items}\r\n          currentClassName={\"active\"}\r\n          className=\"navbar-nav ml-auto\"\r\n          offset={-80}\r\n        > */}\r\n          {items.map((value, index) => (\r\n            <Nav.Item key={value} as=\"li\" className=\"mr-3\">\r\n              {props.isLanding ? (\r\n                <LinkScroll\r\n                  activeClass=\"active\"\r\n                  to={value}\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-50}\r\n                  duration={500}\r\n                  // //onSetActive={this.handleSetActive}\r\n                  href={\"/\"}\r\n                  className=\"nav-link\"\r\n                  //to={{ pathname: \"/\" }}\r\n                >\r\n                  {itemsName[index]}\r\n                </LinkScroll>\r\n              ) : (\r\n                <HashLink\r\n                  to={\"/#\" + value}\r\n                  className=\"nav-link\"\r\n                  activeClassName=\"active\"\r\n                >\r\n                  {itemsName[index]}\r\n                </HashLink>\r\n              )}\r\n            </Nav.Item>\r\n          ))}\r\n          {pages.map((value,index) => (\r\n            <Nav.Item key={value} as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/\" + value }}\r\n                className=\"nav-link\"\r\n              >\r\n                {pagesName[index]}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n          {/* </Scrollspy> */}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      {props.isLanding ? (\r\n        <ScrollToTop showUnder={160}>\r\n          <FontAwesomeIcon icon={\"arrow-up\"} size=\"3x\" transform=\"shrink-4\" />\r\n        </ScrollToTop>\r\n      ) : null}\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(navbarHome);\r\n","import React, { Component } from \"react\";\r\nimport \"../assets/scss/section/registration.scss\";\r\nimport NavbarHome from \"../components/navbar/navbarHome\";\r\n\r\n\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"registration\">\r\n        {/* {authRedirect} */}\r\n        <NavbarHome isLanding={false} />\r\n        {/* Landing */}\r\n        <div className=\"landing\">\r\n          <div className=\"home-wrap\">\r\n            <div className=\"home-inner\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"caption text-center\" style={{ top: \"15%\" }}>\r\n          {/* <Spinner animation=\"border\" role=\"status\"></Spinner> */}\r\n          <h1>404-Page</h1>\r\n          <p className=\"lead\">{this.props.location.state ? this.props.location.state.message : \"Your Desired Content -> Not Found\"}</p>\r\n        </div>\r\n        {/* End of Landing */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n//import \"./contact.scss\";\r\n\r\nconst contact = props => {\r\n  const socials = [\r\n    [\"fab\", \"facebook-square\"],\r\n    [\"fab\", \"twitter-square\"],\r\n    [\"fab\", \"instagram\"]\r\n  ];\r\n  return (\r\n    <div id=\"contact\" className=\"offset\">\r\n      <footer>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={6} className=\"text-center\">\r\n            <p className=\"lead\">\r\n              <FormattedMessage \r\n              id=\"footer.msg\"\r\n              defaultMessage=\"We are highly trained team to manage the exam system for you\"\r\n              />\r\n            </p>\r\n            <strong>\r\n              <FormattedMessage\r\n              id=\"btn.contact\"\r\n              defaultMessage=\"Contact Info\"\r\n              />\r\n              </strong>\r\n            <p>\r\n              +8801641622541 <br />\r\n              admin@eexam.com{\" \"}\r\n            </p>\r\n            {socials.map(value => (\r\n              <a key={value} href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {/* <FontAwesomeIcon icon={[\"fab\", \"apple\"]} /> */}\r\n                <FontAwesomeIcon icon={value} />\r\n              </a>\r\n            ))}\r\n          </Col>\r\n          <hr className=\"socket\" />\r\n          &copy; E-Exam Theme Inspired By Nano theme\r\n        </Row>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default contact;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"api\",\r\n  initialState: { result: null, error: null },\r\n  reducers: {\r\n    apiCallBegun: (api, action) => {\r\n      //api.loading = true;\r\n    },\r\n    apiCallSuccess: (api, action) => {\r\n      //api.loading = false;\r\n      api.result = action.payload;\r\n    },\r\n    apiCallFail: (api, action) => {\r\n      api.error = action.payload;\r\n    },\r\n    apiCallReset: (api)=>{\r\n      api.result = null;\r\n      api.error = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { apiCallBegun, apiCallSuccess, apiCallFail, apiCallReset } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"Exams\",\r\n  initialState: {\r\n    id: null,\r\n    questions: [],\r\n    questionIdsByOrder: [],\r\n    singleQuestionMark: null,\r\n    singleStemMark: null,\r\n    penaltyMark: null,\r\n    timeLimit: null,\r\n    examResult: null,\r\n    totalMark: null,\r\n    totalScore: null,\r\n    totalPenaltyMark: null,\r\n    totalScorePercentage: null,\r\n    timeTakenToComplete: null,\r\n    rank: null,\r\n    exam: null, // store the individual exam\r\n    error: null,\r\n    examError: null,\r\n    exams: [], // store the all exam lists\r\n  },\r\n  reducers: {\r\n    resetExamResult: (state) => {\r\n      state.examResult = null;\r\n      state.totalMark = null;\r\n      state.totalScore = null;\r\n      state.totalPenaltyMark = null;\r\n      state.totalScorePercentage = null;\r\n      state.timeTakenToComplete = null;\r\n      state.rank = null;\r\n      state.exam = null;\r\n      state.error = null;\r\n      state.questionIdsByOrder = [];\r\n    },\r\n    getAllExams: (state, action) => {\r\n      state.exams = action.payload;\r\n    },\r\n    getExamById: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id);\r\n      });\r\n      state.id = action.payload.exam.id;\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark;\r\n      state.singleStemMark = action.payload.exam.singleStemMark;\r\n      state.timeLimit = action.payload.exam.timeLimit;\r\n      state.penaltyMark = action.payload.exam.penaltyMark;\r\n    },\r\n    getFreeExamById: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id);\r\n      });\r\n      state.id = action.payload.exam.id;\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark;\r\n      state.singleStemMark = action.payload.exam.singleStemMark;\r\n      state.timeLimit = action.payload.exam.timeLimit;\r\n      state.penaltyMark = action.payload.exam.penaltyMark;\r\n    },\r\n    getExamError: (state, action) => {\r\n      state.examError = action.payload;\r\n    },\r\n    resetExamError: (state) => {\r\n      state.examError = null;\r\n    },\r\n    postExamById: (state, action) => {\r\n      state.examResult = action.payload.resultArray;\r\n      state.totalMark = action.payload.totalMark;\r\n      state.totalScore = action.payload.totalScore;\r\n      state.totalPenaltyMark = action.payload.totalPenaltyMark;\r\n      state.totalScorePercentage = action.payload.totalScorePercentage;\r\n      state.timeTakenToComplete = action.payload.timeTakenToComplete;\r\n    },\r\n    examRankById: (state, action) => {\r\n      state.rank = action.payload.rank;\r\n      state.exam = action.payload.exam;\r\n    },\r\n    postExamError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  resetExamResult,\r\n  getAllExams,\r\n  getExamById,\r\n  getFreeExamById,\r\n  getExamError,\r\n  resetExamError,\r\n  postExamById,\r\n  examRankById,\r\n  postExamError,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getAllExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/\",\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getAllFreeExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/free\",\r\n      method: \"get\",\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/questions/\" + id,\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getExamById.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getFreeExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/free/questions/\" + id,\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getFreeExamById.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const postExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams\",\r\n      method: \"post\",\r\n      data: data,\r\n      sendToken: true,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const postFreeExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams/free\",\r\n      method: \"post\",\r\n      data: data,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const examRankByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams/rank/\" + id,\r\n      method: \"get\",\r\n      onSuccess: examRankById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Badge, Button, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { resetExamResult } from '../../../store/exams'\r\n\r\n\r\nconst categoryTypeVariant = (name)=>{\r\n    let variant = \"primary\"\r\n    switch (name) {\r\n        case 'Featured':\r\n            variant = \"warning\"\r\n            break;\r\n        case 'Free':\r\n            variant = \"secondary\"\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return variant;\r\n}\r\n\r\nexport default function ExamCard({width=\"350px\", examId, imgSrc, title, categoryType, description, createdAt, free}) {\r\n    return (\r\n        <>\r\n            <Card key={examId} className=\"mr-2 mb-2\" style={{width:width}}>\r\n                <Card.Img\r\n                    variant=\"top\"\r\n                    src={imgSrc}\r\n                />\r\n                <Card.Body>\r\n                    <div>\r\n                        <Card.Title style={{fontSize: '1.4rem' ,fontWeight: '900'}}>{title}</Card.Title>\r\n                        \r\n                        <Card.Subtitle>\r\n                        {categoryType &&\r\n                            categoryType.map((category) => (\r\n                            <Badge variant={categoryTypeVariant(category.name)} className=\"mr-1\">\r\n                                {category.name}\r\n                            </Badge>\r\n                            ))}\r\n                        </Card.Subtitle>\r\n\r\n                    </div>\r\n                    \r\n                    <Card.Text className=\"mt-1 pt-2\">\r\n                    <p className=\"\">{description} </p>\r\n            \r\n                    <p className=\"text-muted text-right\">Start on: {moment(createdAt).calendar()}</p>\r\n                    </Card.Text>\r\n        \r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Link  className=\"text-white\" to={(free ? \"/exams/free/\" : \"/exams/\") + examId}>\r\n                        <Button variant=\"outline-primary\">Start Exam</Button></Link>\r\n                        <Link className=\"text-white\" to={\"/result/rank/\" + examId}><Button onClick={()=>{resetExamResult()}} variant=\"outline-dark\">Rank</Button></Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"./examCard\";\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\n\r\nexport default function listCard({title,exams,landing}) {\r\n  const authToken = useSelector((state) => state.auth.token ? true : false);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n      <Modal show={show} onHide={handleClose} size={\"xl\"}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>More <Badge variant=\"warning\">{title.toUpperCase()}</Badge> Exams</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className=\"mt-3 ml-3\">\r\n            <Col className=\"d-flex justify-content-center flex-wrap\">\r\n                { exams.slice(2).map((exam) => ( \r\n                    <ExamCard \r\n                      examId = {exam.id} \r\n                      imgSrc = {process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[0].imageUrl}\r\n                      title = {exam.title}\r\n                      categoryType = {exam.categoryType}\r\n                      description = {exam.description}\r\n                      createdAt = {exam.createdAt}\r\n                      free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                    />                \r\n                ))}\r\n                \r\n            </Col>\r\n          </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        <div className=\"mb-2 border position-relative\" style={{marginTop: \"100px\"}}>\r\n        <h3 className=\"text-center bg-warning text-light px-2 py-1\" style={{position: \"absolute\", top:\"-30px\",left:\"50px\" }}>{title.toUpperCase() + \" \"} { (!landing && <Badge variant=\"light\" className=\"ml-2\"> {exams.length}</Badge> )} </h3>\r\n        <div className=\"mt-4\">\r\n          <div className=\"d-flex justify-content-around flex-wrap\">\r\n              { exams.length < 1 && <p className=\"lead text-danger\"> No {title} Exams is created </p>}\r\n              { exams.map((exam,i) => ( i < 3 ?\r\n                  <ExamCard \r\n                    examId = {exam.id} \r\n                    imgSrc = {process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl}\r\n                    title = {exam.title}\r\n                    categoryType = {exam.categoryType}\r\n                    description = {exam.description}\r\n                    createdAt = {exam.createdAt}\r\n                    free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                  />\r\n                  : \"\"\r\n              \r\n              ))}\r\n              \r\n          </div>\r\n          {!landing && <div className=\"my-2 d-flex justify-content-center\">\r\n            {exams.length > 2 ? <Button style={{height:\"50px\", width: \"150px\"}} onClick={()=>{\r\n              handleShow()\r\n            }}>More...</Button> : \"\"}\r\n          </div>}\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport React, { Component } from \"react\";\r\nimport { injectIntl } from 'react-intl';\r\nimport GallaryCard from '../../../components/exams/gallary/gallaryCard';\r\n//import \"./exam.scss\";\r\n\r\n\r\nclass Exam extends Component{\r\n\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      exams: []\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    axios.get(process.env.REACT_APP_SITE_URL + '/exams/featured')\r\n    .then(res=>{\r\n      if(res.status == 200) this.setState({exams: res.data});\r\n    })\r\n    .catch(e=>{\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (<div id=\"exam\" className=\"mb-5 offset\">\r\n      <GallaryCard title={this.props.intl.formatMessage({id:'db.fe', defaultMessage: \"Our Featured Exams\"})} exams={this.state.exams} landing={true}/>\r\n    </div>)\r\n  }\r\n};\r\n\r\nexport default injectIntl(Exam);\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst miniBlock = props => {\r\n  return (\r\n    <Col md={4} key={props.key}>\r\n      <div className=\"feature\">\r\n        <FontAwesomeIcon\r\n          icon={props.icon}\r\n          size=\"4x\"\r\n          transform=\"shrink-3 up-5\"\r\n        />\r\n        <h3>{props.heading}</h3>\r\n        <p>{props.para}</p>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default miniBlock;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport MiniBlock from \"../miniBlock/miniBlock\";\r\n\r\n\r\n//import \"./feature.scss\";\r\n\r\nconst feature = props => {\r\n  const intl = useIntl();\r\n  const features = {\r\n    heading: [intl.formatMessage({id: 'feature.cb', defaultMessage: 'Cloud Based'}),\r\n    intl.formatMessage({id: 'feature.an', defaultMessage: 'Anywhere At Anytime'}), \r\n    intl.formatMessage({id: 'feature.ac', defaultMessage: 'Accurecy'}),\r\n    ],\r\n    para: [\r\n      intl.formatMessage({id: 'feature.cb.details', defaultMessage: 'All System is based on cloud. Test the digitalization in exam management system'}),\r\n      intl.formatMessage({id: 'feature.an.details', defaultMessage: 'You can give exam at anytime from anywhere. Home, sweet home!! '}),\r\n      intl.formatMessage({id: 'feature.ac.details', defaultMessage: 'We try hard to make all questions and answers 100% accuret'}),\r\n    ],\r\n    faIcons: [\"cloud\", \"hourglass\", \"thumbs-up\"]\r\n  };\r\n  return (\r\n    <div id=\"feature\" className=\"offset\">\r\n      <Jumbotron>\r\n        <div className=\"narrow text-center\">\r\n          <Col xs={12}>\r\n            <h3 className=\"heading\">\r\n              <FormattedMessage id=\"features\" defaultMessage=\"Features\" />\r\n            </h3>\r\n            <div className=\"heading-underline\"></div>\r\n          </Col>\r\n          <Row className=\"\">\r\n            {features.faIcons.map((value, index) => (\r\n              <MiniBlock\r\n                key={index}\r\n                icon={value}\r\n                heading={features.heading[index]}\r\n                para={features.para[index]}\r\n              />\r\n            ))}\r\n          </Row>\r\n        </div>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default feature;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavbarHome from \"../../../components/navbar/navbarHome\";\r\n\r\n\r\n//import \"./home.scss\";\r\n\r\nconst home = props => {\r\n\r\n  return (\r\n    <div id=\"home\">\r\n      <NavbarHome isLanding={true} />\r\n      {/* Landing */}\r\n      <div className=\"landing\">\r\n        <div className=\"home-wrap\">\r\n          <div className=\"home-inner\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"caption text-center\">\r\n        <h1>\r\n          <FormattedMessage\r\n            id=\"site.title\"\r\n            defaultMessage=\"Welcome to Prostuti Exam System\"\r\n          /> \r\n        </h1>\r\n        <h3>\r\n          <FormattedMessage\r\n            id=\"site.subtitle\"\r\n            defaultMessage=\"With the suffix of staying ahead\"\r\n          />\r\n        </h3>\r\n        <Link to=\"/exams\">\r\n          <Button variant=\"outline-light\" size=\"lg\" className=\"btn-lg\">\r\n          <FormattedMessage\r\n            id=\"btn.exams\"\r\n            defaultMessage=\"Exams\"\r\n          />\r\n          </Button>\r\n        </Link>\r\n        \r\n      </div>\r\n\r\n      {/* End of Landing */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n","import React from \"react\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport Contact from \"./contact/contact\";\r\nimport Exam from './exam/exam';\r\nimport Feature from './feature/feature';\r\nimport Home from \"./home/home\";\r\n\r\n\r\n\r\nconst landing = props => {\r\n  return (\r\n    <div className={\"__landing__upper\"}>\r\n      <Home />\r\n      <Exam />\r\n      <Feature />\r\n      {/*<Demo />\r\n      <Clients /> */}\r\n      <Contact /> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default landing;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    id: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    userName: null,\r\n    email: null,\r\n    avatar: null,\r\n  },\r\n  reducers: {\r\n    getUser: (user, action) => {\r\n      user.id = action.payload.id;\r\n      user.firstName = action.payload.firstName;\r\n      user.lastName = action.payload.lastName;\r\n      user.userName = action.payload.userName;\r\n      user.email = action.payload.email;\r\n      user.avatar =\r\n        action.payload.avater ||\r\n        \"https://api.adorable.io/avatars/285/abott@adorable.png\";\r\n    },\r\n  },\r\n});\r\nexport const { getUser } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nconst url = \"/users\";\r\nconst method = \"get\";\r\n\r\nexport const getUserLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getUser.type,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {\r\n  FaBookOpen, FaCog, FaHome,\r\n\r\n\r\n  FaPen, FaQuestion,\r\n\r\n\r\n\r\n\r\n  FaTools, FaUser\r\n} from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getUserLoader } from \"../../store/user\";\r\nimport { canActivate, rolePermitted } from \"../../utils/canActivate\";\r\n\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  classes = {\r\n    sideNav: [\"flex-column\", \"mt-4\"].join(\" \"),\r\n    sideNavLink: [\"text-white\", \"p-3\", \"mb-2\"].join(\" \"),\r\n    fa: [\"text-light\", \"fa-lg\", \"mr-3\"].join(\" \"),\r\n  };\r\n\r\n  faIcons = [];\r\n  menuName = [];\r\n  navLinks = [];\r\n  // state = {\r\n  //   userName: [null]\r\n  // };\r\n  componentDidMount() {\r\n    this.props.onGetUserLoader();\r\n  }\r\n  render() {\r\n    const { userName, email, id, avatar } = this.props.user;\r\n    if (canActivate(rolePermitted.student, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaBookOpen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\"Dashboard\", \"Exams\", \"Profile\", \"Settings\"];\r\n      this.navLinks = [\"/dashboard\", \"/exams\", \"/profile\", \"/settings\"];\r\n    }\r\n\r\n    if (canActivate(rolePermitted.mentor, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Question\",\r\n        \"Exam Builder\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/question\",\r\n        \"/exambuilder\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n    if (canActivate(rolePermitted.admin, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaCog size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Category\",\r\n        \"Question\",\r\n        \"Exam Builder\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/category\",\r\n        \"/question\",\r\n        \"/exambuilder\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div className=\"px-4\">\r\n        <Navbar.Brand\r\n          className=\"text-white d-block mx-auto text-center py-3 mb-4 bottom-border\"\r\n        >\r\n          <NavLink to=\"/\" className=\"text-white\">E-Exam</NavLink>\r\n        </Navbar.Brand>\r\n        <h3 className=\"text-white\">Good Day</h3>\r\n        <div className=\"bottom-border pb-3\">\r\n          {/* <Image\r\n            src={avatar}\r\n            roundedCircle={true}\r\n            style={{ width: \"50px\" }}\r\n            className=\"mr-3\"\r\n          /> */}\r\n          <a href=\"#\" className=\"text-white\" style={{fontSize:\"1.2rem\"}}>\r\n            {userName}\r\n          </a>\r\n        </div>\r\n        <Nav className={this.classes.sideNav}>\r\n          {this.faIcons.map((value, index) => (\r\n            <Nav.Item key={index}>\r\n              <NavLink\r\n                to={this.navLinks[index]}\r\n                className={\r\n                  \"nav-link \" + this.classes.sideNavLink + \" sidebar-link\"\r\n                }\r\n                activeClassName=\"current\"\r\n              >\r\n                {value}\r\n\r\n                {this.menuName[index]}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetUserLoader: () => dispatch(getUserLoader()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\n//export default Sidebar;\r\n\r\nconst classes = {\r\n  formControl: \"search-input\",\r\n  searchBtn: \"search-button\",\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {\r\n  FaBookOpen, FaCog, FaHome,\r\n\r\n\r\n  FaPen, FaQuestion,\r\n\r\n\r\n\r\n\r\n  FaTools, FaUser\r\n} from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getUserLoader } from \"../../store/user\";\r\nimport { canActivate, rolePermitted } from \"../../utils/canActivate\";\r\n\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  classes = {\r\n    sideNav: [\"flex-column\", \"mt-2\"].join(\" \"),\r\n    sideNavLink: [\"text-white\", \"p-1\", \"mb-2\"].join(\" \"),\r\n    fa: [\"text-light\", \"fa-lg\", \"mr-3\"].join(\" \"),\r\n  };\r\n\r\n  faIcons = [];\r\n  menuName = [];\r\n  navLinks = [];\r\n  // state = {\r\n  //   userName: [null]\r\n  // };\r\n  componentDidMount() {\r\n    this.props.onGetUserLoader();\r\n  }\r\n  render() {\r\n\r\n    this.faIcons = [\r\n      <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n      <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n      <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n      <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n    ]\r\n    this.menuName = [\r\n      \"Home\",\r\n      \"Exams\",\r\n      \"Signup\",\r\n      \"Login\",\r\n    ];\r\n    this.navLinks = [\r\n      \"/\",\r\n      \"/exams\",\r\n      \"/signup\",\r\n      \"/login\"\r\n    ];\r\n  \r\n    if (canActivate(rolePermitted.student, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaBookOpen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\"Dashboard\", \"Exams\", \"Profile\", \"Settings\"];\r\n      this.navLinks = [\"/dashboard\", \"/exams\", \"/profile\", \"/settings\"];\r\n    }\r\n\r\n    if (canActivate(rolePermitted.mentor, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Question\",\r\n        \"Exam Paper\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/question\",\r\n        \"/exampaper\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n    if (canActivate(rolePermitted.admin, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaCog size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Category\",\r\n        \"Question\",\r\n        \"Exam Builder\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/category\",\r\n        \"/question\",\r\n        \"/exambuilder\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div style={styles}>\r\n        \r\n        <Nav className={this.classes.sideNav}>\r\n          \r\n          {this.faIcons.map((value, index) => (\r\n            <Nav.Item key={index}>\r\n              <NavLink\r\n                exact to={this.navLinks[index]}\r\n                className={\r\n                  \"nav-link \" + this.classes.sideNavLink + \" sidebar-link\"\r\n                }\r\n                activeClassName=\"current\"\r\n              >\r\n                {value}\r\n\r\n                {this.menuName[index]}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n          <div className=\"hideInMd\">\r\n            {/* <SearchForm\r\n              formControl={classes.formControl}\r\n              searchBtn={classes.searchBtn}\r\n            /> */}\r\n            {this.props.token ?  <Nav.Item\r\n              className=\"ml-md-auto\"\r\n            >\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/logout\" }}\r\n                className=\"nav-link\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon=\"sign-out-alt\"\r\n                  size=\"lg\"\r\n                  className=\"text-danger\"\r\n                />\r\n              </NavLink>\r\n            </Nav.Item> :\r\n            <>\r\n            </>\r\n            }\r\n          </div>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetUserLoader: () => dispatch(getUserLoader()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\n//export default Sidebar;\r\n\r\nconst classes = {\r\n  formControl: \"search-input\",\r\n  searchBtn: \"search-button\",\r\n};\r\n\r\nconst styles = {\r\n  fontSize: \"14px\",\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst topbar = (props) => {\r\n  const isLoggedIn = useSelector((state) => state.auth.token);\r\n  const classes = {\r\n    formControl: \"search-input\",\r\n    searchBtn: \"search-button\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-dark py-2 top-navbar mb-3 w-100\">\r\n      <Row className=\"align-items-center\">\r\n        <Col md={4} style={{ paddingLeft: \"3rem\" }}>\r\n          <h4 className=\"text-light text-uppercase mb-0\">{props.pageName}</h4>\r\n        </Col>\r\n        \r\n        <Col md={8} className=\"hideInSm pr-5\">\r\n          <Nav className=\"\" style={{'fontSize': '1.2rem'}}>\r\n            <Nav.Item className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Home\r\n                </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n                className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/exams\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Exams\r\n                </NavLink>\r\n            </Nav.Item>\r\n           \r\n            {isLoggedIn ? <Nav.Item\r\n              className=\"\"\r\n            >\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/logout\" }}\r\n                className=\"nav-link\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon=\"sign-out-alt\"\r\n                  size=\"lg\"\r\n                  className=''\r\n                />\r\n              </NavLink>\r\n            </Nav.Item>\r\n            :\r\n            <>\r\n            <Nav.Item\r\n                className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/signup\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Signup\r\n                </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n                className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/login\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Login\r\n                </NavLink>\r\n            </Nav.Item>\r\n            </>\r\n            }\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onlogoutLoader: () => dispatch(logoutLoader()),\r\n//   };\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     auth: state.auth,\r\n//   };\r\n// };\r\n\r\n//export default connect(null, n)(withRouter(topbar));\r\nexport default topbar;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"Category\",\r\n  initialState: { categories: [], catHierarchy: [] },\r\n  reducers: {\r\n    getCategory: (state, action) => {\r\n      state.categories = action.payload.categories;\r\n      state.catHierarchy = action.payload.catHierarchy;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getCategory } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nconst url = \"/categories\";\r\nconst method = \"get\";\r\nexport const fetchCategory = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getCategory.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createCategory = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method: \"post\",\r\n      data,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","export default function errorHandler(e) {\r\n\r\n  if (e.response) {\r\n    // checking if server is down, no response will occur\r\n    const responseData = e.response.data;\r\n\r\n    if (responseData.statusCode === 400) {\r\n      // server validation error\r\n      let message = \"\";\r\n      try {\r\n        responseData.message.forEach((v) => {\r\n          message += `${v.value} is not valid in [ ${\r\n            v.property\r\n          } ] field due to \" ${Object.values(v.constraints).toString()} \"`;\r\n        });\r\n      } catch (error) {\r\n        message = responseData.error;\r\n      }\r\n\r\n      return message;\r\n    } else if (responseData.statusCode === 500) {\r\n      return \"Internal Server Error: file may be corrupted or so on.\";\r\n    } else {\r\n      //for other errors\r\n      return responseData.message;\r\n    }\r\n  } else {\r\n    // if server has no any response\r\n    return \"Server may be down. Please try sometime later\";\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default function setAuthorizationToken(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Accordion, Button, Card, Form } from \"react-bootstrap\";\r\n\r\nconst CategoryForm = (props) => {\r\n  const {\r\n    submitHandler,\r\n    handleChange,\r\n    formErrors,\r\n    categories,\r\n    name,\r\n    //slug,\r\n    selectOptionValueRef,\r\n    category,\r\n    showEditCategoryAccordionStateHandler,\r\n  } = props;\r\n  return (\r\n    <Accordion className=\"mt-3\" defaultActiveKey={name && \"0\"}>\r\n      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n        <h3> {name ? \"Edit \" + name : \"Create A New\"} Category</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Form\r\n          className=\"mt-2\"\r\n          onSubmit={submitHandler}\r\n          enctype=\"multipart/form-data\"\r\n        >\r\n          <Form.Group controlId=\"formGroupCategoryName\">\r\n            <Form.Label>Category Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Category Name\"\r\n              name=\"name\"\r\n              value={category ? category.name : null}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.name.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.name}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridParent\">\r\n            <Form.Label>Parent Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"parentId\"\r\n              onChange={handleChange}\r\n              ref={selectOptionValueRef}\r\n            >\r\n              <option value=\"Top\">Top</option>\r\n              {categories.map((value) => {\r\n                let categorySlug = value.slug.replace(/_/g, \" / \");\r\n                return (\r\n                  <option\r\n                    value={value.id}\r\n                    selected={category && value.id === category.parentId}\r\n                  >\r\n                    {categorySlug}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.parentId.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.parentId}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupCategoryOrder\">\r\n            <Form.Label>Category Order</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"order\"\r\n              value={category && category.order}\r\n              placeholder=\"e.g. 5 <..Order makes priority. Lower value higher order..>\"\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.order.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.order}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupCategoryDes\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"textarea\"\r\n              placeholder=\"Enter short description\"\r\n              name=\"description\"\r\n              value={category && category.description}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.description.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.description}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Upload Image</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              className={\"form-control-file\"}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.image.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.image}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" className=\"btn-submit\">\r\n            Submit\r\n          </Button>\r\n          {name && (\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"ml-3\"\r\n              onClick={showEditCategoryAccordionStateHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { connect } from \"react-redux\";\r\nimport validator from \"validator\";\r\nimport { createCategory, fetchCategory } from \"../../store/category\";\r\nimport errorHandler from \"../../utils/errorHandler\";\r\nimport setAuthorizationToken from \"../../utils/setAuthorizationToken\";\r\nimport CategoryForm from \"./categoryForm\";\r\n\r\n\r\nconst formValid = ({ formErrors, rest }) => {\r\n  //to check if form fields are null or contain error\r\n  let valid = true;\r\n  let error = \"\";\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false) && (error = v);\r\n    v.length > 0 && (error = v);\r\n  });\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === null && (valid = false);\r\n  });\r\n  return { valid, error }; // valid: is it valid ; error: what is the error message\r\n};\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false, // controlls spinner state\r\n      //isEditCategory: false,\r\n      id: null, // need to pass id in edit or delete category section\r\n      name: null, // used in editCategory component to display the category name in heading\r\n      slug: null,\r\n      parentId: \"Top\",\r\n      description: null,\r\n      order: null,\r\n      image: null, // required in create, optional in edit and no need delete section\r\n      response: null, // to display response message\r\n      responseClass: \"success\", // depends on response type\r\n      showEditCategoryComponent: false, // show or hide editCategory component\r\n      formErrors: {\r\n        // for storing form feilds error on handle change\r\n        name: \"\",\r\n        parentId: \"\",\r\n        description: \"\",\r\n        order: \"\",\r\n        image: \"\",\r\n      },\r\n    };\r\n    this.selectOptionValueRef = React.createRef();\r\n  }\r\n  resetState = () => {\r\n    this.setState({\r\n      id: null,\r\n      name: null,\r\n      slug: null,\r\n      parentId: \"Top\",\r\n      description: null,\r\n      order: null,\r\n      image: null,\r\n      isEditCategory: false,\r\n    });\r\n  };\r\n  popover = (\r\n    category // function to deliver popover\r\n  ) => (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\" className=\"bg-warning text-white\">\r\n        Warning Message\r\n      </Popover.Title>\r\n      <Popover.Content>\r\n        Are you sure You want to delete category.\r\n        <Button\r\n          variant=\"danger ml-3\"\r\n          onClick={() => {\r\n            this.deleteCategory(category);\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  hideResponse = () => {\r\n    // hide the response message\r\n    this.setState({ response: null });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { formErrors, name, order, description, image } = this.state;\r\n\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value;\r\n\r\n    const rest = { name, parentId, order, description, image };\r\n\r\n    const { valid, error } = formValid({ rest, formErrors });\r\n\r\n    if (valid) {\r\n      //this.resetState();\r\n      const data = new FormData();\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key]);\r\n      });\r\n      setAuthorizationToken(this.props.auth.token);\r\n      this.setState({ loading: true });\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: \"/categories\",\r\n          method: \"post\",\r\n          data,\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: \"Successfully created Category\",\r\n            responseClass: \"success\",\r\n          });\r\n          this.props.onFetchCategoryLoader(); // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000); // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e);\r\n          this.setState({ loading: false, response, responseClass: \"danger\" });\r\n          setTimeout(this.hideResponse, 2000);\r\n        });\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          \"Please fill form corectly\" +\r\n          (error ? \" __ \" + error.toUpperCase() + \" __\" : \"\"),\r\n        responseClass: \"danger\",\r\n      });\r\n      setTimeout(this.hideResponse, 2000);\r\n    }\r\n  };\r\n\r\n  editCategorysubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      formErrors,\r\n      id,\r\n      name,\r\n      order,\r\n      description,\r\n      image,\r\n      slug,\r\n    } = this.state;\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value;\r\n\r\n    const rest = image\r\n      ? { id, name, slug, parentId, order, description, image }\r\n      : { id, name, slug, parentId, order, description };\r\n\r\n    const { valid, error } = formValid({ rest, formErrors });\r\n\r\n    if (valid) {\r\n      this.resetState();\r\n      const data = new FormData();\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key]);\r\n      });\r\n\r\n      setAuthorizationToken(this.props.auth.token);\r\n      this.setState({ loading: true });\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: \"/categories\",\r\n          method: \"patch\",\r\n          data,\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: \"Successfully Updated Category\",\r\n            responseClass: \"success\",\r\n          });\r\n          this.props.onFetchCategoryLoader(); // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000); // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e);\r\n          this.setState({ loading: false, response, responseClass: \"danger\" });\r\n          setTimeout(this.hideResponse, 2000);\r\n        });\r\n      this.resetState();\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          \"Please fill form corectly\" +\r\n          (error ? \" __ \" + error.toUpperCase() + \" __\" : \"\"),\r\n        responseClass: \"danger\",\r\n      });\r\n      setTimeout(this.hideResponse, 2000);\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        formErrors.name =\r\n          validator.isLength(value, { min: 1, max: 25 }) &&\r\n          !validator.contains(value, \"_\") &&\r\n          !validator.contains(value, \"/\")\r\n            ? \"\"\r\n            : \"Category Name should not be emty, more than 25 charecter and contain '_,/'\";\r\n        break;\r\n      case \"description\":\r\n        formErrors.description = validator.isLength(value, {\r\n          min: 30,\r\n          max: 300,\r\n        })\r\n          ? \"\"\r\n          : \"Description should be minimum 30 or maximum 300 characters\";\r\n        break;\r\n      case \"parentId\":\r\n        formErrors.parentId =\r\n          value === \"Top\" || validator.isInt(value) || validator.isMongoId(value)\r\n            ? \"\"\r\n            : \"ParentId is not valid\";\r\n        break;\r\n      case \"order\":\r\n        formErrors.order = validator.isNumeric(value)\r\n          ? \"\"\r\n          : \"Order should be only number\";\r\n        break;\r\n      case \"image\":\r\n        formErrors.image = !validator.isEmpty(value)\r\n          ? \"\"\r\n          : \"Choose a valid image\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: files ? files[0] : value,\r\n    });\r\n  };\r\n\r\n  deleteCategory(category) {\r\n    setAuthorizationToken(this.props.auth.token);\r\n    this.setState({ loading: true });\r\n\r\n    axios\r\n      .delete(process.env.REACT_APP_SITE_URL + \"/categories\", {\r\n        data: { id: category.id },\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n          response: category.name + \" deleted successfully\",\r\n          responseClass: \"success\",\r\n        });\r\n        this.props.onFetchCategoryLoader();\r\n        setTimeout(this.hideResponse, 2000);\r\n      })\r\n      .catch((e) => {\r\n        const response = errorHandler(e);\r\n        this.setState({\r\n          loading: false,\r\n          response,\r\n          responseClass: \"danger\",\r\n        });\r\n        setTimeout(this.hideResponse, 2000);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader();\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Category</title>\r\n        </Helmet>\r\n        {this.state.loading && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )}\r\n\r\n        {this.state.response && (\r\n          <Alert\r\n            variant={this.state.responseClass}\r\n            className=\"text-center content-center\"\r\n          >\r\n            {this.state.response}\r\n          </Alert>\r\n        )}\r\n\r\n        <CategoryForm\r\n          submitHandler={this.submitHandler}\r\n          handleChange={this.handleChange}\r\n          formErrors={this.state.formErrors}\r\n          categories={categories}\r\n          category={{\r\n            name: this.state.name,\r\n            parentId: this.state.parentId,\r\n            order: this.state.order,\r\n            description: this.state.description,\r\n          }}\r\n        />\r\n\r\n        <div className=\"mt-3\">\r\n          <Accordion>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n              <h3>Edit Category</h3>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <div className=\"mt-2 p-2\">\r\n                {categories.map((e) => {\r\n                  return (\r\n                    <Alert variant=\"primary\">\r\n                      {e.slug}\r\n                      <Button\r\n                        className=\"ml-2\"\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            id: e.id,\r\n                            slug: e.slug,\r\n                            name: e.name,\r\n                            parentId: e.parentId,\r\n                            order: e.order,\r\n                            description: e.description,\r\n                            showEditCategoryComponent: e.slug,\r\n                          });\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <OverlayTrigger\r\n                        trigger={[\"click\"]}\r\n                        placement=\"right\"\r\n                        rootClose\r\n                        overlay={this.popover(e)}\r\n                      >\r\n                        <Button\r\n                          className=\"ml-2\"\r\n                          variant=\"danger\"\r\n                          disabled={this.state.showEditCategoryComponent}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </OverlayTrigger>\r\n                      <div>\r\n                        {this.state.showEditCategoryComponent === e.slug && (\r\n                          <CategoryForm\r\n                            submitHandler={this.editCategorysubmitHandler}\r\n                            handleChange={this.handleChange}\r\n                            loading={this.state.loading}\r\n                            formErrors={this.state.formErrors}\r\n                            categories={categories}\r\n                            name={e.name}\r\n                            //slug={e.slug}\r\n                            selectOptionValueRef={this.selectOptionValueRef}\r\n                            category={{\r\n                              name: this.state.name,\r\n                              parentId: this.state.parentId,\r\n                              order: this.state.order,\r\n                              description: this.state.description,\r\n                            }}\r\n                            showEditCategoryAccordionStateHandler={() => {\r\n                              this.setState({\r\n                                showEditCategoryComponent: false,\r\n                              });\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Alert>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Accordion>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onCreateCategoryloader: (data) => dispatch(createCategory(data)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    category: state.category,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nclass BigCard extends Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  };\r\n\r\n  startHandleChange = (date) => {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  };\r\n  endHandleChange = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n  reportHandler = () => {\r\n    //console.log(this.state.startDate, this.state.endDate);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\" className=\"mb-3\">\r\n        <Card className=\"border-top-0\">\r\n          <Card.Header className={\"bg-dark\" + \" text-light\"}>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {this.props.header}\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                <FontAwesomeIcon\r\n                  icon={\"bars\"}\r\n                  size=\"lg\"\r\n                  className=\"text-light\"\r\n                />\r\n              </Accordion.Toggle>\r\n              {/* <span className=\"\">More..</span> */}\r\n            </div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              {this.props.showDatePicker && (\r\n                <div className=\"d-flex flex-wrap justify-content-between mb-3\">\r\n                  <div>\r\n                    <span>Start Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={\"calendar-alt\"}\r\n                      size=\"2x\"\r\n                      className=\"mx-2\"\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.startDate}\r\n                      onChange={this.startHandleChange}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"\">End Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={\"calendar-alt\"}\r\n                      size=\"2x\"\r\n                      className=\"mx-2\"\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.endDate}\r\n                      onChange={this.endHandleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <Button onClick={this.reportHandler}>Show</Button>\r\n                </div>\r\n              )}\r\n              <hr />\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BigCard;\r\n","import React from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"../../../exams/gallary/examCard\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\n\r\nconst ExamsFeaturedCard = () => {\r\n  const featuredExams = useSelector((state) => state.dashboard.featuredExams);\r\n\r\n  return (\r\n    <BigCard\r\n      header=\"Featured Exams\"\r\n      headerColor={\"primary\"}\r\n      showDatePicker={false}\r\n    >\r\n      <ListGroup variant=\"flush\">\r\n        {featuredExams.map((exam, index) => (\r\n          <ListGroup.Item className=\"border-0\">\r\n            {/* <ExamList\r\n              id={exam.id}\r\n              title={exam.title}\r\n              description={exam.description}\r\n              createdAt={exam.createdAt}\r\n              type={exam.type}\r\n            /> */}\r\n            <ExamCard\r\n              examId = {exam.id} \r\n              imgSrc = {process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl}\r\n              title = {exam.title}\r\n              categoryType = {exam.categoryType}\r\n              description = {exam.description}\r\n              createdAt = {exam.createdAt}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default ExamsFeaturedCard;\r\n","import * as _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\n\r\nconst ReportCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat);\r\n  const examTitles = userExamStat\r\n    ? _.map(userExamStat.examTitles, \"title\")\r\n    : [];\r\n  const mark = userExamStat\r\n    ? _.map(\r\n        userExamStat.stat,\r\n        (value) => +((value.averageScore / value.totalMark) * 100).toFixed(2)\r\n      )\r\n    : [];\r\n  //const stat = userExamStat ? _.map(userExamStat.stat, \"averageScore\") : [];\r\n\r\n  const options = {\r\n    responsive: true, // Instruct chart js to respond nicely.\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 100,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  const data = {\r\n    labels: examTitles,\r\n    datasets: [\r\n      {\r\n        label: \"Marks in Percentage\", // Name the series\r\n        data: mark, // Specify the data values array\r\n        fill: false,\r\n        borderColor: \"#2196f3\", // Add custom color border (Line)\r\n        backgroundColor: \"#2196f3\", // Add custom color background (Points and Fill)\r\n        borderWidth: 1, // Specify bar border width\r\n        maxBarThickness: 35,\r\n        barPercentage: 0.5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BigCard header=\"User Reports\" headerColor={\"info\"} showDatePicker={false}>\r\n      <Bar data={data} options={options} />;\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default ReportCard;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { MdInfo } from \"react-icons/md\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SideCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat);\r\n  const examTitles = userExamStat ? userExamStat.examTitles : [];\r\n  const stat = userExamStat ? userExamStat.stat : [];\r\n\r\n  return (\r\n    <BigCard\r\n      header=\"Recent Activity\"\r\n      headerColor={\"warning\"}\r\n      showDatePicker={false}\r\n    >\r\n      <ListGroup as=\"ul\" variant=\"flush\">\r\n        {examTitles &&\r\n          examTitles.map((exam, index) => {\r\n            if (index < 6)\r\n              return (\r\n                <ListGroup.Item as=\"li\" className=\"\">\r\n                  {/* <Badge variant=\"info\" className=\"rounded p-1\"> */}\r\n                  <MdInfo size=\"1.5em\" color=\"magenta\" />\r\n                  {/* </Badge> */}\r\n                  <Badge variant=\"light\">{exam.title}</Badge>Exam attempted{\" \"}\r\n                  <Badge variant=\"danger\">{stat[index].attemptNumbers}</Badge>{\" \"}\r\n                  times.\r\n                  <p className=\"text-muted pl-3\" style={{ fontSize: \"80%\" }}>\r\n                    last attempt{\" \"}\r\n                    {moment(stat[index].lastAttemptTime)\r\n                      .startOf(\"day\")\r\n                      .fromNow()}\r\n                  </p>\r\n                </ListGroup.Item>\r\n              );\r\n          })}\r\n      </ListGroup>\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default SideCard;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ExamFeaturedCard from \"./mainContentCards/examsFeaturedCard\";\r\nimport ReportCard from \"./mainContentCards/reportCard\";\r\nimport RecentActivityCard from \"./sideCards/recentActivityCard\";\r\n\r\n\r\nconst BigCards = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xl={8} lg={12}>\r\n          <ReportCard />\r\n          <hr />\r\n          <ExamFeaturedCard />\r\n          <hr />\r\n        </Col>\r\n        <Col xl={4}>\r\n          <RecentActivityCard />\r\n          <hr />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BigCards;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n//import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst icon = ({ icon, size, classes }) => (\r\n  <FontAwesomeIcon icon={icon} size={size} className={classes} />\r\n);\r\nexport default icon;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Icon from \"./icon\";\r\n\r\nconst footer = ({ color, heading, value, icon }) => {\r\n  return (\r\n    <Card.Footer className={\"bg-dark\" + \" text-light text-right\"}>\r\n      <span className=\"mr-2\">{heading}</span>\r\n      <span className=\"mr-5\">{value}</span>\r\n      <Icon icon={icon} size=\"md\" className=\"mr-2\" />\r\n    </Card.Footer>\r\n  );\r\n};\r\n\r\nexport default footer;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst cardHeader = ({ heading, color, value, id }) => (\r\n  <Card.Text className=\"text-right text-secondary\">\r\n    <h5>{heading}</h5>\r\n    <h3 className={\"text-\" + color}>{id ? <Link to ={\"exams/\"+id}> {value} </Link> : value}</h3>\r\n  </Card.Text>\r\n);\r\n\r\nexport default cardHeader;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Icon from \"./icon\";\r\n\r\n\r\nconst miniBlock = ({\r\n  heading,\r\n  color,\r\n  value,\r\n  id,\r\n  faIcon,\r\n  footerHeading,\r\n  footerValue,\r\n  faFooterIcon,\r\n}) => {\r\n  return (\r\n    <Card className=\"card-common mt-2\" >\r\n      <Card.Body>\r\n        <Row>\r\n          <Col sm={8}>\r\n            <Header heading={heading} color={color} value={value} id={id}/>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <div className=\"d-flex  align-items-center justify-content-end h-100\">\r\n              <Icon icon={faIcon} size={\"3x\"} classes={\"text-\" + color} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Footer\r\n        color={color}\r\n        heading={footerHeading}\r\n        value={footerValue}\r\n        icon={faFooterIcon}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default miniBlock;\r\n","import React from \"react\";\r\n\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\nconst rank = ({ value, footerValue }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Your Rank\"}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={\"medal\"}\r\n      footerHeading={\"Total students\"}\r\n      footerValue={footerValue}\r\n      color={\"warning\"}\r\n      faFooterIcon={\"users\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default rank;\r\n","import React from \"react\";\r\n\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\nconst result = ({ value, footerValue }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Overall Score\"}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={\"poll\"}\r\n      footerHeading={\"Out of\"}\r\n      footerValue={footerValue}\r\n      color={\"dark\"}\r\n      faFooterIcon={\"balance-scale\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default result;\r\n","import React from \"react\";\r\n\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\nconst totalExam = ({ value, footerValue }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Total Exams\"}\r\n      value={value}\r\n      faIcon={\"file-alt\"}\r\n      footerHeading={\"Exam Taken\"}\r\n      footerValue={footerValue}\r\n      color={\"info\"}\r\n      faFooterIcon={\"file-import\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default totalExam;\r\n","import React from \"react\";\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\n\r\nconst upcomingExam = ({ value, footerValue,id }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Latest Exam\"}\r\n      //\r\n      value={value}\r\n      //\r\n      id={id}\r\n      faIcon={\"file\"}\r\n      footerHeading={\"Start On\"}\r\n      footerValue={footerValue}\r\n      color={\"success\"}\r\n      faFooterIcon={\"clock\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default upcomingExam;\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Rank from \"./miniInfoBlock/rank\";\r\nimport Result from \"./miniInfoBlock/result\";\r\nimport TotalExam from \"./miniInfoBlock/totalExam\";\r\nimport UpcomingExam from \"./miniInfoBlock/upcomingExam\";\r\n\r\n\r\n\r\nclass MiniCards extends Component {\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { totalExam, rank, upcomingExam, result } = this.props.userExamInfo;\r\n    return (\r\n        <div className=\"d-md-flex justify-content-around flex-wrap\">\r\n          <TotalExam value={totalExam[0]} footerValue={totalExam[1]} />\r\n          <Rank value={rank[0]} footerValue={rank[1]} />\r\n          <UpcomingExam\r\n              value={upcomingExam[0]}\r\n              id={upcomingExam[2]}\r\n              footerValue={moment(upcomingExam[1]).format(\"DD-MM-YYYY\")}\r\n            />\r\n            <Result value={result[0]} footerValue={result[1]} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userExamInfo: state.dashboard.userExamInfo,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniCards);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState: {\r\n    featuredExams: [],\r\n    userExamInfo: {\r\n      totalExam: [0, 0],\r\n      rank: [1, 100],\r\n      upcomingExam: [\"No Exam\", \"01-02-03\",null],\r\n      result: [0.0, 100],\r\n    },\r\n    userExamStat: null,\r\n  },\r\n  reducers: {\r\n    dashboardStudent: (state, action) => {\r\n      state.featuredExams = action.payload.featuredExams;\r\n      state.userExamInfo = action.payload.userExamInfo;\r\n      state.userExamStat = action.payload.userExamStat;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { dashboardStudent } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\n// export const dashboardStudentLoader = (data) => (dispatch) => {\r\n//   dispatch({\r\n//     type: dashboardStudent.type,\r\n//     payload: data,\r\n//   });\r\n// };\r\n","import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigCards from \"../../components/dashboard/bigCards/bigCards\";\r\nimport MiniCards from \"../../components/dashboard/miniCards/miniCards\";\r\nimport { dashboardStudent } from \"../../store/dashboard\";\r\n\r\nconst Dashboard = (props) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + \"/dashboard\")\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({ type: dashboardStudent.type, payload: response.data });\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  });\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Helmet>\r\n        <title>Dashboard</title>\r\n      </Helmet>\r\n\r\n      <MiniCards />\r\n      <hr className=\"my-3\" />\r\n      <BigCards />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\n\r\nconst slice = createSlice({\r\n  name: \"ExamPaper\",\r\n  initialState: {\r\n    loading: false,\r\n    questions: [],\r\n    ids: [],\r\n    success: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    selectedQuestions: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      state.ids = action.payload.ids;\r\n    },\r\n    onLoading: (state)=>{\r\n      state.loading = true;\r\n    },\r\n    onSuccess: (state, action) => {\r\n      state.success = action.payload;\r\n      state.loading= false;\r\n    },\r\n    onError: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectedQuestions, onSuccess, onError, onLoading } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const selectedQuestionsLoader = (questions, ids) => (dispatch) => {\r\n  dispatch(selectedQuestions({ questions, ids }));\r\n};\r\n\r\nexport const onLoadingLoader = () => (dispatch) => {\r\n  dispatch({type: onLoading.type});\r\n};\r\n\r\nexport const postExamProfile = (examSpec, questions) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams\",\r\n      method: \"post\",\r\n      data: { ...examSpec, questions },\r\n      onSuccess: onSuccess.type,\r\n      onError: onError.type,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst card = ({ header, children, headerBgColor, showHeader }) => {\r\n  return (\r\n    <Card className=\"mt-5\">\r\n      {showHeader && (\r\n        <Card.Header\r\n          className={\"text-center font-weight-bold \" + \"bg-\" + headerBgColor}\r\n        >\r\n          {header}\r\n        </Card.Header>\r\n      )}\r\n      <Card.Body>{children}</Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default card;\r\n","import { Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { useFormik } from \"formik\";\r\nimport validator from \"validator\";\r\nimport { onLoadingLoader, postExamProfile } from \"../../store/examPaper\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst centeredStyle = {\r\n  // styling to display server response in middle of screen\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  /* bring your own prefixes */\r\n  transform: \"translate(-50%, -50%)\",\r\n  zIndex: \"1000\",\r\n};\r\n\r\nconst ExamSpec = ({ categories }) => {\r\n  const [hideMsg, setHideMsg] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const selectedQuestionIds = useSelector((state) => state.examPaper.ids);\r\n  const loading = useSelector((state) => state.examPaper.loading);\r\n  const successMsg = useSelector((state) => state.examPaper.success);\r\n  const errorMsg = useSelector((state) => state.examPaper.error);\r\n\r\n  return (\r\n    <>\r\n    {loading  && <Spinner\r\n        animation=\"border\"\r\n        role=\"status\"\r\n        variant=\"dark\"\r\n        className=\"content-center\"\r\n    ></Spinner>}\r\n    <Formik\r\n      initialValues={{\r\n        title: \"\",\r\n        type: \"0\",\r\n        categoryType: [],\r\n        singleQuestionMark: \"1\",\r\n        questionStemLength: \"5\",\r\n        penaltyMark: \"0\",\r\n        timeLimit: \"40\",\r\n      }}\r\n      validate={validate}\r\n      onSubmit={onSubmitHandler(selectedQuestionIds, dispatch, setHideMsg)}\r\n    >\r\n      {({ errors, handleChange, handleSubmit }) => (\r\n        <ExamCard header=\"Exam Specification\" showHeader={true}>\r\n          {hideMsg && successMsg && (\r\n            <Alert //\r\n              variant={\"success\"}\r\n              className=\"text-center\"\r\n              style={centeredStyle}\r\n              onClose={() => setHideMsg(false)}\r\n              dismissible\r\n            >\r\n              {successMsg.title +\r\n                \" --->  \" +\r\n                successMsg.description +\r\n                \" --->  \" +\r\n                successMsg.questions.length +\r\n                \" questions\"}\r\n            </Alert>\r\n          )}\r\n          {hideMsg && errorMsg && (\r\n            <Alert //\r\n              variant={\"success\"}\r\n              className=\"text-center\"\r\n              style={centeredStyle}\r\n              onClose={() => setHideMsg(false)}\r\n              dismissible\r\n            >\r\n              {JSON.stringify(errorMsg)}\r\n            </Alert>\r\n          )}\r\n          <Form>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter title\"\r\n                name=\"title\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.title ? (\r\n              <div className=\"alert alert-danger\">{errors.title}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"type\">\r\n              <Form.Label>Exam Type</Form.Label>\r\n              <Form.Control as=\"select\" name=\"type\" onChange={handleChange}>\r\n                <option value=\"0\">Assignment</option>\r\n                <option value=\"1\">Weekly</option>\r\n                <option value=\"2\">Monthly</option>\r\n                <option value=\"3\">Assesment</option>\r\n                <option value=\"4\">Term</option>\r\n                <option value=\"5\">Test</option>\r\n                <option value=\"0\">Final</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"categoryType\">\r\n              <Form.Label>Category Type</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                multiple\r\n                name=\"categoryType\"\r\n                onChange={handleChange}\r\n                //value={categories[0] && categories[0].id}\r\n                // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n              >\r\n                // eslint-disable-next-line react/prop-types //\r\n                eslint-disable-next-line react/prop-types\r\n                {categories.map((value) => {\r\n                  //console.log(categories[0].id);\r\n                  let categorySlug = value.slug.replace(/_/g, \" / \");\r\n                  return <option value={value.id}>{categorySlug}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"textarea\"\r\n                placeholder=\"description\"\r\n                name=\"description\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.description ? (\r\n              <div className=\"alert alert-danger\">{errors.description}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"singleQuestionMark\">\r\n              <Form.Label>Single Question Mark</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter single Question Mark\"\r\n                name=\"singleQuestionMark\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.singleQuestionMark ? (\r\n              <div className=\"alert alert-danger\">\r\n                {errors.singleQuestionMark}\r\n              </div>\r\n            ) : null}\r\n            <Form.Group controlId=\"questionStemLength\">\r\n              <Form.Label>Question Stem Length</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter question stem length\"\r\n                name=\"questionStemLength\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.questionStemLength ? (\r\n              <div className=\"alert alert-danger\">{errors.questionStemLength}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"penaltyMark\">\r\n              <Form.Label>Penalty Mark</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter penalty Mark\"\r\n                name=\"penaltyMark\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.penaltyMark ? (\r\n              <div className=\"alert alert-danger\">{errors.penaltyMark}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"timeLimit\">\r\n              <Form.Label>Time Limit(Minutes)</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Time Limit\"\r\n                name=\"timeLimit\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.timeLimit ? (\r\n              <div className=\"alert alert-danger\">{errors.timeLimit}</div>\r\n            ) : null}\r\n          </Form>\r\n          <Button onClick={handleSubmit}>Submit</Button>\r\n        </ExamCard>\r\n      )}\r\n    </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExamSpec;\r\n\r\nfunction onSubmitHandler(selectedQuestionIds, dispatch, setHideMsg) {\r\n  return (values) => {\r\n    if (selectedQuestionIds.length > 0) {\r\n      dispatch(onLoadingLoader());\r\n      setHideMsg(true);\r\n      dispatch(postExamProfile(values, selectedQuestionIds));\r\n    } else {\r\n      alert(\"Their is no selected Question\");\r\n    }\r\n  };\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  } else if (!validator.isLength(values.title, { min: 3, max: 20 })) {\r\n    errors.title = \"Title should be between 3-20 characters\";\r\n  }\r\n  if (!values.description) {\r\n    errors.description = \"Required\";\r\n  } else if (!validator.isLength(values.description, { min: 3, max: 50 })) {\r\n    errors.description = \"Description should be between 3-50 characters\";\r\n  }\r\n  if (!values.singleQuestionMark) {\r\n    errors.singleQuestionMark = \"Required\";\r\n  } else if (!validator.isInt(values.singleQuestionMark)) {\r\n    errors.singleQuestionMark = \"Single Question Mark should be Integer value\";\r\n  }\r\n  if (!values.questionStemLength) {\r\n    errors.questionStemLength = \"Required\";\r\n  } else if (!validator.isNumeric(values.questionStemLength)) {\r\n    errors.questionStemLength = \"Question stem length should be Numeric value\";\r\n  }\r\n  if (!values.penaltyMark) {\r\n    errors.penaltyMark = \"Required\";\r\n  } else if (!validator.isNumeric(values.penaltyMark)) {\r\n    errors.penaltyMark = \"penalty Mark should be Numeric value\";\r\n  }\r\n  if (!values.timeLimit) {\r\n    errors.timeLimit = \"Required\";\r\n  } else if (!validator.isInt(values.timeLimit)) {\r\n    errors.timeLimit = \"Timelimit Mark should be Interger Value\";\r\n  }\r\n  return errors;\r\n};\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst filter = ({ handleChange, categories }) => {\r\n  return (\r\n    <ExamCard header=\"Filter\" showHeader={true}>\r\n      <Form.Group controlId=\"formGridParent\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Form.Control as=\"select\" defaultValue=\"top\" name=\"categoryId\" onChange={handleChange}>\r\n          <option  disabled value=\"top\">Top...</option>\r\n          {categories.map((value) => {\r\n            let categorySlug = value.slug.replace(/_/g, \" / \");\r\n            return <option value={value.id}>{categorySlug}</option>;\r\n          })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </ExamCard>\r\n  );\r\n};\r\n\r\nexport default filter;\r\n","import React, { useState } from \"react\";\r\nimport { Badge, Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedQuestionsLoader } from \"../../store/examPaper\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst SelectedQuestionsPreview = ({}) => {\r\n  const dispatch = useDispatch();\r\n  const [finalSelectedQuestions, setFinalSelectedQuestions] = useState(useSelector((state) => state.examPaper.questions));\r\n  const [finalSelectedQuestionIds, setFinalSelectedQuestionIds] = useState(useSelector((state) => state.examPaper.ids));\r\n  return (\r\n    <ExamCard header=\"Selected Questions Preview\" showHeader={false}>\r\n      {\r\n        <ListGroup className=\"my-2\">\r\n          {finalSelectedQuestions.map((question, index) => (\r\n            <ListGroup.Item key={index} variant={\"success\"}>\r\n              {`${index + 1}. ${question.title} --> ${question.qText}`}\r\n              <Badge variant=\"danger ml-2\" onClick={()=>{\r\n                setFinalSelectedQuestions(finalSelectedQuestions.filter(v=> v.title !== question.title));\r\n                setFinalSelectedQuestionIds(finalSelectedQuestionIds.filter((v,i)=> i !== index));\r\n              }}><FaTimes /></Badge>\r\n            </ListGroup.Item>\r\n          ))}\r\n          <ListGroupItem>\r\n              <Button onClick={()=>{\r\n                dispatch(selectedQuestionsLoader(finalSelectedQuestions, finalSelectedQuestionIds))\r\n              }}>Submit</Button>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      }\r\n    </ExamCard>\r\n  );\r\n};\r\n\r\nexport default SelectedQuestionsPreview;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\n\r\nconst pagination = ({ itemsCount, pageSize, onPageHandler, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const items = [];\r\n  for (let number = 1; number <= pageCount; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        onClick={() => {\r\n          onPageHandler(number);\r\n        }}\r\n        active={number === currentPage}\r\n        className=\"my-2 mr-2 text-center\"\r\n        style={{width:\"40px\",height:'30px'}}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  return <Pagination className=\"justify-content-start align-content-start flex-wrap\" >{items}</Pagination>;\r\n};\r\n\r\nexport default pagination;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\n\r\nconst slice = createSlice({\r\n  name: \"Question\",\r\n  initialState: {\r\n    questions: [],\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getQuestions: (state, action) => {\r\n      state.questions = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getQuestions } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getQuestionLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions\",\r\n      method: \"get\",\r\n      //sendToken: true,\r\n      //data,\r\n      //config,\r\n      onSuccess: getQuestions.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getQuestionByCategoryLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/category/\" + id,\r\n      method: \"get\",\r\n      onSuccess: getQuestions.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  const questionData = new FormData();\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key]);\r\n  });\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions\",\r\n      method: \"post\",\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n    })\r\n  );\r\n};\r\n\r\nexport const uploadQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  const questionData = new FormData();\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key]);\r\n  });\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/files\",\r\n      method: \"post\",\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n    })\r\n  );\r\n};\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Alert, Button, Col, Form, FormCheck, ListGroup, Modal, Row } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FaShoppingBasket } from 'react-icons/fa';\r\nimport { connect } from \"react-redux\";\r\nimport ExamSpec from \"../../components/examBuilder/examSpec\";\r\nimport Filter from \"../../components/examBuilder/filter\";\r\nimport SelectedQuestionsPreview from \"../../components/examBuilder/selectedQuestionsPreview\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport { fetchCategory } from \"../../store/category\";\r\nimport { selectedQuestionsLoader } from \"../../store/examPaper\";\r\nimport {\r\n  getQuestionByCategoryLoader, getQuestionLoader\r\n} from \"../../store/question\";\r\nimport { paginate } from \"../../utils/paginate\";\r\n\r\n\r\nclass ExamPaper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      id: null,\r\n      //input: React.createRef(),\r\n      action: null,\r\n      //toogle: false,\r\n      checkedQuestionIds: [],\r\n      checkedQuestions: [],\r\n      //toogleChecked: false,\r\n      pageSize: 10,\r\n      currentPage: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader();\r\n    this.props.onGetQuestionLoader();\r\n  }\r\n  componentDidUpdate(){\r\n    // this.setState((preState,props)=>{\r\n    //   if(preState.checkedQuestionIds.length !== props.examPaper.ids.length)\r\n    //   preState.checkedQuestionIds= props.examPaper.questions;\r\n    //   preState.checkedQuestions = props.examPaper.ids;\r\n    // })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  checkHandleChange = (e) => {\r\n    const isChecked = e.target.checked;\r\n    const value = e.target.value;\r\n    const [title, qText] = e.target.name.split(\"*_*\");\r\n    // this.setState({\r\n    //   checkedQuestionIds: [...this.state.checkedQuestionIds, e.target.value],\r\n    // });\r\n\r\n    this.setState((preState) => {\r\n      if (isChecked) {\r\n        if(!preState.checkedQuestionIds.includes(value)){\r\n          preState.checkedQuestionIds.push(value);\r\n          preState.checkedQuestions.push({ title, qText });\r\n        }\r\n        //preState.checkedQuestions.push({ title, qText });\r\n      } else {\r\n        preState.checkedQuestionIds = preState.checkedQuestionIds.filter(v=> v!== value);\r\n        preState.checkedQuestions =  preState.checkedQuestions.filter(v=> v.title !== title);\r\n      }\r\n    });\r\n  };\r\n\r\n  actionHandleChange = (e)=>{\r\n    e = e.target;\r\n    const v = e.value;\r\n\r\n    switch(v){\r\n      case 'mAll':\r\n        this.setState({\r\n          action: 'mAll',\r\n          checkedQuestionIds: this.props.question.questions.map(e=>e.id),\r\n          checkedQuestions: this.props.question.questions\r\n      \r\n      });\r\n        break;\r\n      case 'uAll':\r\n        this.setState({\r\n          action: 'uAll',\r\n          checkedQuestionIds: [],\r\n          checkedQuestions: []\r\n      });\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    e = e.target;\r\n    this.props.onGetQuestionByCategoryLoader(e.value);\r\n    this.setState({\r\n      id: e.value,\r\n    });\r\n  };\r\n  onPageHandler = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const questions = paginate(\r\n      this.props.question.questions,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Exam Builder</title>\r\n        </Helmet>\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Selected Questions Preview</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <SelectedQuestionsPreview\r\n              //toogleChecked={this.toogleChecked}\r\n              checkedQuestions={this.state.checkedQuestions}\r\n              checkedQuestionIds={this.state.checkedQuestionIds}\r\n            />\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <div style={{position:'fixed', bottom: '50px', right: '20px', width: '50px', height: '35px', zIndex:'99'}}>\r\n          <Button onClick={this.handleShow} title=\"Questions Busket\">\r\n            <FaShoppingBasket size={'2rem'}/>\r\n          </Button>\r\n          <span className=\"bg-danger text-white p-1 text-center\" style={{position: 'absolute', top: '-15px' , right: '-10px'}}>\r\n            {this.props.examPaper.questions.length}\r\n          </span>\r\n          \r\n        </div>\r\n\r\n        <Row>\r\n          <Col lg={4}>\r\n            <Alert variant={\"primary\"} className=\"text-center mt-3\">\r\n              Total number of Question is :\r\n              {this.props.question.questions.length}\r\n            </Alert>\r\n            \r\n            <Filter\r\n              handleChange={this.handleChange}\r\n              categories={this.props.category.categories}\r\n            />\r\n            <ExamSpec categories={this.props.category.categories} />\r\n            {/* <SelectedQuestionsPreview\r\n              //toogleChecked={this.toogleChecked}\r\n              checkedQuestions={this.state.checkedQuestions}\r\n              checkedQuestionIds={this.state.checkedQuestionIds}\r\n            /> */}\r\n          </Col>\r\n          <Col lg={8}>\r\n            {\r\n              <FormCheck>\r\n                <ListGroup className=\"my-2\">\r\n                  {questions.length < 1 && <p className=\"text-danger\">No Question in this category.</p>}\r\n                  {questions.map((question, index) => (\r\n                    <ListGroup.Item\r\n                      key={question.id}\r\n                      variant={index % 2 === 0 ? \"dark\" : \"light\"}\r\n                    >\r\n                      { this.state.action === null &&\r\n                        <Form.Check\r\n                        //ref={this.state.input}\r\n                          inline\r\n                          type=\"checkbox\"\r\n                          value={question.id}\r\n                          onChange={this.checkHandleChange}\r\n                          name={question.title + \"*_*\" + question.qText}\r\n                          defaultChecked={this.state.checkedQuestionIds.includes(\r\n                            question.id.toString()\r\n                          )}\r\n                        />\r\n                      }\r\n                \r\n\r\n                      {this.state.action === 'mAll' &&\r\n                        <Form.Check\r\n                        //ref={this.state.input}\r\n                          inline\r\n                          type=\"checkbox\"\r\n                          checked={true}\r\n                          value={question.id}\r\n                          onChange={this.checkHandleChange}\r\n                          name={question.title + \"*_*\" + question.qText}\r\n                          defaultChecked={this.state.checkedQuestionIds.includes(\r\n                            question.id.toString()\r\n                          )}\r\n                        /> }\r\n\r\n                      {this.state.action === 'uAll' &&\r\n                        <Form.Check\r\n                        //ref={this.state.input}\r\n                          inline\r\n                          type=\"checkbox\"\r\n                          checked={false}\r\n                          value={question.id}\r\n                          onChange={this.checkHandleChange}\r\n                          name={question.title + \"*_*\" + question.qText}\r\n                          defaultChecked={this.state.checkedQuestionIds.includes(\r\n                            question.id.toString()\r\n                          )}\r\n                        />\r\n                      }\r\n                      \r\n                      {`${index + 1}. ${question.title} --> ${question.qText}`}\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </FormCheck>\r\n            }\r\n            <Pagination\r\n              itemsCount={this.props.question.questions.length}\r\n              pageSize={this.state.pageSize}\r\n              currentPage={this.state.currentPage}\r\n              onPageHandler={this.onPageHandler}\r\n            />\r\n\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  //this.setState({ toogleChecked: !this.state.toogleChecked });\r\n                  this.props.onSelectedQuestionsLoader(\r\n                    [...this.state.checkedQuestions],\r\n                    [...this.state.checkedQuestionIds]\r\n                  );\r\n                }}\r\n                className=\"mr-5 mb-2 mb-sm-0\"\r\n              >\r\n                Add to Preview Cart\r\n              </Button>\r\n              {/* onChange={actionHandleChange} */}\r\n              <Form.Group controlId=\"formGridParent\">\r\n                <Form.Label>Actions</Form.Label>\r\n                <Form.Control as=\"select\" name=\"action\" onChange={this.actionHandleChange}  >\r\n                <option>Select...</option>\r\n                  <option value=\"mAll\">Mark All</option>\r\n                  <option value=\"uAll\">UnMark All</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onGetQuestionLoader: () => dispatch(getQuestionLoader()),\r\n    onGetQuestionByCategoryLoader: (id) =>\r\n      dispatch(getQuestionByCategoryLoader(id)),\r\n    onSelectedQuestionsLoader: (questions, ids) =>\r\n      dispatch(selectedQuestionsLoader(questions, ids)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    question: state.question,\r\n    category: state.category,\r\n    api: state.api,\r\n    examPaper: state.examPaper,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamPaper);\r\n","import React, { Component } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from \"react-redux\";\r\nimport GallaryCard from \"../../components/exams/gallary/gallaryCard\";\r\nimport { getAllExamsLoader, resetExamResult } from \"../../store/exams\";\r\n\r\n\r\nclass ExamLists extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.onGetAllExamsLoader();\r\n    this.props.onResetExamResult();\r\n  }\r\n  type = [\r\n    \"Assignment\",\r\n    \"Weekly\",\r\n    \"Monthly\",\r\n    \"Assesment\",\r\n    \"Term\",\r\n    \"Test\",\r\n    \"Final\",\r\n  ];\r\n  render() {\r\n      console.log(Object.keys(this.props.exams.exams))\r\n    return (\r\n      <>\r\n      <Helmet>\r\n        <title>List of Exams</title>\r\n      </Helmet>\r\n      {this.props.exams.exams.length < 1 && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )}\r\n        {Object.keys(this.props.exams.exams).map(key=> this.props.exams.exams[key] && \r\n        <GallaryCard \r\n        title={this.props.intl.formatMessage({id: key, defaultMessage: key})} \r\n        exams={this.props.exams.exams[key]} />)}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetAllExamsLoader: () => dispatch(getAllExamsLoader()),\r\n    onResetExamResult: () => dispatch({ type: resetExamResult.type }),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams,\r\n    //   auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  };\r\n};\r\n\r\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)((ExamLists)));\r\n","import React from \"react\";\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\nconst questionStemView = ({\r\n  id,\r\n  qType,\r\n  stem,\r\n  index,\r\n  handleChange,\r\n  defaultChecked,\r\n}) => {\r\n  return (\r\n    <Row className=\"pr-3 pl-2\">\r\n      <Col lg={10}>\r\n        <div>{index + \". \" + stem}</div>\r\n      </Col>\r\n      <Col lg={2}>\r\n        <Form.Group as={Col} controlId=\"formGroupQuestionStemAnswer\">\r\n          {qType === \"matrix\" ? (\r\n            <>\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"True\"\r\n                name={id + \"_\" + index}\r\n                id=\"formHorizontalRadios1\"\r\n                value={1}\r\n                defaultChecked={defaultChecked === \"1\"}\r\n                onChange={handleChange}\r\n                className=\"mb-0\"\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"False\"\r\n                name={id + \"_\" + index}\r\n                id=\"formHorizontalRadios2\"\r\n                value={0}\r\n                defaultChecked={defaultChecked === \"0\"}\r\n                onChange={handleChange}\r\n                className=\"mb-0\"\r\n              />\r\n            </>\r\n          ) : (\r\n            <Form.Check\r\n              type=\"radio\"\r\n              name={id}\r\n              id=\"formHorizontalRadios1\"\r\n              value={index}\r\n              defaultChecked={defaultChecked === index}\r\n              onChange={handleChange}\r\n              className=\"mb-0\"\r\n            />\r\n          )}\r\n        </Form.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default questionStemView;\r\n","import React from \"react\";\r\nimport {\r\n    ListGroup\r\n} from \"react-bootstrap\";\r\nimport Stem from \"./stem\";\r\n\r\n\r\n\r\nconst QuestionForm = ({ question, handleChange, defaultChecked }) => {\r\n  return (\r\n    <ListGroup as=\"ul\" className=\"mt-3\">\r\n      <ListGroup.Item as=\"li\" active>\r\n        {question.qText}\r\n      </ListGroup.Item>\r\n\r\n      {question.stems.map((stem, index) => (\r\n        <ListGroup.Item as=\"li\" key={index}>\r\n          <Stem\r\n            qType={question.qType}\r\n            stem={stem}\r\n            index={index + 1}\r\n            id={question.id}\r\n            handleChange={handleChange}\r\n            defaultChecked={defaultChecked ? defaultChecked[index] : null}\r\n          />\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst subNavBar = (props) => {\r\n  const pages = props.isAuthenticated\r\n    ? [\"dashboard\",\"exams\" ,\"logout\"]\r\n    : [\"exams\",\"signup\", \"login\"];\r\n\r\n  return (\r\n        <Nav className=\"\">\r\n          <Nav.Item as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                to={{ pathname: \"/\"}}\r\n                className=\"nav-link\"\r\n              >\r\n                {\"Home\".toUpperCase()}\r\n              </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                to=\"/#contact\"\r\n                className=\"nav-link\"\r\n              >\r\n                {\"Contact\".toUpperCase()}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          {pages.map((value) => (\r\n            <Nav.Item key={value} as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/\" + value }}\r\n                className=\"nav-link\"\r\n              >\r\n                {value.toUpperCase()}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n          {/* </Scrollspy> */}\r\n        </Nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(subNavBar);\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Col, Form,\r\n  Modal,\r\n  Row,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport Countdown from \"react-countdown\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { FaRegArrowAltCircleDown, FaRegArrowAltCircleUp } from 'react-icons/fa';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link as LinkScroll } from \"react-scroll\";\r\nimport QuestionView from \"../../components/exams/paper/question/question\";\r\nimport SubNavBar from \"../../components/navbar/subNavBar\";\r\nimport PaginationCustom from \"../../components/pagination/pagination\";\r\nimport {\r\n  getExamByIdLoader,\r\n  getFreeExamByIdLoader,\r\n  postExamByIdLoader,\r\n  postFreeExamByIdLoader,\r\n  resetExamError\r\n} from \"../../store/exams\";\r\nimport { paginate } from \"../../utils/paginate\";\r\n\r\n// Random component\r\nconst Completionist = () => (\r\n  <span className=\"text-danger\">Your Time is Finished</span>\r\n);\r\n\r\n// Renderer callback with condition\r\nconst renderer = ({ hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    // Render a completed state\r\n    return <Completionist />;\r\n  } else {\r\n    // Render a countdown\r\n    return (\r\n      <span>\r\n        <Badge\r\n          variant={(hours < 1) & (minutes < 5) ? \"danger\" : \"success\"}\r\n          style={{ fontSize: \"2rem\" }}\r\n        >\r\n          {hours + \" H\"}\r\n        </Badge>\r\n        <Badge variant=\"light\" style={{ fontSize: \"1.5rem\" }}>\r\n          :\r\n        </Badge>\r\n        <Badge\r\n          variant={(hours < 1) & (minutes < 5) ? \"danger\" : \"success\"}\r\n          style={{ fontSize: \"2rem\" }}\r\n        >\r\n          {minutes + \" M\"}\r\n        </Badge>\r\n        <Badge variant=\"light\" style={{ fontSize: \"1.5rem\" }}>\r\n          :\r\n        </Badge>\r\n        <Badge\r\n          variant={(hours < 1) & (minutes < 5) ? \"danger\" : \"success\"}\r\n          style={{ fontSize: \"2rem\" }}\r\n        >\r\n          {seconds + \" S\"}\r\n        </Badge>\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nclass ExamTaker extends Component {\r\n  constructor(){\r\n    super()\r\n  }\r\n  state = {\r\n    loading: false,\r\n    //For Pagination\r\n    pageSize: 1,\r\n    currentPage: 1,\r\n    //For Main Answer Sheet React CountDown\r\n    date: Date.now(),\r\n    //use in ending exam\r\n    timeExpired: false,\r\n    modalShow: false,\r\n    arrowState: true,\r\n    showPagination: true,\r\n  };\r\n\r\n  timeTakenToComplete = 0;\r\n  answers = [];\r\n  answerIds = new Set();\r\n\r\n  modalShow = () => {\r\n    this.setState({ modalShow: true });\r\n  };\r\n  modalHide = () => {\r\n    this.setState({ modalShow: false });\r\n  };\r\n\r\n  //For paination\r\n  onPageHandler = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    if (name.includes(\"_\")) {\r\n      const [id, index] = name.split(\"_\");\r\n      this.setState((preState) => {\r\n        if (!preState[id]) preState[id] = [];\r\n        preState[id][index - 1] = value;\r\n        this.answerIds.add(id);\r\n      });\r\n    } else {\r\n      this.setState((preState) => {\r\n        preState[name] = [value];\r\n        this.answerIds.add(name);\r\n      });\r\n    }\r\n  };\r\n\r\n  onSwithchHandleChange = (e) => {\r\n    const checked = e.target.checked;\r\n    if(checked) {\r\n      this.setState({pageSize: this.props.exams.questions.length, showPagination: false});\r\n    }\r\n    else{\r\n      this.setState({pageSize: 1, showPagination: true});\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  // for submitting Answer Sheet\r\n  onSubmitHandler = () => {\r\n    this.setState({ loading: true });\r\n\r\n    this.answerIds.forEach((id) => {\r\n      this.answers.push({\r\n        id: id,\r\n        stems: this.state[id],\r\n        type: _.find(this.props.exams.questions, (o) => o.id == id).qType,\r\n      });\r\n    });\r\n    if (this.props.free) {\r\n      this.props.onPostFreeExamByIdLoader({\r\n        examId: this.props.match.params.id,\r\n        timeTakenToComplete: (this.timeTakenToComplete / 60).toFixed(4),\r\n        answers: this.answers,\r\n        questionIdsByOrder: this.props.exams.questionIdsByOrder,\r\n      });\r\n    } else {\r\n      this.props.onPostExamByIdLoader({\r\n        examId: this.props.match.params.id,\r\n        timeTakenToComplete: Math.ceil(this.timeTakenToComplete / 60).toFixed(\r\n          4\r\n        ),\r\n        answers: this.answers,\r\n        questionIdsByOrder: this.props.exams.questionIdsByOrder,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onResetExamLoader();\r\n    if (this.props.auth.token) {\r\n      this.props.onGetExamByIdLoader(this.props.match.params.id);\r\n    } else {\r\n      this.props.onGetFreeExamByIdLoader(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const questions = paginate(\r\n      this.props.exams.questions,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Exam- test your knowledge</title>\r\n        </Helmet>\r\n        {(this.props.exams.examResult || this.props.exams.error) && (\r\n          <Redirect to=\"/result\" />\r\n        )}\r\n\r\n        {(this.props.exams.questions.length < 1 && !this.props.exams.examError) && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )}\r\n\r\n        {this.state.loading  && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )}\r\n\r\n\r\n        {/* Modal tests are you want submit or time expired*/}\r\n        <Modal show={this.state.modalShow} onHide={this.modalHide}>\r\n          {this.state.timeExpired ? (\r\n            <>\r\n              <Modal.Header>\r\n                <Modal.Title className=\"text-danger\">Time Expired</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div>\r\n                  <p className=\"lead\">You will Taken To Result Page.</p>\r\n                  <Countdown\r\n                    date={Date.now() + 5 * 1000}\r\n                    renderer={({ seconds }) => (\r\n                      <p\r\n                        className=\"text-center text-danger\"\r\n                        style={{ fontSize: \"2rem\" }}\r\n                      >\r\n                        {seconds}\r\n                      </p>\r\n                    )}\r\n                    onComplete={this.onSubmitHandler}\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Submit Answer Sheet</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div>\r\n                  <p className=\"lead\">\r\n                    Are You Sure ? You will Taken To Result Page.\r\n                  </p>\r\n                  <Countdown\r\n                    date={Date.now() + 5 * 1000}\r\n                    renderer={({ seconds }) => (\r\n                      <p\r\n                        className=\"text-center text-danger\"\r\n                        style={{ fontSize: \"2rem\" }}\r\n                      >\r\n                        {seconds}\r\n                      </p>\r\n                    )}\r\n                    onComplete={this.onSubmitHandler}\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.modalHide}>\r\n                  Go Back\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={this.onSubmitHandler}>\r\n                  Yes, I Want.\r\n                </Button>\r\n              </Modal.Footer>\r\n            </>\r\n          )}\r\n        </Modal>\r\n\r\n        {this.props.exams.timeLimit && (\r\n          <div className=\"text-dark text-center mt-1\" id=\"et-top\">\r\n            <Form.Switch\r\n            id=\"custom-switch\"\r\n            label=\"Switch to All Questions View\"\r\n            className=\"mb-2\"\r\n            onChange={this.onSwithchHandleChange}\r\n            > \r\n\r\n            </Form.Switch>\r\n            <Countdown\r\n              date={this.state.date + this.props.exams.timeLimit * 60 * 1000}\r\n              renderer={renderer}\r\n              onTick={() => {\r\n                this.timeTakenToComplete++;\r\n              }}\r\n              onComplete={() => {\r\n                this.setState({ timeExpired: true, modalShow: true });\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        {this.props.exams.examError ? (\r\n          <>\r\n            {\" \"}\r\n            <Alert variant=\"danger\" className=\"text-center mt-5\">\r\n              <h2>{this.props.exams.examError}</h2>\r\n              <h4>Possible Solution</h4>\r\n              <p>\r\n                You may not be logged in. So you can not participate exams other\r\n                than free. So login or participate free exam only.\r\n              </p>\r\n            </Alert>\r\n            <SubNavBar />\r\n          </>\r\n        ) : (\r\n          <Row className=\"\">\r\n            <Col lg={9}>\r\n              {questions.map((question) => (\r\n                <QuestionView\r\n                  key={question.id}\r\n                  question={question}\r\n                  handleChange={this.onHandleChange}\r\n                  defaultChecked={\r\n                    this.state[question.id] ? this.state[question.id] : null\r\n                  }\r\n                />\r\n              ))}\r\n              <div className=\"mt-2 d-flex justify-content-center\">\r\n                {this.state.showPagination && <Pagination\r\n                  activePage={this.state.currentPage}\r\n                  itemsCountPerPage={1}\r\n                  totalItemsCount={this.props.exams.questions.length}\r\n                  pageRangeDisplayed={1}\r\n                  onChange={this.onPageHandler}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                  prevPageText=\"Previous\"\r\n                  nextPageText=\"Next\"\r\n                /> }\r\n                <Button onClick={this.modalShow} className=\"mb-3 ml-5 btn-md\">\r\n                  Submit Answer Sheet\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n            <Col lg={3} className=\"mt-3\" id=\"qNavigator\">\r\n              <LinkScroll\r\n                  to={this.state.arrowState ? \"qNavigator\" : \"et-top\"}\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-50}\r\n                  duration={500}\r\n                  className=\"hideInMd text-secondary\"\r\n                  style={{position: 'fixed', bottom: '10px', left: '10px', zIndex: \"10000\"}}\r\n                  //to={{ pathname: \"/\" }}\r\n                >\r\n                  {this.state.arrowState ? <FaRegArrowAltCircleDown size={\"1.2rem\"} onClick={()=>{this.setState({arrowState: false})}}/> : <FaRegArrowAltCircleUp size={\"1.2rem\"} onClick={()=>{this.setState({arrowState: true})}} />}\r\n                </LinkScroll>\r\n              {this.state.showPagination && <PaginationCustom\r\n                itemsCount={this.props.exams.questions.length}\r\n                pageSize={this.state.pageSize}\r\n                currentPage={this.state.currentPage}\r\n                onPageHandler={this.onPageHandler}\r\n              />}\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetExamByIdLoader: (id) => dispatch(getExamByIdLoader(id)),\r\n    onGetFreeExamByIdLoader: (id) => dispatch(getFreeExamByIdLoader(id)),\r\n    onPostExamByIdLoader: (data) => dispatch(postExamByIdLoader(data)),\r\n    onPostFreeExamByIdLoader: (data) => dispatch(postFreeExamByIdLoader(data)),\r\n    onResetExamLoader: () => dispatch({ type: resetExamError.type }),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams,\r\n    auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ExamTaker));\r\n","import React from \"react\";\r\nimport { Accordion, Button, Card, Form } from \"react-bootstrap\";\r\n\r\nconst questionUpload = ({\r\n  categories,\r\n  categoryRef,\r\n  handleChange,\r\n  submitHandler,\r\n  formErrors,\r\n}) => {\r\n  return (\r\n    <Accordion className=\"mt-3\">\r\n      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n        <h3> Upload by Excel file</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Form className=\"mt-2\" onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formGridCategory\">\r\n            <Form.Label>Question Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"category\"\r\n              onChange={handleChange}\r\n              ref={categoryRef}\r\n            >\r\n              {/* <option value=\"Top\">Top</option> */}\r\n              {categories.map((value, index) => {\r\n                let CategorySlug = value.slug.replace(/_/g, \" / \");\r\n                return (\r\n                  <option\r\n                    key={index}\r\n                    value={value.id}\r\n                    //selected={Question && value.id === Question.parentId}\r\n                  >\r\n                    {CategorySlug}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.category.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.category}</span>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Upload an excel file</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              className={\"form-control-file\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" className=\"btn-submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default questionUpload;\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  Spinner,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  InputGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nconst questionStemView = ({ qType, stem, index, handleChange }) => {\r\n  return (\r\n    <Row className=\"pr-3 pl-2 mt-1\">\r\n      <Col lg={5}>\r\n        <Form.Group controlId=\"formGroupQuestionStem\">\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>{index}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"stem...\"\r\n              name={\"qStem\" + index}\r\n              value={stem[\"qStem\" + index]}\r\n              // value={Question ? Question.title : null}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Col>\r\n      <Col lg={2}>\r\n        <Form.Group as={Col} controlId=\"formGroupQuestionStemAnswer\">\r\n          {qType === \"matrix\" ? (\r\n            <>\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"True\"\r\n                name={\"aStem\" + index}\r\n                id=\"formHorizontalRadios1\"\r\n                value={1}\r\n                selected={stem[\"aStem\" + index] === \"1\"}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"False\"\r\n                name={\"aStem\" + index}\r\n                id=\"formHorizontalRadios2\"\r\n                value={0}\r\n                selected={stem[\"aStem\" + index] === \"0\"}\r\n                onChange={handleChange}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Form.Check\r\n              type=\"radio\"\r\n              name={\"aStemSba\"}\r\n              id=\"formHorizontalRadios1\"\r\n              value={index}\r\n              selected={stem[\"aStemSba\"] === index.toString()}\r\n              onChange={handleChange}\r\n            />\r\n          )}\r\n        </Form.Group>\r\n      </Col>\r\n      <Col lg={5}>\r\n        <Form.Group as={Col} controlId=\"formGroupQuestionStemFeedBack\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"FeedBack\"\r\n            name={\"fbStem\" + index}\r\n            value={stem[\"fbStem\" + index]}\r\n            // value={Question ? Question.title : null}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default questionStemView;\r\n","import React, { useState } from \"react\";\r\nimport { Accordion, Button, Card, Form } from \"react-bootstrap\";\r\nimport Stems from \"./questionStem.view\";\r\n\r\n\r\n\r\nconst QuestionForm = (props) => {\r\n  const {\r\n    submitHandler,\r\n    handleChange,\r\n    formErrors,\r\n    categories,\r\n    title,\r\n    categoryRef,\r\n    question,\r\n    showEditQuestionAccordionStateHandler,\r\n  } = props;\r\n  const [stemAmount, setStemAmount] = useState([1, 2, 3, 4, 5]);\r\n  return (\r\n    <Accordion className=\"mt-3\" defaultActiveKey={title && \"0\"}>\r\n      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n        <h3> {title ? \"Edit \" + title : \"Create A New\"} Question</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Form className=\"mt-2\" onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formGroupQuestionTitle\">\r\n            <Form.Label>Question Title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Question Title\"\r\n              name=\"title\"\r\n              value={question.title}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.title.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.title}</span>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridCategory\">\r\n            <Form.Label>Question Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"category\"\r\n              defaultValue={question.category}\r\n              onChange={handleChange}\r\n              ref={categoryRef}\r\n            >\r\n              {/* <option value=\"Top\">Top</option> */}\r\n              {categories.map((value, index) => {\r\n                let CategorySlug = value.slug.replace(/_/g, \" / \");\r\n                return (\r\n                  <option\r\n                    key={index}\r\n                    value={value.id}\r\n                    //selected={Question && value.id === Question.parentId}\r\n                  >\r\n                    {CategorySlug}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.category.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.category}</span>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridQType\">\r\n            <Form.Label>Question Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"qType\"\r\n              value={question.qType}\r\n              onChange={handleChange}\r\n              // ref={selectOptionValueRef}\r\n            >\r\n              <option value=\"matrix\">Matrix</option>\r\n              <option value=\"sba\">SBA</option>\r\n            </Form.Control>\r\n            {formErrors.category.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.category}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupQuestionQText\">\r\n            <Form.Label>Question Text</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Question text\"\r\n              name=\"qText\"\r\n              value={question.qText}\r\n              // value={Question ? Question.title : null}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.title.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.qText}</span>\r\n            )}\r\n          </Form.Group>\r\n          <div>\r\n            {stemAmount.map((i) => (\r\n              <Stems\r\n                key={\"stem-\" + i}\r\n                index={i}\r\n                stem={question.stem}\r\n                qType={question.qType}\r\n                handleChange={handleChange}\r\n              />\r\n            ))}\r\n            {formErrors.stem.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.stem}</span>\r\n            )}\r\n            {/* <Button\r\n              onClick={() => {\r\n                setStemAmount((prevStemAmount) => [\r\n                  ...prevStemAmount,\r\n                  prevStemAmount.length + 1,\r\n                ]);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setStemAmount((prevStemAmount) =>\r\n                  prevStemAmount.filter((v, i, arr) => v !== arr.length)\r\n                );\r\n              }}\r\n            >\r\n              Delete\r\n            </Button> */}\r\n          </div>\r\n          {/* <Form.Group controlId=\"formGroupQuestionOrder\">\r\n            <Form.Label>Question Order</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"order\"\r\n              value={Question && Question.order}\r\n              placeholder=\"e.g. 5 <..Order makes priority. Lower value higher order..>\"\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.order.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.order}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupQuestionDes\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"textarea\"\r\n              placeholder=\"Enter short description\"\r\n              name=\"description\"\r\n              value={Question && Question.description}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.description.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.description}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Upload Image</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              className={\"form-control-file\"}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.image.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.image}</span>\r\n            )}\r\n          </Form.Group> */}\r\n\r\n          <Button type=\"submit\" className=\"btn-submit\">\r\n            Submit\r\n          </Button>\r\n          {title && (\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"ml-3\"\r\n              onClick={showEditQuestionAccordionStateHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Alert, Badge, Button, ListGroup, Toast } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { connect } from \"react-redux\";\r\nimport validator from \"validator\";\r\nimport { fetchCategory } from \"../../store/category\";\r\nimport {\r\n  createQuestionLoader,\r\n  uploadQuestionLoader\r\n} from \"../../store/question\";\r\nimport errorHandler from \"../../utils/errorHandler\";\r\nimport QuestionUploadForm from \"./questionsUpload\";\r\nimport QuestionForm from \"./questionView\";\r\n\r\n\r\n\r\nconst centeredStyle = {\r\n  // styling to display server response in middle of screen\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  /* bring your own prefixes */\r\n  transform: \"translate(-50%, -50%)\",\r\n  zIndex: \"1000\",\r\n};\r\n\r\nconst formValid = ({ formErrors, rest }) => {\r\n  //to check if form fields are null or contain error\r\n  let valid = true;\r\n  let error = \"\";\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false) && (error = v);\r\n    v.length > 0 && (error = v);\r\n  });\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === (null || \"\") && (valid = false);\r\n  });\r\n  return { valid, error }; // valid: is it valid ; error: what is the error message\r\n};\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false, // controlls spinner state\r\n      id: null, // need to pass id in edit or delete category section\r\n      title: \"\", // used in editCategory component to display the category name in heading\r\n      category: \"Top\",\r\n      qType: \"matrix\",\r\n      qText: \"\",\r\n      stemAmount: [1, 2, 3, 4, 5],\r\n      uploadedExcelQuestion: null,\r\n      response: null, // to display response message\r\n      responseClass: \"success\", // depends on response type\r\n      showEditCategoryComponent: false, // show or hide editCategory component\r\n      toastShow: true,\r\n      formErrors: {\r\n        // for storing form feilds error on handle change\r\n        title: \"\",\r\n        category: \"\",\r\n        qType: \"\",\r\n        qText: \"\",\r\n        stem: \"\",\r\n      },\r\n    };\r\n    this.categoryRef = React.createRef(null);\r\n  }\r\n\r\n  hideResponse = () => {\r\n    // hide the response message\r\n    this.setState({ response: null });\r\n  };\r\n  resetState = () => {\r\n    this.setState({\r\n      title: \"\",\r\n      category: \"Top\",\r\n      qType: \"matrix\",\r\n      qText: \"\",\r\n      stemAmount: [1, 2, 3, 4, 5],\r\n      aStemSba: null,\r\n    });\r\n    this.state.stemAmount.map((v) => {\r\n      this.setState({\r\n        [\"qStem\" + v]: \"\",\r\n        [\"aStem\" + v]: null,\r\n        [\"fbStem\" + v]: \"\",\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    switch (name) {\r\n      case \"title\":\r\n        formErrors.title = validator.isLength(value, { min: 1, max: 200 })\r\n          ? \"\"\r\n          : \"Title should not be emty, more than 200 charecters\";\r\n        break;\r\n      case \"qText\":\r\n        formErrors.qText = validator.isLength(value, {\r\n          min: 1,\r\n          max: 500,\r\n        })\r\n          ? \"\"\r\n          : \"Question Text should not be empty or maximum 500 characters\";\r\n        break;\r\n      case \"category\":\r\n        formErrors.category =\r\n          value === \"Top\" || validator.isInt(value) || validator.isMongoId(value)\r\n            ? \"\"\r\n            : \"Category is not valid\";\r\n        break;\r\n      case \"qType\":\r\n        formErrors.qType = validator.isIn(value, [\"matrix\", \"sba\"])\r\n          ? \"\"\r\n          : \"Question Type is not valid\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (/((qStem)|(fbStem))\\d{1,2}/.test(name)) {\r\n      formErrors.stem = validator.isLength(value, {\r\n        max: 200,\r\n      })\r\n        ? \"\"\r\n        : \"qStem or fbStem should not be More than 200\";\r\n    } else if (/(aStem\\d{1,2})|(aStemSba)/.test(name)) {\r\n      formErrors.stem = validator.isLength(value, {\r\n        max: 1,\r\n      })\r\n        ? \"\"\r\n        : \"aStem is invalid\";\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: files ? files[0] : value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { title, qType, qText, formErrors, aStemSba } = this.state;\r\n    const category = this.categoryRef.current.value;\r\n    const rest = { title, category, qType, qText };\r\n    const stem = [];\r\n\r\n    if (qType === \"sba\" && !(aStemSba && this.state[\"qStem\" + aStemSba])) {\r\n      this.setState({\r\n        formErrors: {\r\n          ...formErrors,\r\n          stem: `${aStemSba} no. stem can not be emty`,\r\n        },\r\n      });\r\n    } else {\r\n      this.state.stemAmount.map((v) => {\r\n        if (qType === \"sba\" && this.state[\"qStem\" + v]) {\r\n          stem.push({\r\n            qStem: this.state[\"qStem\" + v],\r\n            aStem: this.state.aStemSba,\r\n            fbStem: this.state[\"fbStem\" + v],\r\n          });\r\n        } else if (this.state[\"qStem\" + v] && this.state[\"aStem\" + v]) {\r\n          stem.push({\r\n            qStem: this.state[\"qStem\" + v],\r\n            aStem: this.state[\"aStem\" + v],\r\n            fbStem: this.state[\"fbStem\" + v],\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const { valid, error } = formValid({ rest, formErrors });\r\n\r\n    if (valid && stem.length !== 0) {     \r\n      this.resetState();\r\n      this.props.onCreateQuestionLoader({ ...rest, stem });\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          \"Please fill form corectly\" +\r\n          (error ? \" __ \" + error.toUpperCase() + \" __\" : \"\"),\r\n        responseClass: \"danger\",\r\n      });\r\n      setTimeout(this.hideResponse, 2000);\r\n    }\r\n  };\r\n\r\n  uploadHandler = (e) => {\r\n    e.preventDefault();\r\n    const { file } = this.state;\r\n    const category = this.categoryRef.current.value;\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"category\", category);\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + \"/questions/files\", data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          uploadedExcelQuestion: response.data,\r\n          response: \"Successfully Updated \",\r\n          responseClass: \"success\",\r\n        });\r\n        setTimeout(this.hideResponse, 2000);\r\n      })\r\n      .catch((error) => {\r\n      \r\n        const errorResponse = errorHandler(error);\r\n        this.setState({\r\n          response: errorResponse,\r\n          responseClass: \"danger\",\r\n        });\r\n        setTimeout(this.hideResponse, 2000);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader();\r\n  }\r\n  render() {\r\n    let stem = {};\r\n    this.state.stemAmount.map((v) => {\r\n      stem = {\r\n        ...stem,\r\n        [\"qStem\" + v]: this.state[\"qStem\" + v],\r\n        [\"aStem\" + v]: this.state[\"aStem\" + v],\r\n        [\"fbStem\" + v]: this.state[\"bStem\" + v],\r\n      };\r\n    });\r\n\r\n    const { title, category, qType, qText, aStemSba } = this.state;\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Question</title>\r\n        </Helmet>\r\n        {this.state.uploadedExcelQuestion && this.state.toastShow && (\r\n          <Toast\r\n            show={this.state.toastShow}\r\n            onClose={() => {\r\n              this.setState({ toastShow: false });\r\n            }}\r\n            className=\"mt-3\"\r\n          >\r\n            <Toast.Header variant=\"success\">\r\n              <strong className=\"m-auto\">\r\n                Questions Uploaded Successfully.\r\n              </strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              <ListGroup>\r\n                {this.state.uploadedExcelQuestion.map((question, index) => (\r\n                  <ListGroup.Item key={index}>\r\n                    {`${index + 1}. ${question.title}`}{\" \"}\r\n                    <Badge variant=\"dark\" className=\"ml-2\">\r\n                      edit\r\n                    </Badge>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Toast.Body>\r\n          </Toast>\r\n        )}\r\n        {this.props.api.result && this.state.toastShow && (\r\n          <Toast\r\n            show={this.state.toastShow}\r\n            onClose={() => {\r\n              this.setState({ toastShow: false });\r\n            }}\r\n            className=\"mt-3\"\r\n          >\r\n            <Toast.Header variant=\"success\">\r\n              <strong className=\"mr-auto\">\r\n                Question Created Successfully.\r\n              </strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Want to Edit the \"\r\n              {this.props.api.result ? this.props.api.result.title : \"\"}\"\r\n              <Button size=\"sm\" variant=\"info\" className=\"mt-2 ml-3\">\r\n                Question\r\n              </Button>\r\n            </Toast.Body>\r\n          </Toast>\r\n        )}\r\n\r\n        {this.state.response && (\r\n          <Alert\r\n            variant={this.state.responseClass}\r\n            className=\"text-center\"\r\n            style={centeredStyle}\r\n          >\r\n            {this.state.response}\r\n          </Alert>\r\n        )}\r\n\r\n        <QuestionForm\r\n          submitHandler={this.submitHandler}\r\n          categories={this.props.category.categories}\r\n          question={{\r\n            title,\r\n            category,\r\n            qType,\r\n            qText,\r\n            stem: { ...stem, aStemSba },\r\n          }}\r\n          handleChange={this.handleChange}\r\n          categoryRef={this.categoryRef}\r\n          formErrors={this.state.formErrors}\r\n        />\r\n\r\n        {/* Upload start here */}\r\n\r\n        <QuestionUploadForm\r\n          categories={this.props.category.categories}\r\n          formErrors={this.state.formErrors}\r\n          submitHandler={this.uploadHandler}\r\n          handleChange={this.handleChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onCreateQuestionLoader: (data) => dispatch(createQuestionLoader(data)),\r\n    onUploadQuestionLoader: (data) => dispatch(uploadQuestionLoader(data)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    category: state.category,\r\n    api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\r\n","import moment from \"moment\";\r\nimport React, { Component } from 'react';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { examRankByIdLoader } from '../../store/exams';\r\n\r\nclass Rank extends Component {\r\n    componentDidMount(){\r\n        this.props.onExamRankByLoader(this.props.match.params.id)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <h3 className=\"text-center\">Rank</h3>\r\n                {this.props.exam && <ListGroup horizontal={\"lg\"}>\r\n                    <ListGroup.Item>Exam: {this.props.exam.title}</ListGroup.Item>\r\n                    <ListGroup.Item>Total Mark: {this.props.exam.singleQuestionMark * this.props.exam.questions.length}</ListGroup.Item>\r\n                    <ListGroup.Item>Total Questions : {this.props.exam.questions.length}</ListGroup.Item>\r\n                    <ListGroup.Item>Penalty Mark: {this.props.exam.penaltyMark}</ListGroup.Item>\r\n                    <ListGroup.Item>Time Limit: {this.props.exam.timeLimit} Mins</ListGroup.Item>\r\n                    <ListGroup.Item>Started From: {moment(this.props.exam.createdAt).calendar()}</ListGroup.Item>\r\n                </ListGroup>}\r\n                <Table striped bordered hover responsive=\"md\" className=\"mt-3\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Score</th>\r\n                        <th>Attempts</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        this.props.rank && this.props.rank.map((rank,ind)=><tr className={this.props.userId===rank.user.id ? \"bg-success text-light \" : \"\"}>\r\n                            <td>{ind+1}</td>\r\n                            <td>{rank.user.name}</td>\r\n                            <td>{rank.exam.length> 0 ? rank.exam[0].score : \"Exam Not Yet Tried\"}</td>\r\n                            <td>{rank.exam.length> 0 ? rank.exam[0].attempts : \"Exam Not Yet Tried\"}</td>\r\n                        </tr>)   \r\n                        }\r\n                    </tbody>\r\n            </Table>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onExamRankByLoader: (id) => dispatch(examRankByIdLoader(id)),\r\n    };\r\n  };\r\n  \r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      rank: state.exams.rank,\r\n      exam: state.exams.exam,\r\n      userId: state.auth.userId\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Rank);\r\n\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\n\r\nexport default function Gist({ width = \"250px\", value, title, bgColor }) {\r\n  // eslint-disable-next-line no-console\r\n  return (\r\n    <div style={{ width: width }} className=\"mr-2 mb-1\">\r\n      <p\r\n        className={bgColor + \" text-center text-light mb-1 p-3\"}\r\n        style={{ fontSize: \"1.5rem\" }}\r\n      >\r\n        {value}\r\n      </p>\r\n      <p\r\n        className={bgColor + \" bg-warning text-center text-light p-1\"}\r\n        style={{ fontSize: \"1rem\" }}\r\n      >\r\n        {title}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n    FaCheckCircle,\r\n    FaMinusCircle,\r\n    FaRegCheckCircle,\r\n    FaRegTimesCircle\r\n} from \"react-icons/fa\";\r\n\r\nconst answerStatus = {\r\n  True: 1,\r\n  False: 0,\r\n  NotAnswered: -1,\r\n};\r\n\r\nconst QTypeNumber = {\r\n  SingleBestAnswer: \"sba\",\r\n  Matrix: \"matrix\",\r\n};\r\n\r\nexport default function stem({ index, qType, answer, qStem, aStem }) {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap\">\r\n      {qType === QTypeNumber.Matrix && (\r\n        <>\r\n          <div className=\"mr-2\">\r\n            {answer === answerStatus.True && (\r\n              <FaRegCheckCircle style={{ color: \"#3c763d\" }} size=\"1.4rem\" />\r\n            )}\r\n            {answer === answerStatus.False && (\r\n              <FaRegTimesCircle style={{ color: \"#a94442\" }} size=\"1.4rem\" />\r\n            )}\r\n            {answer === answerStatus.NotAnswered && (\r\n              <FaMinusCircle style={{ color: \"#777\" }} size=\"1.4rem\" />\r\n            )}\r\n          </div>\r\n          <div className=\"mr-2\">{qStem}</div>\r\n          <div>\r\n            <Form.Check\r\n              inline\r\n              disabled\r\n              label=\"true\"\r\n              type=\"radio\"\r\n              checked={\r\n                answer === answerStatus.True ? aStem === \"1\" : aStem !== \"1\"\r\n              }\r\n            />\r\n            <Form.Check\r\n              inline\r\n              disabled\r\n              label=\"False\"\r\n              type=\"radio\"\r\n              checked={\r\n                answer === answerStatus.True ? aStem === \"0\" : aStem !== \"0\"\r\n              }\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {qType === QTypeNumber.SingleBestAnswer && (\r\n        <>\r\n          <div className=\"mr-2\">\r\n            {index + 1 === answer[0] && (\r\n              <FaRegCheckCircle style={{ color: \"#3c763d\" }} size=\"1.4rem\" />\r\n            )}\r\n            {index + 1 === answer[0] && answer[0] === answer[1] && (\r\n              <FaCheckCircle\r\n                className=\"ml-1\"\r\n                style={{ color: \"#3c763d\" }}\r\n                size=\"1.4rem\"\r\n              />\r\n            )}\r\n\r\n            {index + 1 === answer[1] && answer[0] !== answer[1] && (\r\n              <FaRegTimesCircle style={{ color: \"#a94442\" }} size=\"1.4rem\" />\r\n            )}\r\n          </div>\r\n          <div className=\"\">{qStem}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { Alert, Card, Image, ListGroup } from \"react-bootstrap\";\r\nimport { FaMinusCircle } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport SubNavBar from \"../../components/navbar/subNavBar\";\r\nimport Gist from \"../../components/result/gist\";\r\nimport QuestionResultStem from \"../../components/result/stem\";\r\n\r\nconst QType = {\r\n  SingleBestAnswer: \"sba\",\r\n  Matrix: \"matrix\",\r\n};\r\n\r\nclass Result extends Component {\r\n  render() {\r\n    const {\r\n      examResult,\r\n      totalMark,\r\n      totalScore,\r\n      totalPenaltyMark,\r\n      totalScorePercentage,\r\n      // eslint-disable-next-line no-unused-vars\r\n      timeTakenToComplete,\r\n      error,\r\n    } = this.props.exams;\r\n    return (\r\n      <div>\r\n        {error && (\r\n          <>\r\n            <Alert variant={\"danger\"} className=\"m-5 text-center\">\r\n              {error}\r\n            </Alert>\r\n            <SubNavBar />\r\n          </>\r\n        )}\r\n        {examResult && (\r\n          <div>\r\n            <Card className=\"mt-3\">\r\n              <Card.Header as=\"h5\" className=\"text-center\">\r\n                Result\r\n              </Card.Header>\r\n              <Card.Body className=\"d-flex justify-content-center\">\r\n                <Gist\r\n                  title=\"Score\"\r\n                  bgColor=\"bg-warning\"\r\n                  value={\r\n                    totalScore.toFixed(2) + \" Out of \" + totalMark.toFixed(2)\r\n                  }\r\n                />\r\n                <Gist\r\n                  title=\"Time\"\r\n                  bgColor=\"bg-info\"\r\n                  value={moment\r\n                    .duration(timeTakenToComplete, \"minute\")\r\n                    .humanize()}\r\n                />\r\n                <Gist\r\n                  title=\"Percentage\"\r\n                  bgColor=\"bg-primary\"\r\n                  value={totalScorePercentage.toFixed(2) + \" %\"}\r\n                />\r\n                <Gist\r\n                  title=\"Penalty Mark\"\r\n                  bgColor=\"bg-secondary\"\r\n                  value={totalPenaltyMark.toFixed(2)}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <Card className=\"mt-3\">\r\n              <Card.Header as=\"h5\" className=\"text-center\">\r\n                Detail\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {examResult.map((item, index) => (\r\n                  <ListGroup key={index} variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      {item.result.stemResult[0] === QType.Matrix &&\r\n                        item.result.stemResult.length === 1 && (\r\n                          <FaMinusCircle\r\n                            className=\"mr-2\"\r\n                            style={{ color: \"#777\" }}\r\n                            size=\"1.4rem\"\r\n                          />\r\n                        )}\r\n                      {item.result.stemResult[0] === QType.SingleBestAnswer &&\r\n                        item.result.stemResult.length === 2 && (\r\n                          <FaMinusCircle\r\n                            lassName=\"mr-2\"\r\n                            style={{ color: \"#777\" }}\r\n                            size=\"1.4rem\"\r\n                          />\r\n                        )}\r\n                      {index + 1 + \". \" + item.qText}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <ListGroup variant=\"flush\" className=\"pl-3\">\r\n                        {item.stems.map((stem, ind) => {\r\n                          if (\r\n                            item.result.stemResult[0] === QType.SingleBestAnswer\r\n                          )\r\n                            return (\r\n                              <>\r\n                                <ListGroup.Item>\r\n                                  <QuestionResultStem\r\n                                    index={ind}\r\n                                    qType={item.result.stemResult[0]}\r\n                                    answer={[\r\n                                      item.result.stemResult[1],\r\n                                      item.result.stemResult[2],\r\n                                    ]}\r\n                                    qStem={`${ind + 1}. ${stem.qStem}`}\r\n                                  />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"ml-3\">\r\n                                  {stem.fbStem &&\r\n                                    \"Explanation is : \" + stem.fbStem}\r\n                                </ListGroup.Item>\r\n                              </>\r\n                            );\r\n                          else\r\n                            return (\r\n                              <>\r\n                                <ListGroup.Item>\r\n                                  <QuestionResultStem\r\n                                    index={ind}\r\n                                    qType={item.result.stemResult[0]}\r\n                                    answer={item.result.stemResult[ind + 1]}\r\n                                    qStem={`${ind + 1}. ${stem.qStem}`}\r\n                                    aStem={stem.aStem}\r\n                                  />\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item\r\n                                // className={\r\n                                //   (item.result.stemResult[ind] === true\r\n                                //     ? \"bg-success\"\r\n                                //     : \"bg-danger\") + \" text-light ml-3\"\r\n                                // }\r\n                                >\r\n                                  This Statement is:{\" \"}\r\n                                  {stem.aStem === \"1\" ? \"True\" : \"False\"}\r\n                                  <br />\r\n                                  {stem.fbStem &&\r\n                                    \"Explanation is : \" + stem.fbStem}\r\n                                </ListGroup.Item>\r\n                              </>\r\n                            );\r\n                        })}\r\n                      </ListGroup>\r\n                    </ListGroup.Item>\r\n                    {item.generalFeedback && <ListGroup.Item className=\"ml-3 text-white bg-secondary\">\r\n                      <p>{\"General Explanation is : \" + item.generalFeedback.replace(/#L(.+)L#/,'')}</p>\r\n                      <Image src={item.generalFeedback.split(/#L(.+)L#/)[1]} width=\"350\" height=\"300\"  />\r\n                    </ListGroup.Item>}\r\n                  </ListGroup>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams,\r\n    //   auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Result);\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../assets/scss/section/dashboard.scss\";\r\nimport Sidebar from \"../components/sidebar/sidebar\";\r\nimport SidebarMini from \"../components/sidebar/sidebarMini\";\r\nimport Topbar from \"../components/topbar/topbar\";\r\nimport Category from \"./category/category\";\r\n//importing routing parts\r\nimport Dashboard from \"./dashboard/dashboard\";\r\nimport ExamBuilder from \"./examBuilder/examBuilder\";\r\nimport ExamLists from \"./exams/examLists\";\r\nimport ExamTaker from \"./exams/examTaker\";\r\nimport Question from \"./question/question\";\r\nimport Rank from \"./result/rank\";\r\nimport Result from \"./result/result\";\r\n\r\n\r\n\r\n\r\n\r\nconst InnerContent = (props) => {\r\n  const pageName = props.match.url.split(\"/\", 2)[1];\r\n  return (\r\n    <>\r\n      <Menu styles={styles}>\r\n        <SidebarMini />\r\n      </Menu>\r\n      <Container fluid=\"true\">\r\n        <Row className=\"no-gutters\">\r\n          <Col xl={2} lg={3} md={4} className=\"sidebar\">\r\n            <Sidebar />\r\n          </Col>\r\n\r\n          <Col xl={10} lg={9} md={8} sm={12} >\r\n            <div>\r\n              <Topbar pageName={pageName} />\r\n              <div className=\"px-1 ml-md-4\" style={{marginTop: '70px'}}>\r\n                  {\r\n                    <>\r\n                      <Route path=\"/dashboard\" exact component={Dashboard} />\r\n                      <Route path=\"/category\" exact component={Category} />\r\n                      <Route path=\"/question\" exact component={Question} />\r\n                      <Route path=\"/exambuilder\" exact component={ExamBuilder} />\r\n                      {/* <Route path=\"/exams/:id\" exact component={ExamTaker} /> */}\r\n                      <Route path=\"/exams/:id\" exact render={(props)=><ExamTaker free={false} {...props}/>} />\r\n                      <Route path=\"/exams\" exact component={ExamLists} />\r\n                      <Route path=\"/exams/free/:id\" exact render={(props)=><ExamTaker free={true} {...props}/>} />\r\n                      <Route path=\"/result\" exact component={Result} />\r\n                      <Route path=\"/result/rank/:id\" exact component={Rank} />\r\n                    </>\r\n                  }\r\n                \r\n              </div>  \r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InnerContent;\r\n\r\nvar styles = {\r\n  bmBurgerButton: {\r\n    position: \"fixed\",\r\n    width: \"30px\",\r\n    height: \"25px\",\r\n    right: \"28px\",\r\n    top: \"10px\",\r\n    // @media (min-width: 767.98px) {\r\n    //   display: none;\r\n    // }\r\n  },\r\n  bmBurgerBars: {\r\n    background: \"#67aaaa\",\r\n  },\r\n  bmBurgerBarsHover: {\r\n    background: \"#a90000\",\r\n  },\r\n  bmCrossButton: {\r\n    height: \"24px\",\r\n    width: \"24px\",\r\n  },\r\n  bmCross: {\r\n    background: \"#bdc3c7\",\r\n  },\r\n  bmMenuWrap: {\r\n    position: \"fixed\",\r\n    height: \"100%\",\r\n  },\r\n  bmMenu: {\r\n    background: \"#373a47\",\r\n    padding: \"2.5em 1.5em 0\",\r\n    fontSize: \"1.15em\",\r\n  },\r\n  bmMorphShape: {\r\n    fill: \"#373a47\",\r\n  },\r\n  bmItemList: {\r\n    color: \"#b8b7ad\",\r\n    padding: \"0.8em\",\r\n  },\r\n  bmItem: {\r\n    display: \"inline-block\",\r\n  },\r\n  bmOverlay: {\r\n    background: \"rgba(0, 0, 0, 0.3)\",\r\n  },\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    loading: false,\r\n    token: null,\r\n    userId: null,\r\n    role: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    authStart: (auth) => {\r\n      auth.loading = true;\r\n    },\r\n    authSuccess: (auth, action) => {\r\n      auth.loading = false;\r\n      auth.token = action.payload.accessToken;\r\n      auth.userId = action.payload.id;\r\n      auth.role = action.payload.role;\r\n      auth.expireIn = action.payload.expireIn;\r\n      auth.error = null;\r\n    },\r\n    authFail: (auth, action) => {\r\n      auth.loading = false;\r\n      auth.error = action.payload;\r\n    },\r\n    logout: (auth) => {\r\n      auth.token = null;\r\n      auth.userId = null;\r\n      auth.expireIn = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { authStart, authSuccess, authFail, logout } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\n//declaring some variable\r\n\r\nconst url = \"/auth/login\";\r\nconst method = \"post\";\r\n\r\nexport const auth = (username, password) => (dispatch) => {\r\n  const authData = {\r\n    username,\r\n    password,\r\n  };\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      data: authData,\r\n      onStart: authStart.type,\r\n      onSuccess: authSuccess.type,\r\n      onError: authFail.type,\r\n    })\r\n  );\r\n};\r\nexport const autoAuth = () => (dispatch) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  if (token) {\r\n    dispatch(\r\n      authSuccess({\r\n        token,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(logout());\r\n  }, expirationTime * 1000);\r\n};\r\n\r\nexport const checkAuthState = () => (dispatch) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  if (!token) {\r\n    dispatch(logout);\r\n  } else {\r\n    const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n    if (expirationDate > new Date()) {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      dispatch(authSuccess({ accessToken: token, id: userId }));\r\n      dispatch(\r\n        checkAuthTimeOut(\r\n          (expirationDate.getTime() - new Date().getTime()) / 1000\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(logout());\r\n    }\r\n  }\r\n};\r\n\r\nexport const logoutLoader = () => (dispatch) => {\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"jwtToken\");\r\n  dispatch(logout());\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validator from \"validator\";\r\nimport \"../../assets/scss/section/registration.scss\";\r\nimport NavbarHome from \"../../components/navbar/navbarHome\";\r\nimport { auth, autoAuth } from \"../../store/auth\";\r\n\r\n\r\n\r\nconst isValid = (formErrors) => {\r\n  let valid = true;\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false);\r\n  });\r\n  return valid;\r\n};\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    username: null,\r\n    password: null,\r\n    formErrors: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errorMessage: null,\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, formErrors } = this.state;\r\n\r\n    this.setState({ errorMessage: null });\r\n\r\n    if (isValid(formErrors)) {\r\n      this.props.onAuth(username, password);\r\n    } else {\r\n      this.setState({\r\n        errorMessage:\r\n          \"Login Failed. Server may be down. please try sometime later\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    this.setState({ errorMessage: null });\r\n\r\n    switch (name) {\r\n      case \"username\":\r\n        formErrors.username =\r\n          !validator.isEmpty(value) && validator.isEmail(value)\r\n            ? \"\"\r\n            : \"Email should not be empty && must be valid\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = !validator.isEmpty(value)\r\n          ? \"\"\r\n          : \"Password should not be empty\";\r\n        break;\r\n    }\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    //this.props.onAutoAuth();\r\n  }\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    // let authRedirect;\r\n    // if (this.props.isAuthenticated) {\r\n    //   console.log(this.props.isAuthenticated);\r\n    //   authRedirect = <Redirect to=\"/dashboard\" />;\r\n    // }\r\n    return (\r\n      <div className=\"registration\">\r\n        {/* {authRedirect} */}\r\n        <NavbarHome isLanding={false} />\r\n        {/* Landing */}\r\n        <div className=\"landing\">\r\n          {/* <div className=\"home-wrap\"> */}\r\n            <div className=\"home-inner\"></div>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className=\"caption text-center\" style={{ top: \"15%\" }}>\r\n          {/* <Spinner animation=\"border\" role=\"status\"></Spinner> */}\r\n          <h1>Login Form</h1>\r\n          {this.props.auth.loading && (\r\n            <Spinner\r\n              animation=\"border\"\r\n              role=\"status\"\r\n              variant=\"light\"\r\n              className=\"mr-2\"\r\n            ></Spinner>\r\n          )}\r\n          <div className=\"heading-underline\"></div>\r\n          <Form className=\"mb-4\" onSubmit={this.submitHandler} noValidate>\r\n            <div className=\"text-white mb-2 bg-danger\">\r\n              {this.props.auth.error &&\r\n                this.props.auth.error}\r\n            </div>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"username\" // do not be confused; due to passportjs use only \"username\" for password verification though it is actually the user email\r\n                onChange={this.handleChange}\r\n                className={formErrors.username.length > 0 && \"is-invalid\"}\r\n              />\r\n              {formErrors.username.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.username}</span>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={this.handleChange}\r\n                className={formErrors.password.length > 0 && \"is-invalid\"}\r\n              />\r\n              {formErrors.password.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.password}</span>\r\n              )}\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"btn-submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <Row></Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <p className=\"lead\">Forget Your Password</p>\r\n              {/* <Button variant=\"danger\">\r\n                Reset Your Password\r\n              </Button> */}\r\n              <p className=\"bg-danger p-1\">Please Email to {process.env.REACT_APP_HELP_EMAIL}</p>\r\n            </Col>\r\n            <Col md={6}>\r\n              <p className=\"lead\">I am not a member yet!</p>\r\n              <Link to=\"/signup\" className=\"btn btn-secondary\">\r\n                Sign up\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {/* End of Landing */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (username, password) => dispatch(auth(username, password)),\r\n    onAutoAuth: () => {\r\n      dispatch(autoAuth());\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    api: state.api,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logoutLoader } from \"../../store/auth\";\r\n\r\nclass Logout extends React.Component {\r\n  componentDidMount() {\r\n    this.props.onLogoutLoader();\r\n  }\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogoutLoader: () => {\r\n      dispatch(logoutLoader());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","//import React from \"react\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport validator from \"validator\";\r\nimport \"../../assets/scss/section/registration.scss\";\r\nimport NavbarHome from \"../../components/navbar/navbarHome\";\r\n\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false);\r\n  });\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === null && (valid = false);\r\n  });\r\n  return valid;\r\n};\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.passwordRef = React.createRef();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      firstName: null,\r\n      lastName: null,\r\n      userName: null,\r\n      password: null,\r\n      repeatPassword: null,\r\n      gender: \"male\",\r\n      errorMessage: null,\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        repeatPassword: \"\",\r\n        checked: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    this.setState({ errorMessage: null });\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName = validator.isLength(value, { min: 3, max: 15 })\r\n          ? \"\"\r\n          : \"First Name should be minimum 3 or maximum 20 characters\";\r\n        break;\r\n      case \"lastName\":\r\n        formErrors.lastName = validator.isLength(value, { min: 3, max: 15 })\r\n          ? \"\"\r\n          : \"Last Name should be minimum 3 or maximum 20 characters\";\r\n        break;\r\n      case \"userName\":\r\n        formErrors.userName =\r\n          validator.isLength(value, { min: 3, max: 15 }) &&\r\n          validator.isAlphanumeric(value)\r\n            ? \"\"\r\n            : \"Username should be alpha neumaric with minimum 3 or maximum 20 characters\";\r\n        break;\r\n      case \"email\":\r\n        formErrors.email = validator.isEmail(value)\r\n          ? \"\"\r\n          : \"Email address is not valid\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = validator.matches(\r\n          value,\r\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n        )\r\n          ? \"\"\r\n          : \"Password should be minimum 8 characters and contain atleast one capital and lowercase alpha, neumeric and special value\";\r\n        break;\r\n      case \"repeatPassword\":\r\n        formErrors.repeatPassword = validator.equals(\r\n          value,\r\n          this.passwordRef.current.value\r\n        )\r\n          ? \"\"\r\n          : \"Password and RepeatPassword should be same\";\r\n        break;\r\n      //case \"gender\":\r\n      // formErrors.password = validator.isIn(value,[\"male\",\"female\"])\r\n      //   ? \"\"\r\n      //   : \"Password should be minimum 8 characters and contain one alpha,neumeric and special value\";\r\n      // break;\r\n      case \"checked\":\r\n        formErrors.checked = e.target.checked ? \"\" : \"Check Me is not selected\";\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ errorMessage: null });\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      userName,\r\n      email,\r\n      password,\r\n      repeatPassword,\r\n      gender,\r\n      formErrors,\r\n    } = this.state;\r\n    this.setState({ loading: true });\r\n\r\n    if (\r\n      formValid({\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        email,\r\n        password,\r\n        repeatPassword,\r\n        gender,\r\n        formErrors,\r\n      })\r\n    ) {\r\n      axios\r\n        .post(process.env.REACT_APP_SITE_URL + \"/auth/registration\", {\r\n          firstName,\r\n          lastName,\r\n          userName,\r\n          email,\r\n          password,\r\n          repeatPassword,\r\n          gender,\r\n        })\r\n        .then((res) => {\r\n          this.setState({ loading: false });\r\n          if (res.status === 201) {\r\n            // <Route exact path=\"/\">\r\n            this.props.history.push({ pathname: \"/login\" });\r\n            // </Route>;\r\n          }\r\n        })\r\n\r\n        .catch((e) => {\r\n          this.setState({ loading: false });\r\n          //  console.log(\"/b/b onError:  \", e.response);\r\n          if (e.response) {\r\n            // if server has response\r\n            e = e.response;\r\n            if (e.data.statusCode === 409) {\r\n              // user duplication error, so redirecting to login page\r\n              this.setState({\r\n                errorMessage: e.data.message + \" Redirecting .....\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push({ pathname: \"/login\" });\r\n              }, 3000);\r\n            } else if (e.data.statusCode === 400) {\r\n              // specific server validation error\r\n              let message = \"\";\r\n              e.data.message.forEach((v) => {\r\n                message += `${v.value} is not valid in [ ${\r\n                  v.property\r\n                } ] field due to \" ${Object.values(\r\n                  v.constraints\r\n                ).toString()} \"`;\r\n              });\r\n              //  console.log(message);\r\n              this.setState({\r\n                errorMessage: message,\r\n              });\r\n            } else {\r\n              // for any other server error response\r\n              this.props.history.push({ pathname: \"/\" });\r\n            }\r\n          } else {\r\n            // if server has no any response\r\n            this.setState({\r\n              errorMessage: \"Server may be down. Please try sometime later\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n        errorMessage: \"Please fill form correctly.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n    return (\r\n      <div className=\"registration\">\r\n        <NavbarHome isLanding={false} />\r\n        {/* Landing */}\r\n        <div className=\"landing\">\r\n          {/* <div className=\"home-wrap\"> */}\r\n            <div className=\"home-inner\"></div>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className=\"caption text-center\">\r\n          <h1>Registration Form</h1>\r\n          {this.state.loading && (\r\n            <Spinner\r\n              animation=\"border\"\r\n              role=\"status\"\r\n              variant=\"light\"\r\n              className=\"mb-2\"\r\n            ></Spinner>\r\n          )}\r\n          <div className=\"heading-underline\"></div>\r\n\r\n          <Form onSubmit={this.submitHandler} novalidate>\r\n            <div className=\"text-white mb-2 bg-danger\">\r\n              {this.state.errorMessage}\r\n            </div>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                <Form.Label>First Name: </Form.Label>\r\n                <Form.Control\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Eaqub\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.firstName.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.firstName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Sarder\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.lastName.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.lastName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridUserName\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.userName.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.userName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.userName}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.email.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.email.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.email}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  ref={this.passwordRef}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.password.length > 0 && \"is-invalid\"}\r\n                />\r\n                <Form.Text className=\"text-warning\">\r\n                  e.g. 123abcDEF!$%\r\n                </Form.Text>\r\n                {formErrors.password.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.password}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridRepeatPassword\">\r\n                <Form.Label>Repeat Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"repeatPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter again Password\"\r\n                  onChange={this.handleChange}\r\n                  className={\r\n                    formErrors.repeatPassword.length > 0 && \"is-invalid\"\r\n                  }\r\n                />\r\n                {formErrors.repeatPassword.length > 0 && (\r\n                  <span className=\"errorMessage\">\r\n                    {formErrors.repeatPassword}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control\r\n                  name=\"gender\"\r\n                  as=\"select\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check\r\n                name=\"checked\"\r\n                type=\"checkbox\"\r\n                label=\"By checking the box, You will agree our terms and conditions.\"\r\n                //checked={true}\r\n                onChange={this.handleChange}\r\n                className={formErrors.checked.length > 0 && \"is-invalid\"}\r\n              />\r\n              {formErrors.checked.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.checked}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" className=\"btn-submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        {/* End of Landing */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { canActivate, rolePermitted } from \"../utils/canActivate\";\r\nimport NotFoundPage from \"./404\";\r\nimport Landing from \"./landing/landing\";\r\nimport InnerContent from \"./layout\";\r\nimport Login from \"./registration/login\";\r\nimport LogoutPage from \"./registration/logout\";\r\nimport Signup from \"./registration/signup\";\r\n\r\n\r\n\r\nconst RoutePages = (props) => {\r\n  // const tokenRole = props.token ? jwtDecode(props.token).role : -1;\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/signup\" component={Signup} />\r\n      <Route path=\"/exams\" exact component={InnerContent} />\r\n      <Route path=\"/exams/:id\" exact component={InnerContent} />\r\n      <Route path=\"/exams/free/:id\" component={InnerContent} />\r\n      <Route path=\"/result\" component={InnerContent} />\r\n      <Route path=\"/result/rank/:id\" component={InnerContent} />\r\n      <Route path=\"/error\" render={(props)=><NotFoundPage {...props}/>} />\r\n      <Route path=\"/\" exact component={Landing} />\r\n      <Route render={(props)=><NotFoundPage {...props}/>} />\r\n    </Switch>\r\n  );\r\n  if (\r\n    props.isAuthenticated &&\r\n    canActivate(rolePermitted.student, props.token)\r\n  ) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/dashboard\" component={InnerContent} />\r\n        <Route path=\"/exams\" component={InnerContent} />\r\n        <Route path=\"/exams/:id\" component={InnerContent} />\r\n        <Route path=\"/result\" component={InnerContent} />\r\n        <Route path=\"/rank\" component={InnerContent} />\r\n        <Route path=\"/logout\" component={LogoutPage} />\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Redirect to=\"/dashboard\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  if (canActivate(rolePermitted.mentor, props.token)) {\r\n    \r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/dashboard\" component={InnerContent} />\r\n        <Route path=\"/question\" component={InnerContent} />\r\n        <Route path=\"/exambuilder\" component={InnerContent} />\r\n        <Route path=\"/logout\" component={LogoutPage} />\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Redirect to=\"/dashboard\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  if (canActivate(rolePermitted.admin, props.token)) {\r\n  \r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/dashboard\" component={InnerContent} />\r\n        <Route path=\"/category\" component={InnerContent} />\r\n        <Route path=\"/question\" component={InnerContent} />\r\n        <Route path=\"/exambuilder\" component={InnerContent} />\r\n        <Route path=\"/logout\" component={LogoutPage} />\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Redirect to=\"/dashboard\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return routes;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RoutePages);\r\n//export default RoutePages;\r\n","/* eslint-disable no-undef */\n/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport RoutePages from \"./container/routePages\";\nimport { checkAuthState } from \"./store/auth\";\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutologin();\n  }\n  render() {\n    return (\n      <>\n        <Helmet\n          titleTemplate=\"Prostuti - %s\"\n          defaultTitle=\"Prostuti- The Suffix of Staying Ahead\"\n        >\n          <html lang=\"en bn\" amp />\n          <link rel=\"canonical\" href={process.env.REACT_APP_SITE_URL} />\n          <meta\n            name=\"description\"\n            content=\"Online exam platform to make the knowledge more sharp. Here you can exam mutiple choice or true-false with many more types questions. \"\n          />\n          <meta property=\"og:type\" content=\"website\" />\n        </Helmet>\n        <BrowserRouter>\n          <RoutePages />\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutologin: () => {\n      dispatch(checkAuthState());\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport apiReducer from \"./api\";\r\nimport authReducer from \"./auth\";\r\nimport categoryReducer from \"./category\";\r\nimport dashboardReducer from \"./dashboard\";\r\nimport examPaperReducer from \"./examPaper\";\r\nimport examsReducer from \"./exams\";\r\nimport questionReducer from \"./question\";\r\nimport userReducer from \"./user\";\r\n\r\nexport default combineReducers({\r\n  api: apiReducer,\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  category: categoryReducer,\r\n  question: questionReducer,\r\n  examPaper: examPaperReducer,\r\n  exams: examsReducer,\r\n  dashboard: dashboardReducer,\r\n});\r\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-undef */\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faArrowUp,\n  faBalanceScale,\n  faBars,\n  faBell,\n  faCalendarAlt,\n  faChartBar,\n  faChartLine,\n  faClock,\n  faCloud,\n  faComments,\n  faEnvelope,\n  faFile,\n  faFileAlt,\n  faFileImport,\n  faHome,\n  faHourglass,\n  faMedal,\n  faPoll,\n  faQuoteLeft,\n  faSearch,\n  faShoppingCart,\n  faSignOutAlt,\n  faStar,\n  faSync,\n  faTable,\n  faThumbsUp,\n  faUser,\n  faUsers,\n  faWrench\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { IntlProvider } from \"react-intl\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport Bangla from \"./lang/bn.json\";\nimport rootReducers from \"./store\";\nimport { api } from \"./store/middleware/index\";\n\nlibrary.add(\n  fab,\n  faHome,\n  faUser,\n  faEnvelope,\n  faShoppingCart,\n  faChartLine,\n  faChartBar,\n  faTable,\n  faWrench,\n  faFileAlt,\n  faSearch,\n  faComments,\n  faBell,\n  faSignOutAlt,\n  faSync,\n  faFileImport,\n  faMedal,\n  faClock,\n  faPoll,\n  faBalanceScale,\n  faUsers,\n  faFile,\n  faCalendarAlt,\n  faStar,\n  faBars,\n  faCloud,\n  faHourglass,\n  faThumbsUp,\n  faQuoteLeft,\n  faArrowUp\n);\n\nconst store = configureStore({\n  reducer: rootReducers,\n  middleware: [...getDefaultMiddleware(), api],\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <IntlProvider locale={Bangla} messages={Bangla}>\n      <App />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","/*\r\n\r\nit is an simple api middleware to generalize get and send data to server\r\n\r\n\r\n\r\n*/\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { apiCallBegun, apiCallSuccess, apiCallFail } from \"../api\";\r\n\r\nimport { authSuccess, checkAuthTimeOut } from \"../auth\";\r\n\r\nimport setAuthorizationToken from \"../../utils/setAuthorizationToken\";\r\nimport errorHandler from \"../../utils/errorHandler\";\r\n\r\n//api middleware function\r\n\r\nexport const api = ({ getState, dispatch }) => (next) => async (action) => {\r\n  if (action.type !== apiCallBegun.type) return next(action);\r\n\r\n  const {\r\n    url,\r\n    method,\r\n    data,\r\n    config,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    sendToken,\r\n  } = action.payload;\r\n\r\n  if (onStart) dispatch({ type: onStart });\r\n  next(action);\r\n\r\n  try {\r\n    if (sendToken) {\r\n      setAuthorizationToken(getState().auth.token);\r\n    }\r\n    // let imageData;\r\n    // if (data && data.image) {\r\n    //   imageData = new FormData();\r\n    //   Object.keys().forEach((e) => {\r\n    //     imageData.append(e, data[e]);\r\n    //   });\r\n    //   console.log(imageData);\r\n    //   data = imageData;\r\n    // }\r\n\r\n    const response = await axios.request({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url,\r\n      method,\r\n      data: data,\r\n      config,\r\n    });\r\n\r\n    dispatch(apiCallSuccess(response.data));\r\n\r\n    if (onSuccess) {\r\n      if (onSuccess === authSuccess.type) {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expireIn * 1000\r\n        );\r\n        localStorage.setItem(\"jwtToken\", response.data.accessToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.id);\r\n        dispatch(checkAuthTimeOut(response.data.expireIn));\r\n        dispatch({ type: authSuccess.type, payload: response.data });\r\n      } else dispatch({ type: onSuccess, payload: response.data });\r\n    }\r\n  } catch (error) {\r\n    const response = errorHandler(error);\r\n    dispatch(apiCallFail(response));\r\n    if (onError) dispatch({ type: onError, payload: response });\r\n  }\r\n};\r\n"],"sourceRoot":""}