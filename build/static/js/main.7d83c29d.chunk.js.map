{"version":3,"sources":["container/routePages.jsx","App.jsx","store/index.js","index.js","store/middleware/index.js","store/auth.js","utils/canActivate.js","store/api.js","store/exams.js","store/question.js","store/category.js","store/user.js","store/dashboard.js","utils/errorHandler.js","store/examPaper.js","utils/setAuthorizationToken.js"],"names":["NotFoundPage","lazy","pMinDelay","Landing","InnerContent","Login","LogoutPage","Signup","override","css","connect","state","token","auth","isAuthenticated","props","routes","fallback","path","component","exact","render","canActivate","rolePermitted","student","to","mentor","admin","App","this","onTryAutologin","Component","dispatch","checkAuthState","appReducer","combineReducers","api","apiReducer","authReducer","user","userReducer","category","categoryReducer","question","questionReducer","examPaper","examPaperReducer","exams","examsReducer","dashboard","dashboardReducer","rootReducer","action","type","undefined","library","add","fab","faHome","faUser","faEnvelope","faShoppingCart","faChartLine","faChartBar","faTable","faWrench","faFileAlt","faSearch","faComments","faBell","faSignOutAlt","faSync","faFileImport","faMedal","faClock","faPoll","faBalanceScale","faUsers","faFile","faCalendarAlt","faStar","faBars","faCloud","faHourglass","faThumbsUp","faQuoteLeft","faArrowUp","store","configureStore","reducer","rootReducers","middleware","getDefaultMiddleware","getState","next","a","async","apiCallBegun","payload","url","method","data","config","onStart","onSuccess","onError","sendToken","setAuthorizationToken","axios","request","baseURL","process","response","apiCallSuccess","authSuccess","expirationDate","Date","getTime","expireIn","localStorage","setItem","accessToken","id","checkAuthTimeOut","errorHandler","apiCallFail","ReactDOM","locale","defaultLocale","messages","document","getElementById","slice","createSlice","name","initialState","loading","userId","role","error","reducers","authStart","authFail","logout","actions","username","password","authData","expirationTime","setTimeout","getItem","logoutLoader","removeItem","guest","moderator","coordinator","roleToString","num","jwtDecode","result","apiCallReset","questions","questionIdsByOrder","singleQuestionMark","singleStemMark","penaltyMark","timeLimit","examResult","totalMark","totalScore","totalPenaltyMark","totalScorePercentage","timeTakenToComplete","rank","exam","examError","disableQuestions","resetExamResult","getAllExams","getExamById","forEach","e","push","getFreeExamById","getExamError","resetExamError","postExamById","resultArray","examRankById","postExamError","disableQuestionsAdd","resetDisableQuestions","getAllExamsLoader","getExamByIdLoader","getFreeExamByIdLoader","postExamByIdLoader","postFreeExamByIdLoader","examRankByIdLoader","resetExamResultLoader","getQuestions","loadingStart","getResponse","resetResponse","resetResponseLoader","getQuestionLoader","getQuestionByCategoryLoader","createQuestionLoader","questionData","FormData","Object","keys","key","append","headers","editQuestionLoader","deleteQuestionLoader","categories","catHierarchy","getCategory","fetchCategory","createCategory","firstName","lastName","userName","email","mobile","userFrom","now","address","avatar","getUser","createdAt","getUserLoader","featuredExams","userExamInfo","totalExam","upcomingExam","userExamStat","dashboardStudent","userExamStatLoader","responseData","statusCode","message","v","value","property","values","constraints","toString","ids","success","selectedQuestions","onLoading","onLoadingLoader","postExamProfile","examSpec","defaults","common"],"mappings":"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","file":"static/js/main.7d83c29d.chunk.js","sourcesContent":["import { css } from \"@emotion/core\";\r\nimport pMinDelay from 'p-min-delay';\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\r\nimport { canActivate, rolePermitted } from \"../utils/canActivate\";\r\n//import NotFoundPage from \"./404\";\r\nconst mDelay = 500;\r\n\r\nconst NotFoundPage = lazy(()=> pMinDelay(import('./404'), mDelay));\r\n//import Landing from \"./landing/landing\";\r\nconst Landing = lazy(()=> pMinDelay(import('./landing/landing'), mDelay));\r\n//import InnerContent from \"./layout\";\r\nconst InnerContent = lazy(()=> pMinDelay(import('./layout'), mDelay));\r\n//import Login from \"./registration/login\";\r\nconst Login = lazy(()=> pMinDelay(import('./registration/login'), mDelay));\r\n//import LogoutPage from \"./registration/logout\";\r\nconst LogoutPage = lazy(()=> pMinDelay(import('./registration/logout'), mDelay));\r\n//import Signup from \"./registration/signup\";\r\nconst Signup = lazy(()=> pMinDelay(import('./registration/signup'), mDelay));\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 45vh auto;\r\n  bordeClimbingBoxLoader\r\n  r-color: red;\r\n`;\r\n\r\nconst RoutePages = (props) => {\r\n  // const tokenRole = props.token ? jwtDecode(props.token).role : -1;\r\n  let routes = (\r\n      <Suspense fallback={<ClimbingBoxLoader css={override} />}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/exams\" exact component={InnerContent} />\r\n          <Route path=\"/exams/:id\" exact component={InnerContent} />\r\n          <Route path=\"/exams/free/:id\" component={InnerContent} />\r\n          <Route path=\"/result\" component={InnerContent} />\r\n          <Route path=\"/result/rank/:id\" component={InnerContent} />\r\n          <Route path=\"/error\" render={(props)=><NotFoundPage {...props}/>} />\r\n          <Route path=\"/\" exact component={Landing} />\r\n          <Route render={(props)=><NotFoundPage {...props}/>} />\r\n        </Switch>\r\n      </Suspense>\r\n  );\r\n  if (\r\n    props.isAuthenticated &&\r\n    canActivate(rolePermitted.student, props.token)\r\n  ) {\r\n    routes = (\r\n        <Suspense fallback={<ClimbingBoxLoader css={override} />}\r\n        >\r\n          <Switch>\r\n            <Route path=\"/dashboard\" component={InnerContent} />\r\n            <Route path=\"/profile\" component={InnerContent} />\r\n            <Route path=\"/exams\" component={InnerContent} />\r\n            <Route path=\"/exams/:id\" component={InnerContent} />\r\n            <Route path=\"/result\" component={InnerContent} />\r\n            <Route path=\"/rank\" component={InnerContent} />\r\n            <Route path=\"/settings\" component={InnerContent} />\r\n            <Route path=\"/logout\" component={LogoutPage} />\r\n            <Route path=\"/\" exact component={Landing} />\r\n            <Redirect to=\"/dashboard\" />\r\n          </Switch>\r\n        </Suspense>\r\n    );\r\n  }\r\n\r\n  if (canActivate(rolePermitted.mentor, props.token)) {\r\n    \r\n    routes = (\r\n      \r\n        <Suspense fallback={<ClimbingBoxLoader css={override} />}\r\n        >\r\n          <Switch>\r\n            <Route path=\"/dashboard\" component={InnerContent} />\r\n            <Route path=\"/profile\" component={InnerContent} />\r\n            <Route path=\"/question\" component={InnerContent} />\r\n            <Route path=\"/exambuilder\" component={InnerContent} />\r\n            <Route path=\"/settings\" component={InnerContent} />\r\n            <Route path=\"/logout\" component={LogoutPage} />\r\n            <Route path=\"/\" exact component={Landing} />\r\n            <Redirect to=\"/dashboard\" />\r\n          </Switch>\r\n        </Suspense>\r\n    );\r\n  }\r\n\r\n  if (canActivate(rolePermitted.admin, props.token)) {\r\n  \r\n    routes = (\r\n      \r\n        <Suspense fallback={<ClimbingBoxLoader css={override} />}\r\n        >\r\n          <Switch>\r\n            <Route path=\"/dashboard\" component={InnerContent} />\r\n            <Route path=\"/profile\" component={InnerContent} />\r\n            <Route path=\"/category\" component={InnerContent} />\r\n            <Route path=\"/question\" component={InnerContent} />\r\n            <Route path=\"/exambuilder\" component={InnerContent} />\r\n            <Route path=\"/examedit\" component={InnerContent} />\r\n            <Route path=\"/settings\" component={InnerContent} />\r\n            <Route path=\"/logout\" component={LogoutPage} />\r\n            <Route path=\"/\" exact component={Landing} />\r\n            <Redirect to=\"/dashboard\" />\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n  }\r\n\r\n  return routes;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RoutePages);\r\n//export default RoutePages;\r\n","/* eslint-disable no-undef */\n/* eslint-disable react/prop-types */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport RoutePages from \"./container/routePages\";\nimport { checkAuthState } from \"./store/auth\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutologin();\n  }\n  render() {\n    return (\n      <>\n        <BrowserRouter>\n          <RoutePages  />\n        </BrowserRouter>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutologin: () => {\n      dispatch(checkAuthState());\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport apiReducer from \"./api\";\r\nimport authReducer from \"./auth\";\r\nimport categoryReducer from \"./category\";\r\nimport dashboardReducer from \"./dashboard\";\r\nimport examPaperReducer from \"./examPaper\";\r\nimport examsReducer from \"./exams\";\r\nimport questionReducer from \"./question\";\r\nimport userReducer from \"./user\";\r\n\r\nconst appReducer = combineReducers({\r\n  api: apiReducer,\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  category: categoryReducer,\r\n  question: questionReducer,\r\n  examPaper: examPaperReducer,\r\n  exams: examsReducer,\r\n  dashboard: dashboardReducer,\r\n});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  \r\n  if (action.type === 'RESET_APP') {\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer;","/* eslint-disable prettier/prettier */\n/* eslint-disable no-undef */\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faArrowUp,\n  faBalanceScale,\n  faBars,\n  faBell,\n  faCalendarAlt,\n  faChartBar,\n  faChartLine,\n  faClock,\n  faCloud,\n  faComments,\n  faEnvelope,\n  faFile,\n  faFileAlt,\n  faFileImport,\n  faHome,\n  faHourglass,\n  faMedal,\n  faPoll,\n  faQuoteLeft,\n  faSearch,\n  faShoppingCart,\n  faSignOutAlt,\n  faStar,\n  faSync,\n  faTable,\n  faThumbsUp,\n  faUser,\n  faUsers,\n  faWrench\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { IntlProvider } from \"react-intl\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport Bangla from \"./lang/bn.json\";\nimport rootReducers from \"./store\";\nimport { api } from \"./store/middleware/index\";\n\nlibrary.add(\n  fab,\n  faHome,\n  faUser,\n  faEnvelope,\n  faShoppingCart,\n  faChartLine,\n  faChartBar,\n  faTable,\n  faWrench,\n  faFileAlt,\n  faSearch,\n  faComments,\n  faBell,\n  faSignOutAlt,\n  faSync,\n  faFileImport,\n  faMedal,\n  faClock,\n  faPoll,\n  faBalanceScale,\n  faUsers,\n  faFile,\n  faCalendarAlt,\n  faStar,\n  faBars,\n  faCloud,\n  faHourglass,\n  faThumbsUp,\n  faQuoteLeft,\n  faArrowUp\n);\n\nconst store = configureStore({\n  reducer: rootReducers,\n  middleware: [...getDefaultMiddleware(), api],\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <IntlProvider locale={process.env.REACT_APP_LANG} defaultLocale={process.env.REACT_APP_DEFAULT_LANG}  messages={process.env.REACT_APP_LANG === 'bn' && Bangla}>\n      <App />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","/*\r\n\r\nit is an simple api middleware to generalize get and send data to server\r\n\r\n\r\n\r\n*/\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { apiCallBegun, apiCallSuccess, apiCallFail } from \"../api\";\r\n\r\nimport { authSuccess, checkAuthTimeOut } from \"../auth\";\r\n\r\nimport setAuthorizationToken from \"../../utils/setAuthorizationToken\";\r\nimport errorHandler from \"../../utils/errorHandler\";\r\n\r\n//api middleware function\r\n\r\nexport const api = ({ getState, dispatch }) => (next) => async (action) => {\r\n  if (action.type !== apiCallBegun.type) return next(action);\r\n\r\n  const {\r\n    url,\r\n    method,\r\n    data,\r\n    config,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    sendToken,\r\n  } = action.payload;\r\n\r\n  if (onStart) dispatch({ type: onStart });\r\n  next(action);\r\n\r\n  try {\r\n    if (sendToken) {\r\n      setAuthorizationToken(getState().auth.token);\r\n    }\r\n    // let imageData;\r\n    // if (data && data.image) {\r\n    //   imageData = new FormData();\r\n    //   Object.keys().forEach((e) => {\r\n    //     imageData.append(e, data[e]);\r\n    //   });\r\n    //   console.log(imageData);\r\n    //   data = imageData;\r\n    // }\r\n\r\n    const response = await axios.request({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url,\r\n      method,\r\n      data: data,\r\n      config,\r\n    });\r\n\r\n    dispatch(apiCallSuccess(response.data));\r\n\r\n    if (onSuccess) {\r\n      if (onSuccess === authSuccess.type) {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expireIn * 1000\r\n        );\r\n        localStorage.setItem(\"jwtToken\", response.data.accessToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.id);\r\n        dispatch(checkAuthTimeOut(response.data.expireIn));\r\n        dispatch({ type: authSuccess.type, payload: response.data });\r\n      } else dispatch({ type: onSuccess, payload: response.data });\r\n    }\r\n  } catch (error) {\r\n    const response = errorHandler(error);\r\n    dispatch(apiCallFail(response));\r\n    if (onError) dispatch({ type: onError, payload: response });\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    loading: false,\r\n    token: null,\r\n    userId: null,\r\n    role: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    authStart: (auth) => {\r\n      auth.loading = true;\r\n    },\r\n    authSuccess: (auth, action) => {\r\n      auth.loading = false;\r\n      auth.token = action.payload.accessToken;\r\n      auth.userId = action.payload.id;\r\n      auth.role = action.payload.role;\r\n      auth.expireIn = action.payload.expireIn;\r\n      auth.error = null;\r\n    },\r\n    authFail: (auth, action) => {\r\n      auth.loading = false;\r\n      auth.error = action.payload;\r\n    },\r\n    logout: (auth) => {\r\n      auth.token = null;\r\n      auth.userId = null;\r\n      auth.expireIn = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { authStart, authSuccess, authFail, logout } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\n//declaring some variable\r\n\r\nconst url = \"/auth/login\";\r\nconst method = \"post\";\r\n\r\nexport const auth = (username, password) => (dispatch) => {\r\n  const authData = {\r\n    username,\r\n    password,\r\n  };\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      data: authData,\r\n      onStart: authStart.type,\r\n      onSuccess: authSuccess.type,\r\n      onError: authFail.type,\r\n    })\r\n  );\r\n};\r\nexport const autoAuth = () => (dispatch) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  if (token) {\r\n    dispatch(\r\n      authSuccess({\r\n        token,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(logout());\r\n  }, expirationTime * 1000);\r\n};\r\n\r\nexport const checkAuthState = () => (dispatch) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  if (!token) {\r\n    dispatch(logout);\r\n  } else {\r\n    const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n    if (expirationDate > new Date()) {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      dispatch(authSuccess({ accessToken: token, id: userId }));\r\n      dispatch(\r\n        checkAuthTimeOut(\r\n          (expirationDate.getTime() - new Date().getTime()) / 1000\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(logout());\r\n    }\r\n  }\r\n};\r\n\r\nexport const logoutLoader = () => (dispatch) => {\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"jwtToken\");\r\n  dispatch(logout());\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\n\r\nexport const rolePermitted = {\r\n  guest: 0,\r\n  student: 1,\r\n  mentor: 2,\r\n  moderator: 3,\r\n  coordinator: 4,\r\n  admin: 5,\r\n};\r\n\r\nexport function roleToString(num){\r\n switch(num){\r\n  case 1:\r\n    return \"Student\";\r\n  case 2:\r\n    return  \"Mentor\";\r\n  case 3:\r\n    return  \"Modarator\";\r\n  case 4:\r\n    return  \"Coordinator\"\r\n  case 5:\r\n    return  \"Admin\";\r\n     \r\n  default:\r\n    return \"Guest\"   \r\n }\r\n}\r\n\r\nexport const canActivate = (role, token) => {\r\n  const tokenRole = token ? jwtDecode(token).role : -1;\r\n  return tokenRole >= role;\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"api\",\r\n  initialState: { result: null, error: null },\r\n  reducers: {\r\n    apiCallBegun: (api, action) => {\r\n      //api.loading = true;\r\n    },\r\n    apiCallSuccess: (api, action) => {\r\n      //api.loading = false;\r\n      api.result = action.payload;\r\n    },\r\n    apiCallFail: (api, action) => {\r\n      api.error = action.payload;\r\n    },\r\n    apiCallReset: (api)=>{\r\n      api.result = null;\r\n      api.error = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { apiCallBegun, apiCallSuccess, apiCallFail, apiCallReset } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"Exams\",\r\n  initialState: {\r\n    id: null,\r\n    questions: [],\r\n    questionIdsByOrder: [],\r\n    singleQuestionMark: null,\r\n    singleStemMark: null,\r\n    penaltyMark: null,\r\n    timeLimit: null,\r\n    examResult: null,\r\n    totalMark: null,\r\n    totalScore: null,\r\n    totalPenaltyMark: null,\r\n    totalScorePercentage: null,\r\n    timeTakenToComplete: null,\r\n    rank: null,\r\n    exam: null, // store the individual exam\r\n    error: null,\r\n    examError: null,\r\n    exams: [], // store the all exam lists\r\n    disableQuestions: []\r\n  },\r\n  reducers: {\r\n    resetExamResult: (state) => {\r\n      state.examResult = null;\r\n      state.totalMark = null;\r\n      state.totalScore = null;\r\n      state.totalPenaltyMark = null;\r\n      state.totalScorePercentage = null;\r\n      state.timeTakenToComplete = null;\r\n      state.rank = null;\r\n      state.exam = null;\r\n      state.error = null;\r\n      state.questionIdsByOrder = [];\r\n      state.disableQuestions = [];\r\n    },\r\n    getAllExams: (state, action) => {\r\n      state.exams = action.payload;\r\n    },\r\n    getExamById: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id);\r\n      });\r\n      state.id = action.payload.exam.id;\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark;\r\n      state.singleStemMark = action.payload.exam.singleStemMark;\r\n      state.timeLimit = action.payload.exam.timeLimit;\r\n      state.penaltyMark = action.payload.exam.penaltyMark;\r\n    },\r\n    getFreeExamById: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      action.payload.questions.forEach((e) => {\r\n        state.questionIdsByOrder.push(e.id);\r\n      });\r\n      state.id = action.payload.exam.id;\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark;\r\n      state.singleStemMark = action.payload.exam.singleStemMark;\r\n      state.timeLimit = action.payload.exam.timeLimit;\r\n      state.penaltyMark = action.payload.exam.penaltyMark;\r\n    },\r\n    getExamError: (state, action) => {\r\n      state.examError = action.payload;\r\n    },\r\n    resetExamError: (state) => {\r\n      state.examError = null;\r\n    },\r\n    postExamById: (state, action) => {\r\n      state.examResult = action.payload.resultArray;\r\n      state.totalMark = action.payload.totalMark;\r\n      state.totalScore = action.payload.totalScore;\r\n      state.totalPenaltyMark = action.payload.totalPenaltyMark;\r\n      state.totalScorePercentage = action.payload.totalScorePercentage;\r\n      state.timeTakenToComplete = action.payload.timeTakenToComplete;\r\n    },\r\n    examRankById: (state, action) => {\r\n      state.rank = action.payload.rank;\r\n      state.exam = action.payload.exam;\r\n    },\r\n    postExamError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    disableQuestionsAdd: (state,action) =>{\r\n      state.disableQuestions.push(action.payload);\r\n    },\r\n    resetDisableQuestions: (state)=>{\r\n      state.disableQuestions = []\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  resetExamResult,\r\n  getAllExams,\r\n  getExamById,\r\n  getFreeExamById,\r\n  getExamError,\r\n  resetExamError,\r\n  postExamById,\r\n  examRankById,\r\n  postExamError,\r\n  disableQuestionsAdd,\r\n  resetDisableQuestions\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getAllExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/\",\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getAllFreeExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/free\",\r\n      method: \"get\",\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/questions/\" + id,\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getExamById.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getFreeExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/free/questions/\" + id,\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getFreeExamById.type,\r\n      onError: getExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const postExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams\",\r\n      method: \"post\",\r\n      data: data,\r\n      sendToken: true,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const postFreeExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams/free\",\r\n      method: \"post\",\r\n      data: data,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const examRankByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams/rank/\" + id,\r\n      method: \"get\",\r\n      onSuccess: examRankById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const resetExamResultLoader = () => (dispatch)=> {\r\n  dispatch({type: resetExamResult.type})\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\n\r\nconst slice = createSlice({\r\n  name: \"Question\",\r\n  initialState: {\r\n    questions: [],\r\n    error: null,\r\n    response: null,\r\n    loading: false\r\n  },\r\n  reducers: {\r\n    getQuestions: (state, action) => {\r\n      state.questions = action.payload;\r\n    },\r\n    loadingStart: (state, action)=>{\r\n      state.loading = true;\r\n    },\r\n    getResponse: (state, action)=>{\r\n      state.response = action.payload,\r\n      state.loading = false\r\n    },\r\n    resetResponse: (state, action)=>{\r\n      state.response = null,\r\n      state.loading = false\r\n    }\r\n  },\r\n});\r\n\r\nexport const { getQuestions,  loadingStart, getResponse, resetResponse } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const resetResponseLoader = () => (dispatch) => {\r\n  dispatch({\r\n    type: resetResponse.type\r\n  });\r\n};\r\n\r\nexport const getQuestionLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions\",\r\n      method: \"get\",\r\n      //sendToken: true,\r\n      //data,\r\n      //config,\r\n      onSuccess: getQuestions.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getQuestionByCategoryLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/category/\" + id,\r\n      method: \"get\",\r\n      onSuccess: getQuestions.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  const questionData = new FormData();\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key]);\r\n  });\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions\",\r\n      method: \"post\",\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const uploadQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  const questionData = new FormData();\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key]);\r\n  });\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/files\",\r\n      method: \"post\",\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n    })\r\n  );\r\n};\r\n\r\nexport const editQuestionLoader = (id , data) => (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  const questionData = new FormData();\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key]);\r\n  });\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/\" + id,\r\n      method: \"patch\",\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const deleteQuestionLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/\" + id,\r\n      method: \"delete\",\r\n      sendToken: true,\r\n      onStart: loadingStart.type,\r\n      onSuccess: getResponse.type,\r\n      onError: getResponse.type,\r\n    })\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"Category\",\r\n  initialState: { categories: [], catHierarchy: [] },\r\n  reducers: {\r\n    getCategory: (state, action) => {\r\n      state.categories = action.payload.categories;\r\n      state.catHierarchy = action.payload.catHierarchy;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getCategory } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nconst url = \"/categories\";\r\nconst method = \"get\";\r\nexport const fetchCategory = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getCategory.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createCategory = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method: \"post\",\r\n      data,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    id: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    userName: null,\r\n    email: null,\r\n    role: null,\r\n    mobile: null,\r\n    userFrom: Date.now(),\r\n    address: null,\r\n    avatar: null,\r\n  },\r\n  reducers: {\r\n    getUser: (user, action) => {\r\n      user.id = action.payload.id;\r\n      user.firstName = action.payload.firstName;\r\n      user.lastName = action.payload.lastName;\r\n      user.userName = action.payload.userName;\r\n      user.email = action.payload.email;\r\n      user.mobile = action.payload.mobile;\r\n      user.userFrom = action.payload.createdAt;\r\n      user.role = action.payload.role;\r\n      user.address = action.payload.address;\r\n      user.avatar = action.payload.avatar\r\n    },\r\n  },\r\n});\r\nexport const { getUser } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nconst url = \"/users\";\r\nconst method = \"get\";\r\n\r\nexport const getUserLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getUser.type,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState: {\r\n    featuredExams: [],\r\n    userExamInfo: {\r\n      totalExam: [0, 0],\r\n      rank: [1, 100],\r\n      upcomingExam: [\"No Exam\", \"01-02-03\",null],\r\n      result: [0.0, 100],\r\n    },\r\n    userExamStat: null,\r\n  },\r\n  reducers: {\r\n    dashboardStudent: (state, action) => {\r\n      state.featuredExams = action.payload.featuredExams;\r\n      state.userExamInfo = action.payload.userExamInfo;\r\n      state.userExamStat = action.payload.userExamStat;\r\n    },\r\n    userExamStat: (state,action)=>{\r\n      state.userExamStat = action.payload.userExamStat;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { dashboardStudent} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nconst url = \"/dashboard/examstat\";\r\nconst method = \"get\";\r\n\r\nexport const userExamStatLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: userExamStat.type,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","export default function errorHandler(e) {\r\n\r\n  if (e.response) {\r\n    // checking if server is down, no response will occur\r\n    const responseData = e.response.data;\r\n\r\n    if (responseData.statusCode === 400) {\r\n      // server validation error\r\n      let message = \"\";\r\n      try {\r\n        responseData.message.forEach((v) => {\r\n          message += `${v.value} is not valid in [ ${\r\n            v.property\r\n          } ] field due to \" ${Object.values(v.constraints).toString()} \"`;\r\n        });\r\n      } catch (error) {\r\n        message = responseData.error;\r\n      }\r\n\r\n      return message;\r\n    } else if (responseData.statusCode === 500) {\r\n      return \"Internal Server Error: file may be corrupted or so on.\";\r\n    } else {\r\n      //for other errors\r\n      return responseData.message;\r\n    }\r\n  } else {\r\n    // if server has no any response\r\n    return \"Server may be down. Please try sometime later\";\r\n  }\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\n\r\nconst slice = createSlice({\r\n  name: \"ExamPaper\",\r\n  initialState: {\r\n    loading: false,\r\n    questions: [],\r\n    ids: [],\r\n    success: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    selectedQuestions: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      state.ids = action.payload.ids;\r\n    },\r\n    onLoading: (state)=>{\r\n      state.loading = true;\r\n    },\r\n    onSuccess: (state, action) => {\r\n      state.success = action.payload;\r\n      state.loading= false;\r\n    },\r\n    onError: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectedQuestions, onSuccess, onError, onLoading } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const selectedQuestionsLoader = (questions, ids) => (dispatch) => {\r\n  dispatch(selectedQuestions({ questions, ids }));\r\n};\r\n\r\nexport const onLoadingLoader = () => (dispatch) => {\r\n  dispatch({type: onLoading.type});\r\n};\r\n\r\nexport const postExamProfile = (examSpec, questions) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams\",\r\n      method: \"post\",\r\n      data: { ...examSpec, questions },\r\n      onSuccess: onSuccess.type,\r\n      onError: onError.type,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default function setAuthorizationToken(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}\r\n"],"sourceRoot":""}