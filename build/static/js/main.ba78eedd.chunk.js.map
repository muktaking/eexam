{"version":3,"sources":["store/api.js","store/auth.js","store/category.js","store/dashboard.js","store/examPaper.js","store/exams.js","store/question.js","store/user.js","store/index.js","utils/setAuthorizationToken.js","utils/errorHandler.js","store/middleware/index.js","utils/canActivate.js","components/navbar/navbarHome.jsx","container/404.js","container/landing/contact/contact.jsx","components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/landing/exam/exam.jsx","container/landing/miniBlock/miniBlock.jsx","container/landing/feature/feature.jsx","container/landing/home/home.jsx","container/landing/landing.jsx","components/sidebar/sidebar.jsx","components/sidebar/sidebarMini.jsx","components/topbar/topbar.jsx","container/category/categoryForm.js","container/category/category.jsx","components/dashboard/bigCards/bigCard/bigCard.jsx","components/dashboard/bigCards/mainContentCards/examsFeaturedCard.jsx","components/dashboard/bigCards/mainContentCards/reportCard.jsx","components/dashboard/bigCards/sideCards/recentActivityCard.jsx","components/dashboard/bigCards/bigCards.jsx","components/dashboard/miniCards/miniInfoBlock/miniBlock/icon.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/footer.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/header.js","components/dashboard/miniCards/miniInfoBlock/miniBlock/index.js","components/dashboard/miniCards/miniInfoBlock/rank.js","components/dashboard/miniCards/miniInfoBlock/result.js","components/dashboard/miniCards/miniInfoBlock/totalExam.js","components/dashboard/miniCards/miniInfoBlock/upcomingExam.js","components/dashboard/miniCards/miniCards.jsx","container/dashboard/dashboard.jsx","components/examBuilder/card/card.jsx","components/examBuilder/examSpec.jsx","components/examBuilder/filter.jsx","components/examBuilder/selectedQuestionsPreview.jsx","components/pagination/pagination.jsx","utils/paginate.js","container/examBuilder/examBuilder.js","container/exams/examLists.js","components/exams/paper/question/stem.jsx","components/exams/paper/question/question.jsx","components/navbar/subNavBar.js","container/exams/examTaker.js","container/question/questionsUpload.jsx","container/question/questionStem.view.jsx","container/question/questionView.jsx","container/question/question.js","container/result/rank.js","components/result/stem.js","container/result/result.js","container/layout.jsx","container/registration/login.jsx","container/registration/logout.jsx","container/registration/signup.jsx","container/routePages.jsx","App.jsx","index.js"],"names":["slice","createSlice","name","initialState","result","error","reducers","apiCallBegun","api","action","apiCallSuccess","payload","apiCallFail","actions","loading","token","userId","role","authStart","auth","authSuccess","accessToken","id","expireIn","authFail","logout","checkAuthTimeOut","expirationTime","dispatch","setTimeout","categories","catHierarchy","getCategory","state","fetchCategory","url","method","onSuccess","type","featuredExams","userExamInfo","totalExam","rank","upcomingExam","userExamStat","dashboardStudent","questions","ids","success","selectedQuestions","onError","questionIdsByOrder","singleQuestionMark","singleStemMark","penaltyMark","timeLimit","examResult","totalMark","totalScore","totalPenaltyMark","totalScorePercentage","timeTakenToComplete","exam","examError","exams","resetExamResult","getAllExams","getExamById","forEach","e","push","getFreeExamById","getExamError","resetExamError","postExamById","resultArray","examRankById","postExamError","getQuestions","firstName","lastName","userName","email","avatar","getUser","user","avater","getUserLoader","sendToken","combineReducers","apiReducer","authReducer","userReducer","category","categoryReducer","question","questionReducer","examPaper","examPaperReducer","examsReducer","dashboard","dashboardReducer","setAuthorizationToken","axios","defaults","headers","common","errorHandler","response","responseData","data","statusCode","message","v","value","property","Object","values","constraints","toString","rolePermitted","canActivate","jwtDecode","connect","isAuthenticated","props","pages","Navbar","bg","variant","fixed","expand","to","className","Toggle","aria-controls","Collapse","Nav","map","Item","key","as","isLanding","activeClass","spy","smooth","offset","duration","href","activeClassName","pathname","showUnder","icon","size","transform","NotFound","style","top","this","location","Component","contact","Row","Col","md","target","rel","categoryTypeVariant","ExamCard","width","examId","imgSrc","title","categoryType","description","createdAt","free","Card","Img","src","Body","Title","fontSize","fontWeight","Subtitle","Badge","Text","moment","calendar","Button","onClick","listCard","landing","authToken","useSelector","useState","show","setShow","handleClose","Modal","onHide","Header","closeButton","toUpperCase","process","imageUrl","filter","cat","length","Footer","marginTop","position","left","i","min","max","Math","floor","random","height","Exam","get","then","res","status","setState","catch","console","log","miniBlock","heading","para","feature","features","faIcons","Jumbotron","xs","index","home","Sidebar","classes","sideNav","join","sideNavLink","fa","menuName","navLinks","onGetUserLoader","Brand","styles","exact","topbar","isLoggedIn","paddingLeft","pageName","CategoryForm","submitHandler","handleChange","formErrors","selectOptionValueRef","showEditCategoryAccordionStateHandler","Accordion","defaultActiveKey","eventKey","Form","onSubmit","enctype","Group","controlId","Label","Control","placeholder","onChange","ref","categorySlug","slug","replace","selected","parentId","order","image","formValid","rest","valid","Category","resetState","isEditCategory","popover","Popover","Content","deleteCategory","hideResponse","preventDefault","current","FormData","keys","append","request","baseURL","responseClass","onFetchCategoryLoader","editCategorysubmitHandler","files","validator","isLength","contains","isInt","isMongoId","isNumeric","isEmpty","showEditCategoryComponent","React","createRef","delete","Spinner","animation","Alert","centeredStyle","OverlayTrigger","trigger","placement","rootClose","overlay","disabled","onCreateCategoryloader","createCategory","BigCard","startDate","Date","endDate","startHandleChange","date","endHandleChange","reportHandler","header","showDatePicker","children","ExamsFeaturedCard","headerColor","ListGroup","ReportCard","labels","_","examTitles","datasets","label","stat","averageScore","toFixed","fill","borderColor","backgroundColor","borderWidth","maxBarThickness","barPercentage","options","responsive","scales","yAxes","ticks","beginAtZero","SideCard","color","attemptNumbers","lastAttemptTime","startOf","fromNow","BigCards","xl","lg","footer","cardHeader","faIcon","footerHeading","footerValue","faFooterIcon","sm","MiniCards","format","Dashboard","useDispatch","useEffect","card","headerBgColor","showHeader","zIndex","ExamSpec","hideMsg","setHideMsg","selectedQuestionIds","successMsg","initialValues","questionStemLength","validate","onSubmitHandler","errors","handleSubmit","onClose","dismissible","multiple","examSpec","alert","defaultValue","SelectedQuestionsPreview","toogleChecked","checkedQuestionIds","checkedQuestions","qText","pagination","itemsCount","pageSize","onPageHandler","currentPage","pageCount","ceil","items","number","Pagination","active","paginate","pageNumber","startIndex","take","ExamPaper","handleShow","checkHandleChange","isChecked","checked","split","preState","actionHandleChange","onGetQuestionByCategoryLoader","page","input","onGetQuestionLoader","bottom","right","FormCheck","Check","inline","defaultChecked","includes","onSelectedQuestionsLoader","getQuestionByCategoryLoader","selectedQuestionsLoader","ExamLists","onGetAllExamsLoader","onResetExamResult","questionStemView","qType","stem","QuestionForm","stems","Completionist","renderer","hours","minutes","seconds","completed","ExamTaker","now","timeExpired","modalShow","answers","answerIds","Set","modalHide","onHandleChange","add","find","o","onPostFreeExamByIdLoader","match","params","onPostExamByIdLoader","onResetExamLoader","onGetExamByIdLoader","onGetFreeExamByIdLoader","onComplete","onTick","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","prevPageText","nextPageText","getExamByIdLoader","getFreeExamByIdLoader","postExamByIdLoader","postFreeExamByIdLoader","withRouter","questionUpload","categoryRef","CategorySlug","InputGroup","Prepend","showEditQuestionAccordionStateHandler","stemAmount","Question","aStemSba","isIn","test","qStem","aStem","fbStem","onCreateQuestionLoader","uploadHandler","file","post","uploadedExcelQuestion","errorResponse","toastShow","Toast","questionData","config","createQuestionLoader","onUploadQuestionLoader","uploadQuestionLoader","Rank","onExamRankByLoader","horizontal","Table","striped","bordered","hover","ind","score","attempts","examRankByIdLoader","answerStatus","QTypeNumber","answer","QType","Result","item","stemResult","lassName","generalFeedbacks","InnerContent","Container","fluid","path","component","ExamBuilder","render","bmBurgerButton","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","bmMorphShape","bmItemList","bmItem","display","bmOverlay","Home","username","password","errorMessage","isValid","onAuth","isEmail","noValidate","onStart","onAutoAuth","localStorage","getItem","Logout","onLogoutLoader","removeItem","SignUp","isAlphanumeric","matches","repeatPassword","equals","passwordRef","gender","history","novalidate","routes","Login","Signup","Landing","LogoutPage","App","modalShowHandler","modalCloseHandler","onTryAutologin","expirationDate","getTime","library","fab","faHome","faUser","faEnvelope","faShoppingCart","faChartLine","faChartBar","faTable","faWrench","faFileAlt","faSearch","faComments","faBell","faSignOutAlt","faSync","faFileImport","faMedal","faClock","faPoll","faBalanceScale","faUsers","faFile","faCalendarAlt","faStar","faBars","faCloud","faHourglass","faThumbsUp","faQuoteLeft","faArrowUp","store","configureStore","reducer","rootReducers","middleware","getDefaultMiddleware","getState","next","a","async","setItem","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ba78eedd.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"api\",\r\n  initialState: { result: null, error: null },\r\n  reducers: {\r\n    apiCallBegun: (api, action) => {\r\n      //api.loading = true;\r\n    },\r\n    apiCallSuccess: (api, action) => {\r\n      //api.loading = false;\r\n      api.result = action.payload;\r\n    },\r\n    apiCallFail: (api, action) => {\r\n      api.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { apiCallBegun, apiCallSuccess, apiCallFail } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    loading: false,\r\n    token: null,\r\n    userId: null,\r\n    role: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    authStart: (auth) => {\r\n      auth.loading = true;\r\n    },\r\n    authSuccess: (auth, action) => {\r\n      auth.loading = false;\r\n      auth.token = action.payload.accessToken;\r\n      auth.userId = action.payload.id;\r\n      auth.role = action.payload.role;\r\n      auth.expireIn = action.payload.expireIn;\r\n      auth.error = null;\r\n    },\r\n    authFail: (auth, action) => {\r\n      auth.loading = false;\r\n      auth.error = action.payload;\r\n    },\r\n    logout: (auth) => {\r\n      auth.token = null;\r\n      auth.userId = null;\r\n      auth.expireIn = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { authStart, authSuccess, authFail, logout } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\n//declaring some variable\r\n\r\nconst url = \"/auth/login\";\r\nconst method = \"post\";\r\n\r\nexport const auth = (username, password) => (dispatch) => {\r\n  const authData = {\r\n    username,\r\n    password,\r\n  };\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      data: authData,\r\n      onStart: authStart.type,\r\n      onSuccess: authSuccess.type,\r\n      onError: authFail.type,\r\n    })\r\n  );\r\n};\r\nexport const autoAuth = () => (dispatch) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  if (token) {\r\n    dispatch(\r\n      authSuccess({\r\n        token,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(logout());\r\n  }, expirationTime * 1000);\r\n};\r\n\r\nexport const checkAuthState = () => (dispatch) => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  if (!token) {\r\n    dispatch(logout);\r\n  } else {\r\n    const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n    if (expirationDate > new Date()) {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      dispatch(authSuccess({ accessToken: token, id: userId }));\r\n      dispatch(\r\n        checkAuthTimeOut(\r\n          (expirationDate.getTime() - new Date().getTime()) / 1000\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(logout());\r\n    }\r\n  }\r\n};\r\n\r\nexport const logoutLoader = () => (dispatch) => {\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"jwtToken\");\r\n  dispatch(logout());\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"Category\",\r\n  initialState: { categories: [], catHierarchy: [] },\r\n  reducers: {\r\n    getCategory: (state, action) => {\r\n      state.categories = action.payload.categories;\r\n      state.catHierarchy = action.payload.catHierarchy;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getCategory } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nconst url = \"/categories\";\r\nconst method = \"get\";\r\nexport const fetchCategory = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getCategory.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createCategory = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method: \"post\",\r\n      data,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState: {\r\n    featuredExams: [],\r\n    userExamInfo: {\r\n      totalExam: [0, 0],\r\n      rank: [1, 100],\r\n      upcomingExam: [\"No Exam\", \"01-02-03\",null],\r\n      result: [0.0, 100],\r\n    },\r\n    userExamStat: null,\r\n  },\r\n  reducers: {\r\n    dashboardStudent: (state, action) => {\r\n      state.featuredExams = action.payload.featuredExams;\r\n      state.userExamInfo = action.payload.userExamInfo;\r\n      state.userExamStat = action.payload.userExamStat;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { dashboardStudent } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\n// export const dashboardStudentLoader = (data) => (dispatch) => {\r\n//   dispatch({\r\n//     type: dashboardStudent.type,\r\n//     payload: data,\r\n//   });\r\n// };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"ExamPaper\",\r\n  initialState: {\r\n    questions: [],\r\n    ids: [],\r\n    success: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    selectedQuestions: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      state.ids = action.payload.ids;\r\n    },\r\n    onSuccess: (state, action) => {\r\n      state.success = action.payload;\r\n    },\r\n    onError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectedQuestions, onSuccess, onError } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const selectedQuestionsLoader = (questions, ids) => (dispatch) => {\r\n  dispatch(selectedQuestions({ questions, ids }));\r\n};\r\n\r\nexport const postExamProfile = (examSpec, questions) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams\",\r\n      method: \"post\",\r\n      data: { ...examSpec, questions },\r\n      onSuccess: onSuccess.type,\r\n      onError: onError.type,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\n\r\nconst slice = createSlice({\r\n  name: \"Exams\",\r\n  initialState: {\r\n    id: null,\r\n    questions: [],\r\n    questionIdsByOrder: [],\r\n    singleQuestionMark: null,\r\n    singleStemMark: null,\r\n    penaltyMark: null,\r\n    timeLimit: null,\r\n    examResult: null,\r\n    totalMark: null,\r\n    totalScore: null,\r\n    totalPenaltyMark: null,\r\n    totalScorePercentage: null,\r\n    timeTakenToComplete: null,\r\n    rank: null,\r\n    exam: null, // store the individual exam \r\n    error: null,\r\n    examError: null,\r\n    exams: [],// store the all exam lists\r\n  },\r\n  reducers: {\r\n    resetExamResult: (state, action) => {\r\n      state.examResult = null;\r\n      state.totalMark = null;\r\n      state.totalScore = null;\r\n      state.totalPenaltyMark = null;\r\n      state.totalScorePercentage = null;\r\n      state.timeTakenToComplete = null;\r\n      state.rank = null;\r\n      state.exam = null;\r\n      state.error = null;\r\n      state.questionIdsByOrder= [];\r\n    },\r\n    getAllExams: (state, action) => {\r\n      state.exams = action.payload;\r\n    },\r\n    getExamById: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      action.payload.questions.forEach(e=>{\r\n        state.questionIdsByOrder.push(e.id)\r\n      });\r\n      state.id = action.payload.exam.id;\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark;\r\n      state.singleStemMark = action.payload.exam.singleStemMark;\r\n      state.timeLimit = action.payload.exam.timeLimit;\r\n      state.penaltyMark = action.payload.exam.penaltyMark;\r\n    },\r\n    getFreeExamById: (state, action) => {\r\n      state.questions = action.payload.questions;\r\n      action.payload.questions.forEach(e=>{\r\n        state.questionIdsByOrder.push(e.id)\r\n      });\r\n      state.id = action.payload.exam.id;\r\n      state.singleQuestionMark = action.payload.exam.singleQuestionMark;\r\n      state.singleStemMark = action.payload.exam.singleStemMark;\r\n      state.timeLimit = action.payload.exam.timeLimit;\r\n      state.penaltyMark = action.payload.exam.penaltyMark;\r\n    },\r\n    getExamError: (state, action)=>{\r\n      state.examError = action.payload;\r\n    },\r\n    resetExamError: (state, action)=>{\r\n      state.examError = null;\r\n    }\r\n    ,\r\n    postExamById: (state, action) => {\r\n      state.examResult = action.payload.resultArray;\r\n      state.totalMark = action.payload.totalMark;\r\n      state.totalScore = action.payload.totalScore;\r\n      state.totalPenaltyMark = action.payload.totalPenaltyMark;\r\n      state.totalScorePercentage = action.payload.totalScorePercentage;\r\n      state.timeTakenToComplete= action.payload.timeTakenToComplete;\r\n    },\r\n    examRankById: (state,action)=>{\r\n      state.rank = action.payload.rank;\r\n      state.exam = action.payload.exam\r\n    }\r\n    ,\r\n    postExamError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  resetExamResult,\r\n  getAllExams,\r\n  getExamById,\r\n  getFreeExamById,\r\n  getExamError,\r\n  resetExamError,\r\n  postExamById,\r\n  examRankById,\r\n  postExamError,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getAllExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/\",\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type\r\n    })\r\n  );\r\n};\r\n\r\nexport const getAllFreeExamsLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/free\",\r\n      method: \"get\",\r\n      onSuccess: getAllExams.type,\r\n      onError: getExamError.type\r\n    })\r\n  );\r\n};\r\n\r\nexport const getExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/questions/\" + id,\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getExamById.type,\r\n      onError: getExamError.type\r\n    })\r\n  );\r\n};\r\n\r\nexport const getFreeExamByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/exams/free/questions/\" + id,\r\n      method: \"get\",\r\n      sendToken: true,\r\n      onSuccess: getFreeExamById.type,\r\n      onError: getExamError.type\r\n    })\r\n  );\r\n};\r\n\r\nexport const postExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams\",\r\n      method: \"post\",\r\n      data: data,\r\n      sendToken: true,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const postFreeExamByIdLoader = (data) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams/free\",\r\n      method: \"post\",\r\n      data: data,\r\n      onSuccess: postExamById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const examRankByIdLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/postexams/rank/\" + id,\r\n      method: \"get\",\r\n      onSuccess: examRankById.type,\r\n      onError: postExamError.type,\r\n    })\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"Question\",\r\n  initialState: {\r\n    questions: [],\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getQuestions: (state, action) => {\r\n      state.questions = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getQuestions } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getQuestionLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions\",\r\n      method: \"get\",\r\n      //sendToken: true,\r\n      //data,\r\n      //config,\r\n      onSuccess: getQuestions.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getQuestionByCategoryLoader = (id) => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/category/\" + id,\r\n      method: \"get\",\r\n      //sendToken: true,\r\n      //data,\r\n      //config,\r\n      onSuccess: getQuestions.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  const questionData = new FormData();\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key]);\r\n  });\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions\",\r\n      method: \"post\",\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n    })\r\n  );\r\n};\r\n\r\nexport const uploadQuestionLoader = (data) => (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  const questionData = new FormData();\r\n  Object.keys(data).forEach((key) => {\r\n    data[key] && questionData.append(key, data[key]);\r\n  });\r\n\r\n  dispatch(\r\n    apiCallBegun({\r\n      url: \"/questions/files\",\r\n      method: \"post\",\r\n      sendToken: true,\r\n      data,\r\n      config,\r\n    })\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegun } from \"./api\";\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    id: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    userName: null,\r\n    email: null,\r\n    avatar: null,\r\n  },\r\n  reducers: {\r\n    getUser: (user, action) => {\r\n      user.id = action.payload.id;\r\n      user.firstName = action.payload.firstName;\r\n      user.lastName = action.payload.lastName;\r\n      user.userName = action.payload.userName;\r\n      user.email = action.payload.email;\r\n      user.avatar =\r\n        action.payload.avater ||\r\n        \"https://api.adorable.io/avatars/285/abott@adorable.png\";\r\n    },\r\n  },\r\n});\r\nexport const { getUser } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nconst url = \"/users\";\r\nconst method = \"get\";\r\n\r\nexport const getUserLoader = () => (dispatch) => {\r\n  dispatch(\r\n    apiCallBegun({\r\n      url,\r\n      method,\r\n      onSuccess: getUser.type,\r\n      sendToken: true,\r\n    })\r\n  );\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport apiReducer from \"./api\";\r\nimport authReducer from \"./auth\";\r\nimport categoryReducer from \"./category\";\r\nimport dashboardReducer from \"./dashboard\";\r\nimport examPaperReducer from \"./examPaper\";\r\nimport examsReducer from \"./exams\";\r\nimport questionReducer from \"./question\";\r\nimport userReducer from \"./user\";\r\n\r\nexport default combineReducers({\r\n  api: apiReducer,\r\n  auth: authReducer,\r\n  user: userReducer,\r\n  category: categoryReducer,\r\n  question: questionReducer,\r\n  examPaper: examPaperReducer,\r\n  exams: examsReducer,\r\n  dashboard: dashboardReducer,\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport default function setAuthorizationToken(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}\r\n","export default function errorHandler(e) {\r\n\r\n  if (e.response) {\r\n    // checking if server is down, no response will occur\r\n    const responseData = e.response.data;\r\n\r\n    if (responseData.statusCode === 400) {\r\n      // server validation error\r\n      let message = \"\";\r\n      try {\r\n        responseData.message.forEach((v) => {\r\n          message += `${v.value} is not valid in [ ${\r\n            v.property\r\n          } ] field due to \" ${Object.values(v.constraints).toString()} \"`;\r\n        });\r\n      } catch (error) {\r\n        message = responseData.error;\r\n      }\r\n\r\n      return message;\r\n    } else if (responseData.statusCode === 500) {\r\n      return \"Internal Server Error: file may be corrupted or so on.\";\r\n    } else {\r\n      //for other errors\r\n      return responseData.message;\r\n    }\r\n  } else {\r\n    // if server has no any response\r\n    return \"Server may be down. Please try sometime later\";\r\n  }\r\n}\r\n","/*\r\n\r\nit is an simple api middleware to generalize get and send data to server\r\n\r\n\r\n\r\n*/\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { apiCallBegun, apiCallSuccess, apiCallFail } from \"../api\";\r\n\r\nimport { authSuccess, checkAuthTimeOut } from \"../auth\";\r\n\r\nimport setAuthorizationToken from \"../../utils/setAuthorizationToken\";\r\nimport errorHandler from \"../../utils/errorHandler\";\r\n\r\n//api middleware function\r\n\r\nexport const api = ({ getState, dispatch }) => (next) => async (action) => {\r\n  if (action.type !== apiCallBegun.type) return next(action);\r\n\r\n  const {\r\n    url,\r\n    method,\r\n    data,\r\n    config,\r\n    onStart,\r\n    onSuccess,\r\n    onError,\r\n    sendToken,\r\n  } = action.payload;\r\n\r\n  if (onStart) dispatch({ type: onStart });\r\n  next(action);\r\n\r\n  try {\r\n    if (sendToken) {\r\n      setAuthorizationToken(getState().auth.token);\r\n    }\r\n    // let imageData;\r\n    // if (data && data.image) {\r\n    //   imageData = new FormData();\r\n    //   Object.keys().forEach((e) => {\r\n    //     imageData.append(e, data[e]);\r\n    //   });\r\n    //   console.log(imageData);\r\n    //   data = imageData;\r\n    // }\r\n\r\n    const response = await axios.request({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url,\r\n      method,\r\n      data: data,\r\n      config,\r\n    });\r\n\r\n    dispatch(apiCallSuccess(response.data));\r\n\r\n    if (onSuccess) {\r\n      if (onSuccess === authSuccess.type) {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expireIn * 1000\r\n        );\r\n        localStorage.setItem(\"jwtToken\", response.data.accessToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.id);\r\n        dispatch(checkAuthTimeOut(response.data.expireIn));\r\n        dispatch({ type: authSuccess.type, payload: response.data });\r\n      } else dispatch({ type: onSuccess, payload: response.data });\r\n    }\r\n  } catch (error) {\r\n    const response = errorHandler(error);\r\n    dispatch(apiCallFail(response));\r\n    if (onError) dispatch({ type: onError, payload: response });\r\n  }\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\n\r\nexport const rolePermitted = {\r\n  guest: 0,\r\n  student: 1,\r\n  mentor: 2,\r\n  moderator: 3,\r\n  coordinator: 4,\r\n  admin: 5,\r\n};\r\n\r\nexport const canActivate = (role, token) => {\r\n  const tokenRole = token ? jwtDecode(token).role : -1;\r\n  return tokenRole >= role;\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n//import Scrollspy from \"react-scrollspy\";\r\nimport { Link as LinkScroll } from \"react-scroll\";\r\nimport ScrollToTop from 'react-scroll-up';\r\n\r\n//import Spinner from \"react-bootstrap/Spinner\";\r\n//import \"./navbarLanding.css\";\r\n\r\nconst navbarHome = (props) => {\r\n  const items = [\"home\", \"contact\"];\r\n  const pages = props.isAuthenticated\r\n    ? [\"dashboard\",\"exams\" ,\"logout\"]\r\n    : [\"exams\",\"signup\", \"login\"];\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"md\">\r\n      {/* {props.auth.loading && (\r\n        <Spinner\r\n          animation=\"border\"\r\n          role=\"status\"\r\n          variant=\"light\"\r\n          className=\"mr-2\"\r\n        ></Spinner>\r\n      )} */}\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        Exam Point\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"navbarResponsive\" />\r\n      <Navbar.Collapse id=\"navbarResponsive\">\r\n        <Nav className=\"ml-auto\">\r\n          {/* <Scrollspy\r\n          items={items}\r\n          currentClassName={\"active\"}\r\n          className=\"navbar-nav ml-auto\"\r\n          offset={-80}\r\n        > */}\r\n          {items.map((value) => (\r\n            <Nav.Item key={value} as=\"li\" className=\"mr-3\">\r\n              {props.isLanding ? (\r\n                <LinkScroll\r\n                  activeClass=\"active\"\r\n                  to={value}\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={-50}\r\n                  duration={500}\r\n                  // //onSetActive={this.handleSetActive}\r\n                  href={\"/\"}\r\n                  className=\"nav-link\"\r\n                  //to={{ pathname: \"/\" }}\r\n                >\r\n                  {value}\r\n                </LinkScroll>\r\n              ) : (\r\n                <HashLink\r\n                  to={\"/#\" + value}\r\n                  className=\"nav-link\"\r\n                  activeClassName=\"active\"\r\n                >\r\n                  {value}\r\n                </HashLink>\r\n              )}\r\n            </Nav.Item>\r\n          ))}\r\n          {pages.map((value) => (\r\n            <Nav.Item key={value} as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/\" + value }}\r\n                className=\"nav-link\"\r\n              >\r\n                {value}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n          {/* </Scrollspy> */}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      {props.isLanding ? (\r\n        <ScrollToTop showUnder={160}>\r\n          <FontAwesomeIcon icon={\"arrow-up\"} size=\"3x\" transform=\"shrink-4\" />\r\n        </ScrollToTop>\r\n      ) : null}\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(navbarHome);\r\n","import React, { Component } from \"react\";\r\nimport \"../assets/scss/section/registration.scss\";\r\nimport NavbarHome from \"../components/navbar/navbarHome\";\r\n\r\n\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"registration\">\r\n        {/* {authRedirect} */}\r\n        <NavbarHome isLanding={false} />\r\n        {/* Landing */}\r\n        <div className=\"landing\">\r\n          <div className=\"home-wrap\">\r\n            <div className=\"home-inner\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"caption text-center\" style={{ top: \"15%\" }}>\r\n          {/* <Spinner animation=\"border\" role=\"status\"></Spinner> */}\r\n          <h1>404-Page</h1>\r\n          <p className=\"lead\">{this.props.location.state ? this.props.location.state.message : \"Your Desired Content -> Not Found\"}</p>\r\n        </div>\r\n        {/* End of Landing */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n//import \"./contact.scss\";\r\n\r\nconst contact = props => {\r\n  const socials = [\r\n    [\"fab\", \"facebook-square\"],\r\n    [\"fab\", \"twitter-square\"],\r\n    [\"fab\", \"instagram\"]\r\n  ];\r\n  return (\r\n    <div id=\"contact\" className=\"offset\">\r\n      <footer>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={6} className=\"text-center\">\r\n            <p className=\"lead\">\r\n              We are highly trained team to manage the exam system for you\r\n            </p>\r\n            <strong>Contact Info</strong>\r\n            <p>\r\n              000-0000-00000 <br />\r\n              admin@eexam.com{\" \"}\r\n            </p>\r\n            {socials.map(value => (\r\n              <a key={value} href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {/* <FontAwesomeIcon icon={[\"fab\", \"apple\"]} /> */}\r\n                <FontAwesomeIcon icon={value} />\r\n              </a>\r\n            ))}\r\n          </Col>\r\n          <hr className=\"socket\" />\r\n          &copy; E-Exam Theme Inspired By Nano theme\r\n        </Row>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default contact;\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { Badge, Button, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { resetExamResult } from '../../../store/exams'\r\n\r\n\r\nconst categoryTypeVariant = (name)=>{\r\n    let variant = \"primary\"\r\n    switch (name) {\r\n        case 'Featured':\r\n            variant = \"warning\"\r\n            break;\r\n        case 'Free':\r\n            variant = \"secondary\"\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return variant;\r\n}\r\n\r\nexport default function ExamCard({width=\"340px\", examId, imgSrc, title, categoryType, description, createdAt, free}) {\r\n    return (\r\n        <>\r\n            <Card key={examId} className=\"mr-2 mb-2\" style={{width:width}}>\r\n                <Card.Img\r\n                    variant=\"top\"\r\n                    src={imgSrc}\r\n                />\r\n                <Card.Body>\r\n                    <div>\r\n                        <Card.Title style={{fontSize: '1.4rem' ,fontWeight: '900'}}>{title}</Card.Title>\r\n                        \r\n                        <Card.Subtitle>\r\n                        {categoryType &&\r\n                            categoryType.map((category) => (\r\n                            <Badge variant={categoryTypeVariant(category.name)} className=\"mr-1\">\r\n                                {category.name}\r\n                            </Badge>\r\n                            ))}\r\n                        </Card.Subtitle>\r\n\r\n                    </div>\r\n                    \r\n                    <Card.Text className=\"mt-1 pt-2\">\r\n                    <p className=\"\">{description} </p>\r\n            \r\n                    <p className=\"text-muted text-right\">Start on: {moment(createdAt).calendar()}</p>\r\n                    </Card.Text>\r\n        \r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Link  className=\"text-white\" to={(free ? \"/exams/free/\" : \"/exams/\") + examId}>\r\n                        <Button variant=\"outline-primary\">Start Exam</Button></Link>\r\n                        <Link className=\"text-white\" to={\"/result/rank/\" + examId}><Button onClick={()=>{resetExamResult()}} variant=\"outline-dark\">Rank</Button></Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"./examCard\";\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\n\r\nexport default function listCard({title,exams,landing}) {\r\n  const authToken = useSelector((state) => state.auth.token ? true : false);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>More <Badge variant=\"warning\">{title.toUpperCase()}</Badge> Exams</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className=\"mt-3 ml-3\">\r\n            <Col className=\"d-flex justify-content-center flex-wrap\">\r\n                { exams.slice(2).map((exam) => ( \r\n                    <ExamCard \r\n                      examId = {exam.id} \r\n                      imgSrc = {process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[0].imageUrl}\r\n                      title = {exam.title}\r\n                      categoryType = {exam.categoryType}\r\n                      description = {exam.description}\r\n                      createdAt = {exam.createdAt}\r\n                      free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                    />                \r\n                ))}\r\n                \r\n            </Col>\r\n          </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        <div className=\"mb-2 border position-relative\" style={{marginTop: \"100px\"}}>\r\n        <h3 className=\"text-center bg-warning text-light px-2 py-1\" style={{position: \"absolute\", top:\"-30px\",left:\"50px\" }}>{title.toUpperCase() + \" \"} { (!landing && <Badge variant=\"light\" className=\"ml-2\"> {exams.length}</Badge> )} </h3>\r\n        <div className=\"mt-4\">\r\n          <div className=\"d-flex justify-content-around flex-wrap\">\r\n              { exams.length < 1 && <p className=\"lead text-danger\"> No {title} Exams is created </p>}\r\n              { exams.map((exam,i) => ( i < 3 ?\r\n                  <ExamCard \r\n                    examId = {exam.id} \r\n                    imgSrc = {process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl}\r\n                    title = {exam.title}\r\n                    categoryType = {exam.categoryType}\r\n                    description = {exam.description}\r\n                    createdAt = {exam.createdAt}\r\n                    free = {!authToken && exam.categoryType.filter(cat=> cat.name === 'Free').length > 0 }\r\n                  />\r\n                  : \"\"\r\n              \r\n              ))}\r\n              \r\n          </div>\r\n          {!landing && <div className=\"my-2 d-flex justify-content-center\">\r\n            {exams.length > 2 ? <Button style={{height:\"50px\", width: \"150px\"}} onClick={()=>{\r\n              handleShow()\r\n            }}>More...</Button> : \"\"}\r\n          </div>}\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport React, { Component } from \"react\";\r\nimport GallaryCard from '../../../components/exams/gallary/gallaryCard';\r\n//import \"./exam.scss\";\r\n\r\n\r\nclass Exam extends Component{\r\n\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      exams: []\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    axios.get(process.env.REACT_APP_SITE_URL + '/exams/featured')\r\n    .then(res=>{\r\n      if(res.status == 200) this.setState({exams: res.data});\r\n    })\r\n    .catch(e=>{\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.exams)\r\n    return (<div id=\"exam\" className=\"mb-5 offset\">\r\n      <GallaryCard title=\"Our Featured Exams\" exams={this.state.exams} landing={true}/>\r\n    </div>)\r\n  }\r\n};\r\n\r\nexport default Exam;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst miniBlock = props => {\r\n  return (\r\n    <Col md={4} key={props.key}>\r\n      <div className=\"feature\">\r\n        <FontAwesomeIcon\r\n          icon={props.icon}\r\n          size=\"4x\"\r\n          transform=\"shrink-3 up-5\"\r\n        />\r\n        <h3>{props.heading}</h3>\r\n        <p>{props.para}</p>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default miniBlock;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nimport MiniBlock from \"../miniBlock/miniBlock\";\r\n\r\n//import \"./feature.scss\";\r\n\r\nconst feature = props => {\r\n  const features = {\r\n    heading: [\"Cloud Based\", \"Anywhere At Anytime\", \"Accurecy\"],\r\n    para: [\r\n      \"All System is based on cloud. Test the digitalization in exam management system\",\r\n      \"You can give exam at anytime from anywhere. Home, sweet home!! \",\r\n      \"We try hard to make all questions and answers 100% accuret \"\r\n    ],\r\n    faIcons: [\"cloud\", \"hourglass\", \"thumbs-up\"]\r\n  };\r\n  return (\r\n    <div id=\"feature\" className=\"offset\">\r\n      <Jumbotron>\r\n        <div className=\"narrow text-center\">\r\n          <Col xs={12}>\r\n            <h3 className=\"heading\">Features</h3>\r\n            <div className=\"heading-underline\"></div>\r\n          </Col>\r\n          <Row className=\"\">\r\n            {features.faIcons.map((value, index) => (\r\n              <MiniBlock\r\n                key={index}\r\n                icon={value}\r\n                heading={features.heading[index]}\r\n                para={features.para[index]}\r\n              />\r\n            ))}\r\n          </Row>\r\n        </div>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default feature;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavbarHome from \"../../../components/navbar/navbarHome\";\r\n\r\n\r\n//import \"./home.scss\";\r\n\r\nconst home = props => {\r\n  return (\r\n    <div id=\"home\">\r\n      <NavbarHome isLanding={true} />\r\n      {/* Landing */}\r\n      <div className=\"landing\">\r\n        <div className=\"home-wrap\">\r\n          <div className=\"home-inner\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"caption text-center\">\r\n        <h1>Welcome to E-Exam System</h1>\r\n        <h3>Gorw confidence by practising</h3>\r\n        <Link to=\"/exams\">\r\n          <Button variant=\"outline-light\" size=\"lg\" className=\"btn-lg\">\r\n            Exams\r\n          </Button>\r\n        </Link>\r\n        \r\n      </div>\r\n\r\n      {/* End of Landing */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default home;\r\n","import React from \"react\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport Contact from \"./contact/contact\";\r\nimport Exam from './exam/exam';\r\nimport Feature from './feature/feature';\r\nimport Home from \"./home/home\";\r\n\r\n\r\n\r\nconst landing = props => {\r\n  return (\r\n    <div className={\"__landing__upper\"}>\r\n      <Home />\r\n      <Exam />\r\n      <Feature />\r\n      {/*<Demo />\r\n      <Clients /> */}\r\n      <Contact /> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default landing;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {\r\n  FaBookOpen, FaCog, FaHome,\r\n\r\n\r\n  FaPen, FaQuestion,\r\n\r\n\r\n\r\n\r\n  FaTools, FaUser\r\n} from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getUserLoader } from \"../../store/user\";\r\nimport { canActivate, rolePermitted } from \"../../utils/canActivate\";\r\n\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  classes = {\r\n    sideNav: [\"flex-column\", \"mt-4\"].join(\" \"),\r\n    sideNavLink: [\"text-white\", \"p-3\", \"mb-2\"].join(\" \"),\r\n    fa: [\"text-light\", \"fa-lg\", \"mr-3\"].join(\" \"),\r\n  };\r\n\r\n  faIcons = [];\r\n  menuName = [];\r\n  navLinks = [];\r\n  // state = {\r\n  //   userName: [null]\r\n  // };\r\n  componentDidMount() {\r\n    this.props.onGetUserLoader();\r\n  }\r\n  render() {\r\n    const { userName, email, id, avatar } = this.props.user;\r\n    if (canActivate(rolePermitted.student, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaBookOpen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\"Dashboard\", \"Exams\", \"Profile\", \"Settings\"];\r\n      this.navLinks = [\"/dashboard\", \"/exams\", \"/profile\", \"/settings\"];\r\n    }\r\n\r\n    if (canActivate(rolePermitted.mentor, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Question\",\r\n        \"Exam Builder\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/question\",\r\n        \"/exambuilder\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n    if (canActivate(rolePermitted.admin, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaCog size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Category\",\r\n        \"Question\",\r\n        \"Exam Builder\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/category\",\r\n        \"/question\",\r\n        \"/exambuilder\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div className=\"px-4\">\r\n        <Navbar.Brand\r\n          className=\"text-white d-block mx-auto text-center py-3 mb-4 bottom-border\"\r\n        >\r\n          <NavLink to=\"/\" className=\"text-white\">E-Exam</NavLink>\r\n        </Navbar.Brand>\r\n        <h3 className=\"text-white\">Good Day</h3>\r\n        <div className=\"bottom-border pb-3\">\r\n          {/* <Image\r\n            src={avatar}\r\n            roundedCircle={true}\r\n            style={{ width: \"50px\" }}\r\n            className=\"mr-3\"\r\n          /> */}\r\n          <a href=\"#\" className=\"text-white\" style={{fontSize:\"1.2rem\"}}>\r\n            {userName}\r\n          </a>\r\n        </div>\r\n        <Nav className={this.classes.sideNav}>\r\n          {this.faIcons.map((value, index) => (\r\n            <Nav.Item key={index}>\r\n              <NavLink\r\n                to={this.navLinks[index]}\r\n                className={\r\n                  \"nav-link \" + this.classes.sideNavLink + \" sidebar-link\"\r\n                }\r\n                activeClassName=\"current\"\r\n              >\r\n                {value}\r\n\r\n                {this.menuName[index]}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetUserLoader: () => dispatch(getUserLoader()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\n//export default Sidebar;\r\n\r\nconst classes = {\r\n  formControl: \"search-input\",\r\n  searchBtn: \"search-button\",\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {\r\n  FaBookOpen, FaCog, FaHome,\r\n\r\n\r\n  FaPen, FaQuestion,\r\n\r\n\r\n\r\n\r\n  FaTools, FaUser\r\n} from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getUserLoader } from \"../../store/user\";\r\nimport { canActivate, rolePermitted } from \"../../utils/canActivate\";\r\n\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  classes = {\r\n    sideNav: [\"flex-column\", \"mt-2\"].join(\" \"),\r\n    sideNavLink: [\"text-white\", \"p-1\", \"mb-2\"].join(\" \"),\r\n    fa: [\"text-light\", \"fa-lg\", \"mr-3\"].join(\" \"),\r\n  };\r\n\r\n  faIcons = [];\r\n  menuName = [];\r\n  navLinks = [];\r\n  // state = {\r\n  //   userName: [null]\r\n  // };\r\n  componentDidMount() {\r\n    this.props.onGetUserLoader();\r\n  }\r\n  render() {\r\n\r\n    this.faIcons = [\r\n      <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n      <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n      <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n      <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n    ]\r\n    this.menuName = [\r\n      \"Home\",\r\n      \"Exams\",\r\n      \"Signup\",\r\n      \"Login\",\r\n    ];\r\n    this.navLinks = [\r\n      \"/\",\r\n      \"/exams\",\r\n      \"/signup\",\r\n      \"/login\"\r\n    ];\r\n  \r\n    if (canActivate(rolePermitted.student, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaBookOpen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\"Dashboard\", \"Exams\", \"Profile\", \"Settings\"];\r\n      this.navLinks = [\"/dashboard\", \"/exams\", \"/profile\", \"/settings\"];\r\n    }\r\n\r\n    if (canActivate(rolePermitted.mentor, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Question\",\r\n        \"Exam Paper\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/question\",\r\n        \"/exampaper\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n    if (canActivate(rolePermitted.admin, this.props.token)) {\r\n      this.faIcons = [\r\n        <FaHome size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaCog size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaQuestion size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaPen size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaUser size=\"1.6em\" className=\"mr-2\" />,\r\n        <FaTools size=\"1.6em\" className=\"mr-2\" />,\r\n      ];\r\n      this.menuName = [\r\n        \"Dashboard\",\r\n        \"Category\",\r\n        \"Question\",\r\n        \"Exam Builder\",\r\n        \"Profile\",\r\n        \"Settings\",\r\n      ];\r\n      this.navLinks = [\r\n        \"/dashboard\",\r\n        \"/category\",\r\n        \"/question\",\r\n        \"/exambuilder\",\r\n        \"/profile\",\r\n        \"/settings\",\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div style={styles}>\r\n        \r\n        <Nav className={this.classes.sideNav}>\r\n          \r\n          {this.faIcons.map((value, index) => (\r\n            <Nav.Item key={index}>\r\n              <NavLink\r\n                exact to={this.navLinks[index]}\r\n                className={\r\n                  \"nav-link \" + this.classes.sideNavLink + \" sidebar-link\"\r\n                }\r\n                activeClassName=\"current\"\r\n              >\r\n                {value}\r\n\r\n                {this.menuName[index]}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n          <div className=\"hideInMd\">\r\n            {/* <SearchForm\r\n              formControl={classes.formControl}\r\n              searchBtn={classes.searchBtn}\r\n            /> */}\r\n            {this.props.token ?  <Nav.Item\r\n              className=\"ml-md-auto\"\r\n            >\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/logout\" }}\r\n                className=\"nav-link\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon=\"sign-out-alt\"\r\n                  size=\"lg\"\r\n                  className=\"text-danger\"\r\n                />\r\n              </NavLink>\r\n            </Nav.Item> :\r\n            <>\r\n            </>\r\n            }\r\n          </div>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetUserLoader: () => dispatch(getUserLoader()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\n//export default Sidebar;\r\n\r\nconst classes = {\r\n  formControl: \"search-input\",\r\n  searchBtn: \"search-button\",\r\n};\r\n\r\nconst styles = {\r\n  fontSize: \"14px\",\r\n};\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst topbar = (props) => {\r\n  const isLoggedIn = useSelector((state) => state.auth.token);\r\n  const classes = {\r\n    formControl: \"search-input\",\r\n    searchBtn: \"search-button\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-dark py-2 top-navbar mb-3 w-100\">\r\n      <Row className=\"align-items-center\">\r\n        <Col md={4} style={{ paddingLeft: \"3rem\" }}>\r\n          <h4 className=\"text-light text-uppercase mb-0\">{props.pageName}</h4>\r\n        </Col>\r\n        \r\n        <Col md={8} className=\"hideInSm pr-5\">\r\n          <Nav className=\"\" style={{'fontSize': '1.2rem'}}>\r\n            <Nav.Item className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Home\r\n                </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n                className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/exams\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Exams\r\n                </NavLink>\r\n            </Nav.Item>\r\n           \r\n            {isLoggedIn ? <Nav.Item\r\n              className=\"\"\r\n            >\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/logout\" }}\r\n                className=\"nav-link\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon=\"sign-out-alt\"\r\n                  size=\"lg\"\r\n                  className=''\r\n                />\r\n              </NavLink>\r\n            </Nav.Item>\r\n            :\r\n            <>\r\n            <Nav.Item\r\n                className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/signup\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Signup\r\n                </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n                className=\"\">\r\n                <NavLink\r\n                  to={{ pathname: \"/login\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  Login\r\n                </NavLink>\r\n            </Nav.Item>\r\n            </>\r\n            }\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onlogoutLoader: () => dispatch(logoutLoader()),\r\n//   };\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     auth: state.auth,\r\n//   };\r\n// };\r\n\r\n//export default connect(null, n)(withRouter(topbar));\r\nexport default topbar;\r\n","import React from \"react\";\r\nimport { Accordion, Button, Card, Form } from \"react-bootstrap\";\r\n\r\nconst CategoryForm = (props) => {\r\n  const {\r\n    submitHandler,\r\n    handleChange,\r\n    formErrors,\r\n    categories,\r\n    name,\r\n    //slug,\r\n    selectOptionValueRef,\r\n    category,\r\n    showEditCategoryAccordionStateHandler,\r\n  } = props;\r\n  return (\r\n    <Accordion className=\"mt-3\" defaultActiveKey={name && \"0\"}>\r\n      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n        <h3> {name ? \"Edit \" + name : \"Create A New\"} Category</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Form\r\n          className=\"mt-2\"\r\n          onSubmit={submitHandler}\r\n          enctype=\"multipart/form-data\"\r\n        >\r\n          <Form.Group controlId=\"formGroupCategoryName\">\r\n            <Form.Label>Category Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Category Name\"\r\n              name=\"name\"\r\n              value={category ? category.name : null}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.name.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.name}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridParent\">\r\n            <Form.Label>Parent Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"parentId\"\r\n              onChange={handleChange}\r\n              ref={selectOptionValueRef}\r\n            >\r\n              <option value=\"Top\">Top</option>\r\n              {categories.map((value) => {\r\n                let categorySlug = value.slug.replace(/_/g, \" / \");\r\n                return (\r\n                  <option\r\n                    value={value.id}\r\n                    selected={category && value.id === category.parentId}\r\n                  >\r\n                    {categorySlug}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.parentId.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.parentId}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupCategoryOrder\">\r\n            <Form.Label>Category Order</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"order\"\r\n              value={category && category.order}\r\n              placeholder=\"e.g. 5 <..Order makes priority. Lower value higher order..>\"\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.order.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.order}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupCategoryDes\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"textarea\"\r\n              placeholder=\"Enter short description\"\r\n              name=\"description\"\r\n              value={category && category.description}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.description.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.description}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Upload Image</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              className={\"form-control-file\"}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.image.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.image}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" className=\"btn-submit\">\r\n            Submit\r\n          </Button>\r\n          {name && (\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"ml-3\"\r\n              onClick={showEditCategoryAccordionStateHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport validator from \"validator\";\r\nimport { createCategory, fetchCategory } from \"../../store/category\";\r\nimport errorHandler from \"../../utils/errorHandler\";\r\nimport setAuthorizationToken from \"../../utils/setAuthorizationToken\";\r\nimport CategoryForm from \"./categoryForm\";\r\n\r\n\r\nconst formValid = ({ formErrors, rest }) => {\r\n  //to check if form fields are null or contain error\r\n  let valid = true;\r\n  let error = \"\";\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false) && (error = v);\r\n    v.length > 0 && (error = v);\r\n  });\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === null && (valid = false);\r\n  });\r\n  return { valid, error }; // valid: is it valid ; error: what is the error message\r\n};\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false, // controlls spinner state\r\n      //isEditCategory: false,\r\n      id: null, // need to pass id in edit or delete category section\r\n      name: null, // used in editCategory component to display the category name in heading\r\n      slug: null,\r\n      parentId: \"Top\",\r\n      description: null,\r\n      order: null,\r\n      image: null, // required in create, optional in edit and no need delete section\r\n      response: null, // to display response message\r\n      responseClass: \"success\", // depends on response type\r\n      showEditCategoryComponent: false, // show or hide editCategory component\r\n      formErrors: {\r\n        // for storing form feilds error on handle change\r\n        name: \"\",\r\n        parentId: \"\",\r\n        description: \"\",\r\n        order: \"\",\r\n        image: \"\",\r\n      },\r\n    };\r\n    this.selectOptionValueRef = React.createRef();\r\n  }\r\n  resetState = () => {\r\n    this.setState({\r\n      id: null,\r\n      name: null,\r\n      slug: null,\r\n      parentId: \"Top\",\r\n      description: null,\r\n      order: null,\r\n      image: null,\r\n      isEditCategory: false,\r\n    });\r\n  };\r\n  popover = (\r\n    category // function to deliver popover\r\n  ) => (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\" className=\"bg-warning text-white\">\r\n        Warning Message\r\n      </Popover.Title>\r\n      <Popover.Content>\r\n        Are you sure You want to delete category.\r\n        <Button\r\n          variant=\"danger ml-3\"\r\n          onClick={() => {\r\n            this.deleteCategory(category);\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  hideResponse = () => {\r\n    // hide the response message\r\n    this.setState({ response: null });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { formErrors, name, order, description, image } = this.state;\r\n\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value;\r\n\r\n    const rest = { name, parentId, order, description, image };\r\n\r\n    const { valid, error } = formValid({ rest, formErrors });\r\n\r\n    if (valid) {\r\n      //this.resetState();\r\n      const data = new FormData();\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key]);\r\n      });\r\n      setAuthorizationToken(this.props.auth.token);\r\n      this.setState({ loading: true });\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: \"/categories\",\r\n          method: \"post\",\r\n          data,\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: \"Successfully created Category\",\r\n            responseClass: \"success\",\r\n          });\r\n          this.props.onFetchCategoryLoader(); // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000); // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e);\r\n          this.setState({ loading: false, response, responseClass: \"danger\" });\r\n          setTimeout(this.hideResponse, 2000);\r\n        });\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          \"Please fill form corectly\" +\r\n          (error ? \" __ \" + error.toUpperCase() + \" __\" : \"\"),\r\n        responseClass: \"danger\",\r\n      });\r\n      setTimeout(this.hideResponse, 2000);\r\n    }\r\n  };\r\n\r\n  editCategorysubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      formErrors,\r\n      id,\r\n      name,\r\n      order,\r\n      description,\r\n      image,\r\n      slug,\r\n    } = this.state;\r\n    const parentId =\r\n      this.state.parentId || this.selectOptionValueRef.current.value;\r\n\r\n    const rest = image\r\n      ? { id, name, slug, parentId, order, description, image }\r\n      : { id, name, slug, parentId, order, description };\r\n\r\n    const { valid, error } = formValid({ rest, formErrors });\r\n\r\n    if (valid) {\r\n      this.resetState();\r\n      const data = new FormData();\r\n      Object.keys(rest).forEach((key) => {\r\n        rest[key] && data.append(key, rest[key]);\r\n      });\r\n\r\n      setAuthorizationToken(this.props.auth.token);\r\n      this.setState({ loading: true });\r\n\r\n      axios\r\n        .request({\r\n          baseURL: process.env.REACT_APP_SITE_URL,\r\n          url: \"/categories\",\r\n          method: \"patch\",\r\n          data,\r\n        })\r\n        .then((res) => {\r\n          this.setState({\r\n            loading: false,\r\n            response: \"Successfully Updated Category\",\r\n            responseClass: \"success\",\r\n          });\r\n          this.props.onFetchCategoryLoader(); // update the category upon creating or updating of category\r\n          setTimeout(this.hideResponse, 2000); // after 2s respones message will disaper\r\n        })\r\n        .catch((e) => {\r\n          const response = errorHandler(e);\r\n          this.setState({ loading: false, response, responseClass: \"danger\" });\r\n          setTimeout(this.hideResponse, 2000);\r\n        });\r\n      this.resetState();\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          \"Please fill form corectly\" +\r\n          (error ? \" __ \" + error.toUpperCase() + \" __\" : \"\"),\r\n        responseClass: \"danger\",\r\n      });\r\n      setTimeout(this.hideResponse, 2000);\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        formErrors.name =\r\n          validator.isLength(value, { min: 1, max: 25 }) &&\r\n          !validator.contains(value, \"_\") &&\r\n          !validator.contains(value, \"/\")\r\n            ? \"\"\r\n            : \"Category Name should not be emty, more than 25 charecter and contain '_,/'\";\r\n        break;\r\n      case \"description\":\r\n        formErrors.description = validator.isLength(value, {\r\n          min: 30,\r\n          max: 300,\r\n        })\r\n          ? \"\"\r\n          : \"Description should be minimum 30 or maximum 300 characters\";\r\n        break;\r\n      case \"parentId\":\r\n        formErrors.parentId =\r\n          value === \"Top\" || validator.isInt(value) || validator.isMongoId(value)\r\n            ? \"\"\r\n            : \"ParentId is not valid\";\r\n        break;\r\n      case \"order\":\r\n        formErrors.order = validator.isNumeric(value)\r\n          ? \"\"\r\n          : \"Order should be only number\";\r\n        break;\r\n      case \"image\":\r\n        formErrors.image = !validator.isEmpty(value)\r\n          ? \"\"\r\n          : \"Choose a valid image\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: files ? files[0] : value,\r\n    });\r\n  };\r\n\r\n  deleteCategory(category) {\r\n    setAuthorizationToken(this.props.auth.token);\r\n    this.setState({ loading: true });\r\n\r\n    axios\r\n      .delete(process.env.REACT_APP_SITE_URL + \"/categories\", {\r\n        data: { id: category.id },\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n          response: category.name + \" deleted successfully\",\r\n          responseClass: \"success\",\r\n        });\r\n        this.props.onFetchCategoryLoader();\r\n        setTimeout(this.hideResponse, 2000);\r\n      })\r\n      .catch((e) => {\r\n        const response = errorHandler(e);\r\n        this.setState({\r\n          loading: false,\r\n          response,\r\n          responseClass: \"danger\",\r\n        });\r\n        setTimeout(this.hideResponse, 2000);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader();\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    return (\r\n      <>\r\n        {this.state.loading && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )}\r\n\r\n        {this.state.response && (\r\n          <Alert\r\n            variant={this.state.responseClass}\r\n            className=\"text-center\"\r\n            style={centeredStyle}\r\n          >\r\n            {this.state.response}\r\n          </Alert>\r\n        )}\r\n\r\n        <CategoryForm\r\n          submitHandler={this.submitHandler}\r\n          handleChange={this.handleChange}\r\n          formErrors={this.state.formErrors}\r\n          categories={categories}\r\n          category={{\r\n            name: this.state.name,\r\n            parentId: this.state.parentId,\r\n            order: this.state.order,\r\n            description: this.state.description,\r\n          }}\r\n        />\r\n\r\n        <div className=\"mt-3\">\r\n          <Accordion>\r\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n              <h3>Edit Category</h3>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <div className=\"mt-2 p-2\">\r\n                {categories.map((e) => {\r\n                  return (\r\n                    <Alert variant=\"primary\">\r\n                      {e.slug}\r\n                      <Button\r\n                        className=\"ml-2\"\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            id: e.id,\r\n                            slug: e.slug,\r\n                            name: e.name,\r\n                            parentId: e.parentId,\r\n                            order: e.order,\r\n                            description: e.description,\r\n                            showEditCategoryComponent: e.slug,\r\n                          });\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <OverlayTrigger\r\n                        trigger={[\"click\"]}\r\n                        placement=\"right\"\r\n                        rootClose\r\n                        overlay={this.popover(e)}\r\n                      >\r\n                        <Button\r\n                          className=\"ml-2\"\r\n                          variant=\"danger\"\r\n                          disabled={this.state.showEditCategoryComponent}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </OverlayTrigger>\r\n                      <div>\r\n                        {this.state.showEditCategoryComponent === e.slug && (\r\n                          <CategoryForm\r\n                            submitHandler={this.editCategorysubmitHandler}\r\n                            handleChange={this.handleChange}\r\n                            loading={this.state.loading}\r\n                            formErrors={this.state.formErrors}\r\n                            categories={categories}\r\n                            name={e.name}\r\n                            //slug={e.slug}\r\n                            selectOptionValueRef={this.selectOptionValueRef}\r\n                            category={{\r\n                              name: this.state.name,\r\n                              parentId: this.state.parentId,\r\n                              order: this.state.order,\r\n                              description: this.state.description,\r\n                            }}\r\n                            showEditCategoryAccordionStateHandler={() => {\r\n                              this.setState({\r\n                                showEditCategoryComponent: false,\r\n                              });\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Alert>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Accordion.Collapse>\r\n          </Accordion>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onCreateCategoryloader: (data) => dispatch(createCategory(data)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    category: state.category,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nclass BigCard extends Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  };\r\n\r\n  startHandleChange = (date) => {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n  };\r\n  endHandleChange = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n  reportHandler = () => {\r\n    //console.log(this.state.startDate, this.state.endDate);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\" className=\"mb-3\">\r\n        <Card className=\"border-top-0\">\r\n          <Card.Header className={\"bg-dark\" + \" text-light\"}>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {this.props.header}\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                <FontAwesomeIcon\r\n                  icon={\"bars\"}\r\n                  size=\"lg\"\r\n                  className=\"text-light\"\r\n                />\r\n              </Accordion.Toggle>\r\n              {/* <span className=\"\">More..</span> */}\r\n            </div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              {this.props.showDatePicker && (\r\n                <div className=\"d-flex flex-wrap justify-content-between mb-3\">\r\n                  <div>\r\n                    <span>Start Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={\"calendar-alt\"}\r\n                      size=\"2x\"\r\n                      className=\"mx-2\"\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.startDate}\r\n                      onChange={this.startHandleChange}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"\">End Date:</span>\r\n                    <FontAwesomeIcon\r\n                      icon={\"calendar-alt\"}\r\n                      size=\"2x\"\r\n                      className=\"mx-2\"\r\n                    />\r\n                    <DatePicker\r\n                      selected={this.state.endDate}\r\n                      onChange={this.endHandleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <Button onClick={this.reportHandler}>Show</Button>\r\n                </div>\r\n              )}\r\n              <hr />\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BigCard;\r\n","import React from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"../../../exams/gallary/examCard\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\n\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\n\r\nconst ExamsFeaturedCard = () => {\r\n  const featuredExams = useSelector((state) => state.dashboard.featuredExams);\r\n\r\n  return (\r\n    <BigCard\r\n      header=\"Featured Exams\"\r\n      headerColor={\"primary\"}\r\n      showDatePicker={false}\r\n    >\r\n      <ListGroup variant=\"flush\">\r\n        {featuredExams.map((exam, index) => (\r\n          <ListGroup.Item className=\"border-0\">\r\n            {/* <ExamList\r\n              id={exam.id}\r\n              title={exam.title}\r\n              description={exam.description}\r\n              createdAt={exam.createdAt}\r\n              type={exam.type}\r\n            /> */}\r\n            <ExamCard\r\n              examId = {exam.id} \r\n              imgSrc = {process.env.REACT_APP_SITE_URL+\"/\"+ exam.categoryType[getRndInteger(0,exam.categoryType.length)].imageUrl}\r\n              title = {exam.title}\r\n              categoryType = {exam.categoryType}\r\n              description = {exam.description}\r\n              createdAt = {exam.createdAt}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default ExamsFeaturedCard;\r\n","import * as _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\n\r\nconst ReportCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat);\r\n  const examTitles = userExamStat\r\n    ? _.map(userExamStat.examTitles, \"title\")\r\n    : [];\r\n  const mark = userExamStat\r\n    ? _.map(\r\n        userExamStat.stat,\r\n        (value) => +((value.averageScore / value.totalMark) * 100).toFixed(2)\r\n      )\r\n    : [];\r\n  //const stat = userExamStat ? _.map(userExamStat.stat, \"averageScore\") : [];\r\n\r\n  const options = {\r\n    responsive: true, // Instruct chart js to respond nicely.\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 100,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  const data = {\r\n    labels: examTitles,\r\n    datasets: [\r\n      {\r\n        label: \"Marks in Percentage\", // Name the series\r\n        data: mark, // Specify the data values array\r\n        fill: false,\r\n        borderColor: \"#2196f3\", // Add custom color border (Line)\r\n        backgroundColor: \"#2196f3\", // Add custom color background (Points and Fill)\r\n        borderWidth: 1, // Specify bar border width\r\n        maxBarThickness: 35,\r\n        barPercentage: 0.5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BigCard header=\"User Reports\" headerColor={\"info\"} showDatePicker={false}>\r\n      <Bar data={data} options={options} />;\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default ReportCard;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { MdInfo } from \"react-icons/md\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport BigCard from \"../bigCard/bigCard\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SideCard = (props) => {\r\n  const userExamStat = useSelector((state) => state.dashboard.userExamStat);\r\n  const examTitles = userExamStat ? userExamStat.examTitles : [];\r\n  const stat = userExamStat ? userExamStat.stat : [];\r\n\r\n  return (\r\n    <BigCard\r\n      header=\"Recent Activity\"\r\n      headerColor={\"warning\"}\r\n      showDatePicker={false}\r\n    >\r\n      <ListGroup as=\"ul\" variant=\"flush\">\r\n        {examTitles &&\r\n          examTitles.map((exam, index) => {\r\n            if (index < 6)\r\n              return (\r\n                <ListGroup.Item as=\"li\" className=\"\">\r\n                  {/* <Badge variant=\"info\" className=\"rounded p-1\"> */}\r\n                  <MdInfo size=\"1.5em\" color=\"magenta\" />\r\n                  {/* </Badge> */}\r\n                  <Badge variant=\"light\">{exam.title}</Badge>Exam attempted{\" \"}\r\n                  <Badge variant=\"danger\">{stat[index].attemptNumbers}</Badge>{\" \"}\r\n                  times.\r\n                  <p className=\"text-muted pl-3\" style={{ fontSize: \"80%\" }}>\r\n                    last attempt{\" \"}\r\n                    {moment(stat[index].lastAttemptTime)\r\n                      .startOf(\"day\")\r\n                      .fromNow()}\r\n                  </p>\r\n                </ListGroup.Item>\r\n              );\r\n          })}\r\n      </ListGroup>\r\n    </BigCard>\r\n  );\r\n};\r\n\r\nexport default SideCard;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ExamFeaturedCard from \"./mainContentCards/examsFeaturedCard\";\r\nimport ReportCard from \"./mainContentCards/reportCard\";\r\nimport RecentActivityCard from \"./sideCards/recentActivityCard\";\r\n\r\n\r\nconst BigCards = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xl={8} lg={12}>\r\n          <ReportCard />\r\n          <hr />\r\n          <ExamFeaturedCard />\r\n          <hr />\r\n        </Col>\r\n        <Col xl={4}>\r\n          <RecentActivityCard />\r\n          <hr />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BigCards;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n//import { icon } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst icon = ({ icon, size, classes }) => (\r\n  <FontAwesomeIcon icon={icon} size={size} className={classes} />\r\n);\r\nexport default icon;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Icon from \"./icon\";\r\n\r\nconst footer = ({ color, heading, value, icon }) => {\r\n  return (\r\n    <Card.Footer className={\"bg-dark\" + \" text-light text-right\"}>\r\n      <span className=\"mr-2\">{heading}</span>\r\n      <span className=\"mr-5\">{value}</span>\r\n      <Icon icon={icon} size=\"md\" className=\"mr-2\" />\r\n    </Card.Footer>\r\n  );\r\n};\r\n\r\nexport default footer;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst cardHeader = ({ heading, color, value, id }) => (\r\n  <Card.Text className=\"text-right text-secondary\">\r\n    <h5>{heading}</h5>\r\n    <h3 className={\"text-\" + color}>{id ? <Link to ={\"exams/\"+id}> {value} </Link> : value}</h3>\r\n  </Card.Text>\r\n);\r\n\r\nexport default cardHeader;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Icon from \"./icon\";\r\n\r\n\r\nconst miniBlock = ({\r\n  heading,\r\n  color,\r\n  value,\r\n  id,\r\n  faIcon,\r\n  footerHeading,\r\n  footerValue,\r\n  faFooterIcon,\r\n}) => {\r\n  return (\r\n    <Card className=\"card-common mt-2\" >\r\n      <Card.Body>\r\n        <Row>\r\n          <Col sm={8}>\r\n            <Header heading={heading} color={color} value={value} id={id}/>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <div className=\"d-flex  align-items-center justify-content-end h-100\">\r\n              <Icon icon={faIcon} size={\"3x\"} classes={\"text-\" + color} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Footer\r\n        color={color}\r\n        heading={footerHeading}\r\n        value={footerValue}\r\n        icon={faFooterIcon}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default miniBlock;\r\n","import React from \"react\";\r\n\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\nconst rank = ({ value, footerValue }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Your Rank\"}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={\"medal\"}\r\n      footerHeading={\"Total students\"}\r\n      footerValue={footerValue}\r\n      color={\"warning\"}\r\n      faFooterIcon={\"users\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default rank;\r\n","import React from \"react\";\r\n\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\nconst result = ({ value, footerValue }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Overall Score\"}\r\n      //\r\n      value={value}\r\n      //\r\n      faIcon={\"poll\"}\r\n      footerHeading={\"Out of\"}\r\n      footerValue={footerValue}\r\n      color={\"dark\"}\r\n      faFooterIcon={\"balance-scale\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default result;\r\n","import React from \"react\";\r\n\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\nconst totalExam = ({ value, footerValue }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Total Exams\"}\r\n      value={value}\r\n      faIcon={\"file-alt\"}\r\n      footerHeading={\"Exam Taken\"}\r\n      footerValue={footerValue}\r\n      color={\"info\"}\r\n      faFooterIcon={\"file-import\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default totalExam;\r\n","import React from \"react\";\r\nimport MiniBlock from \"./miniBlock\";\r\n\r\n\r\nconst upcomingExam = ({ value, footerValue,id }) => {\r\n  return (\r\n    <MiniBlock\r\n      heading={\"Latest Exam\"}\r\n      //\r\n      value={value}\r\n      //\r\n      id={id}\r\n      faIcon={\"file\"}\r\n      footerHeading={\"Start On\"}\r\n      footerValue={footerValue}\r\n      color={\"success\"}\r\n      faFooterIcon={\"clock\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default upcomingExam;\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Rank from \"./miniInfoBlock/rank\";\r\nimport Result from \"./miniInfoBlock/result\";\r\nimport TotalExam from \"./miniInfoBlock/totalExam\";\r\nimport UpcomingExam from \"./miniInfoBlock/upcomingExam\";\r\n\r\n\r\n\r\nclass MiniCards extends Component {\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { totalExam, rank, upcomingExam, result } = this.props.userExamInfo;\r\n    return (\r\n        <div className=\"d-md-flex justify-content-around flex-wrap\">\r\n          <TotalExam value={totalExam[0]} footerValue={totalExam[1]} />\r\n          <Rank value={rank[0]} footerValue={rank[1]} />\r\n          <UpcomingExam\r\n              value={upcomingExam[0]}\r\n              id={upcomingExam[2]}\r\n              footerValue={moment(upcomingExam[1]).format(\"DD-MM-YYYY\")}\r\n            />\r\n            <Result value={result[0]} footerValue={result[1]} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userExamInfo: state.dashboard.userExamInfo,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniCards);\r\n","import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigCards from \"../../components/dashboard/bigCards/bigCards\";\r\nimport MiniCards from \"../../components/dashboard/miniCards/miniCards\";\r\nimport { dashboardStudent } from \"../../store/dashboard\";\r\n\r\nconst Dashboard = (props) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + \"/dashboard\")\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({ type: dashboardStudent.type, payload: response.data });\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  });\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <MiniCards />\r\n      <hr className=\"my-3\" />\r\n      <BigCards />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst card = ({ header, children, headerBgColor, showHeader }) => {\r\n  return (\r\n    <Card className=\"mt-5\">\r\n      {showHeader && (\r\n        <Card.Header\r\n          className={\"text-center font-weight-bold \" + \"bg-\" + headerBgColor}\r\n        >\r\n          {header}\r\n        </Card.Header>\r\n      )}\r\n      <Card.Body>{children}</Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default card;\r\n","import { Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { useFormik } from \"formik\";\r\nimport validator from \"validator\";\r\nimport { postExamProfile } from \"../../store/examPaper\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst centeredStyle = {\r\n  // styling to display server response in middle of screen\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  /* bring your own prefixes */\r\n  transform: \"translate(-50%, -50%)\",\r\n  zIndex: \"1000\",\r\n};\r\n\r\nconst ExamSpec = ({ categories }) => {\r\n  const [hideMsg, setHideMsg] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const selectedQuestionIds = useSelector((state) => state.examPaper.ids);\r\n  const successMsg = useSelector((state) => state.examPaper.success);\r\n\r\n  // const formik = useFormik({\r\n  //   initialValues: {\r\n  //     title: \"\",\r\n  //     type: \"0\",\r\n  //     categoryType: [],\r\n  //     singleQuestionMark: \"1\",\r\n  //     questionStemLength: \"0.2\",\r\n  //     penaltyMark: \"0\",\r\n  //     timeLimit: \"40\",\r\n  //   },\r\n  //   validate,\r\n  //   onSubmit: onSubmitHandler(selectedQuestionIds, dispatch),\r\n  // });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title: \"\",\r\n        type: \"0\",\r\n        categoryType: [],\r\n        singleQuestionMark: \"1\",\r\n        questionStemLength: \"5\",\r\n        penaltyMark: \"0\",\r\n        timeLimit: \"40\",\r\n      }}\r\n      validate={validate}\r\n      onSubmit={onSubmitHandler(selectedQuestionIds, dispatch, setHideMsg)}\r\n    >\r\n      {({ errors, handleChange, handleSubmit }) => (\r\n        <ExamCard header=\"Exam Specification\" showHeader={true}>\r\n          {hideMsg && successMsg && (\r\n            <Alert //\r\n              variant={\"success\"}\r\n              className=\"text-center\"\r\n              style={centeredStyle}\r\n              onClose={() => setHideMsg(false)}\r\n              dismissible\r\n            >\r\n              {successMsg.title +\r\n                \" --->  \" +\r\n                successMsg.description +\r\n                \" --->  \" +\r\n                successMsg.questions.length +\r\n                \" questions\"}\r\n            </Alert>\r\n          )}\r\n          <Form>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter title\"\r\n                name=\"title\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.title ? (\r\n              <div className=\"alert alert-danger\">{errors.title}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"type\">\r\n              <Form.Label>Exam Type</Form.Label>\r\n              <Form.Control as=\"select\" name=\"type\" onChange={handleChange}>\r\n                <option value=\"0\">Assignment</option>\r\n                <option value=\"1\">Weekly</option>\r\n                <option value=\"2\">Monthly</option>\r\n                <option value=\"3\">Assesment</option>\r\n                <option value=\"4\">Term</option>\r\n                <option value=\"5\">Test</option>\r\n                <option value=\"0\">Final</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"categoryType\">\r\n              <Form.Label>Category Type</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                multiple\r\n                name=\"categoryType\"\r\n                onChange={handleChange}\r\n                //value={categories[0] && categories[0].id}\r\n                // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n              >\r\n                // eslint-disable-next-line react/prop-types //\r\n                eslint-disable-next-line react/prop-types\r\n                {categories.map((value) => {\r\n                  //console.log(categories[0].id);\r\n                  let categorySlug = value.slug.replace(/_/g, \" / \");\r\n                  return <option value={value.id}>{categorySlug}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"textarea\"\r\n                placeholder=\"description\"\r\n                name=\"description\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.description ? (\r\n              <div className=\"alert alert-danger\">{errors.description}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"singleQuestionMark\">\r\n              <Form.Label>Single Question Mark</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter single Question Mark\"\r\n                name=\"singleQuestionMark\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.singleQuestionMark ? (\r\n              <div className=\"alert alert-danger\">\r\n                {errors.singleQuestionMark}\r\n              </div>\r\n            ) : null}\r\n            <Form.Group controlId=\"questionStemLength\">\r\n              <Form.Label>Question Stem Length</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter question stem length\"\r\n                name=\"questionStemLength\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.questionStemLength ? (\r\n              <div className=\"alert alert-danger\">{errors.questionStemLength}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"penaltyMark\">\r\n              <Form.Label>Penalty Mark</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter penalty Mark\"\r\n                name=\"penaltyMark\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.penaltyMark ? (\r\n              <div className=\"alert alert-danger\">{errors.penaltyMark}</div>\r\n            ) : null}\r\n            <Form.Group controlId=\"timeLimit\">\r\n              <Form.Label>Time Limit(Minutes)</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Time Limit\"\r\n                name=\"timeLimit\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            {errors.timeLimit ? (\r\n              <div className=\"alert alert-danger\">{errors.timeLimit}</div>\r\n            ) : null}\r\n          </Form>\r\n          <Button onClick={handleSubmit}>Submit</Button>\r\n        </ExamCard>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ExamSpec;\r\n\r\nfunction onSubmitHandler(selectedQuestionIds, dispatch, setHideMsg) {\r\n  return (values) => {\r\n    if (selectedQuestionIds.length > 0) {\r\n      setHideMsg(true);\r\n      dispatch(postExamProfile(values, selectedQuestionIds));\r\n    } else {\r\n      alert(\"Their is no selected Question\");\r\n    }\r\n  };\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  } else if (!validator.isLength(values.title, { min: 3, max: 20 })) {\r\n    errors.title = \"Title should be between 3-20 characters\";\r\n  }\r\n  if (!values.description) {\r\n    errors.description = \"Required\";\r\n  } else if (!validator.isLength(values.description, { min: 3, max: 50 })) {\r\n    errors.description = \"Description should be between 3-50 characters\";\r\n  }\r\n  if (!values.singleQuestionMark) {\r\n    errors.singleQuestionMark = \"Required\";\r\n  } else if (!validator.isInt(values.singleQuestionMark)) {\r\n    errors.singleQuestionMark = \"Single Question Mark should be Integer value\";\r\n  }\r\n  if (!values.questionStemLength) {\r\n    errors.questionStemLength = \"Required\";\r\n  } else if (!validator.isNumeric(values.questionStemLength)) {\r\n    errors.questionStemLength = \"Question stem length should be Numeric value\";\r\n  }\r\n  if (!values.penaltyMark) {\r\n    errors.penaltyMark = \"Required\";\r\n  } else if (!validator.isNumeric(values.penaltyMark)) {\r\n    errors.penaltyMark = \"penalty Mark should be Numeric value\";\r\n  }\r\n  if (!values.timeLimit) {\r\n    errors.timeLimit = \"Required\";\r\n  } else if (!validator.isInt(values.timeLimit)) {\r\n    errors.timeLimit = \"Timelimit Mark should be Interger Value\";\r\n  }\r\n  return errors;\r\n};\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst filter = ({ handleChange, categories }) => {\r\n  return (\r\n    <ExamCard header=\"Filter\" showHeader={true}>\r\n      <Form.Group controlId=\"formGridParent\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Form.Control as=\"select\" defaultValue=\"top\" name=\"categoryId\" onChange={handleChange}>\r\n          <option  disabled value=\"top\">Top...</option>\r\n          {categories.map((value) => {\r\n            let categorySlug = value.slug.replace(/_/g, \" / \");\r\n            return <option value={value.id}>{categorySlug}</option>;\r\n          })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </ExamCard>\r\n  );\r\n};\r\n\r\nexport default filter;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ExamCard from \"./card/card\";\r\n\r\nconst SelectedQuestionsPreview = ({\r\n  toogleChecked,\r\n  checkedQuestionIds,\r\n  checkedQuestions,\r\n}) => {\r\n  const selectedQuestions = useSelector((state) => state.examPaper.questions);\r\n\r\n  return (\r\n    <ExamCard header=\"Selected Questions Preview\" showHeader={false}>\r\n      {\r\n        <ListGroup className=\"my-2\">\r\n          {selectedQuestions.map((question, index) => (\r\n            <ListGroup.Item key={index} variant={\"success\"}>\r\n              {/* <Form.Check\r\n                    inline\r\n                    type=\"checkbox\"\r\n                    value={question.id}\r\n                    onChange={this.checkHandleChange}\r\n                    //checked={this.state.isChecked}\r\n                    //name=\"questions\"\r\n                    //ref={this.inputRef}\r\n                  /> */}\r\n              {`${index + 1}. ${question.title} --> ${question.qText}`}\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      }\r\n    </ExamCard>\r\n  );\r\n};\r\n\r\nexport default SelectedQuestionsPreview;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\n\r\nconst pagination = ({ itemsCount, pageSize, onPageHandler, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const items = [];\r\n  for (let number = 1; number <= pageCount; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        onClick={() => {\r\n          onPageHandler(number);\r\n        }}\r\n        active={number === currentPage}\r\n        className=\"my-2 mr-2 text-center\"\r\n        style={{width:\"40px\",height:'30px'}}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  return <Pagination className=\"justify-content-start align-content-start flex-wrap\" >{items}</Pagination>;\r\n};\r\n\r\nexport default pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Alert, Button, Col, Form, FormCheck, ListGroup, Modal, Row } from \"react-bootstrap\";\r\nimport { FaShoppingBasket } from 'react-icons/fa';\r\nimport { connect } from \"react-redux\";\r\nimport ExamSpec from \"../../components/examBuilder/examSpec\";\r\nimport Filter from \"../../components/examBuilder/filter\";\r\nimport SelectedQuestionsPreview from \"../../components/examBuilder/selectedQuestionsPreview\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport { fetchCategory } from \"../../store/category\";\r\nimport { selectedQuestionsLoader } from \"../../store/examPaper\";\r\nimport {\r\n  getQuestionByCategoryLoader, getQuestionLoader\r\n} from \"../../store/question\";\r\nimport { paginate } from \"../../utils/paginate\";\r\n\r\n\r\nclass ExamPaper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.inputRef = React.createRef(null);\r\n    this.state = {\r\n      show: false,\r\n      id: null,\r\n      input: React.createRef(),\r\n      action: null,\r\n      //toogle: false,\r\n      checkedQuestionIds: [],\r\n      checkedQuestions: [],\r\n      //toogleChecked: false,\r\n      pageSize: 10,\r\n      currentPage: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader();\r\n    this.props.onGetQuestionLoader();\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  checkHandleChange = (e) => {\r\n    const isChecked = e.target.checked;\r\n    const value = e.target.value;\r\n    const [title, qText] = e.target.name.split(\"*_*\");\r\n    // this.setState({\r\n    //   checkedQuestionIds: [...this.state.checkedQuestionIds, e.target.value],\r\n    // });\r\n\r\n    this.setState((preState) => {\r\n      if (isChecked) {\r\n        preState.checkedQuestionIds = [...preState.checkedQuestionIds, value];\r\n        preState.checkedQuestions = [\r\n          ...preState.checkedQuestions,\r\n          { title, qText },\r\n        ];\r\n        //preState.checkedQuestions.push({ title, qText });\r\n      } else {\r\n        preState.checkedQuestionIds = preState.checkedQuestionIds.filter(\r\n          (v) => v !== value\r\n        );\r\n        preState.checkedQuestions = preState.checkedQuestions.filter(\r\n          (v) => v.title !== title\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  actionHandleChange = (e)=>{\r\n    e = e.target;\r\n    const v = e.value;\r\n\r\n    switch(v){\r\n      case 'mAll':\r\n        this.setState({\r\n          action: 'mAll',\r\n          checkedQuestionIds: this.props.question.questions.map(e=>e.id),\r\n          checkedQuestions: this.props.question.questions\r\n      \r\n      });\r\n        break;\r\n      case 'uAll':\r\n        this.setState({\r\n          action: 'uAll',\r\n          checkedQuestionIds: [],\r\n          checkedQuestions: []\r\n      });\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    e = e.target;\r\n    this.props.onGetQuestionByCategoryLoader(e.value);\r\n    this.setState({\r\n      id: e.value,\r\n    });\r\n  };\r\n  onPageHandler = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const questions = paginate(\r\n      this.props.question.questions,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n    return (\r\n      <>\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Selected Questions Preview</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <SelectedQuestionsPreview\r\n              //toogleChecked={this.toogleChecked}\r\n              checkedQuestions={this.state.checkedQuestions}\r\n              checkedQuestionIds={this.state.checkedQuestionIds}\r\n            />\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <div style={{position:'fixed', bottom: '50px', right: '20px', width: '50px', height: '35px', zIndex:'99'}}>\r\n          <Button onClick={this.handleShow} title=\"Questions Busket\">\r\n            <FaShoppingBasket size={'2rem'}/>\r\n          </Button>\r\n          <span className=\"bg-danger text-white p-1 text-center\" style={{position: 'absolute', top: '-15px' , right: '-10px'}}>\r\n            {this.props.examPaper.questions.length}\r\n          </span>\r\n          \r\n        </div>\r\n\r\n        <Row>\r\n          <Col lg={4}>\r\n            <Alert variant={\"primary\"} className=\"text-center mt-3\">\r\n              Total number of Question is :\r\n              {this.props.question.questions.length}\r\n            </Alert>\r\n            \r\n            <Filter\r\n              handleChange={this.handleChange}\r\n              categories={this.props.category.categories}\r\n            />\r\n            <ExamSpec categories={this.props.category.categories} />\r\n            {/* <SelectedQuestionsPreview\r\n              //toogleChecked={this.toogleChecked}\r\n              checkedQuestions={this.state.checkedQuestions}\r\n              checkedQuestionIds={this.state.checkedQuestionIds}\r\n            /> */}\r\n          </Col>\r\n          <Col lg={8}>\r\n            {\r\n              <FormCheck>\r\n                <ListGroup className=\"my-2\">\r\n                  {questions.length < 1 && <p className=\"text-danger\">No Question in this category.</p>}\r\n                  {questions.map((question, index) => (\r\n                    <ListGroup.Item\r\n                      key={question.id}\r\n                      variant={index % 2 === 0 ? \"dark\" : \"light\"}\r\n                    >\r\n                      { this.state.action === null &&\r\n                        <Form.Check\r\n                        ref={this.state.input}\r\n                          inline\r\n                          type=\"checkbox\"\r\n                          value={question.id}\r\n                          onChange={this.checkHandleChange}\r\n                          name={question.title + \"*_*\" + question.qText}\r\n                          defaultChecked={this.state.checkedQuestionIds.includes(\r\n                            question.id\r\n                          )}\r\n                        />\r\n                      }\r\n                \r\n\r\n                      {this.state.action === 'mAll' &&\r\n                        <Form.Check\r\n                        ref={this.state.input}\r\n                          inline\r\n                          type=\"checkbox\"\r\n                          checked={true}\r\n                          value={question.id}\r\n                          onChange={this.checkHandleChange}\r\n                          name={question.title + \"*_*\" + question.qText}\r\n                          defaultChecked={this.state.checkedQuestionIds.includes(\r\n                            question.id\r\n                          )}\r\n                        /> }\r\n\r\n                      {this.state.action === 'uAll' &&\r\n                        <Form.Check\r\n                        ref={this.state.input}\r\n                          inline\r\n                          type=\"checkbox\"\r\n                          checked={false}\r\n                          value={question.id}\r\n                          onChange={this.checkHandleChange}\r\n                          name={question.title + \"*_*\" + question.qText}\r\n                          defaultChecked={this.state.checkedQuestionIds.includes(\r\n                            question.id\r\n                          )}\r\n                        />\r\n                      }\r\n                      \r\n                      {`${index + 1}. ${question.title} --> ${question.qText}`}\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </FormCheck>\r\n            }\r\n            <Pagination\r\n              itemsCount={this.props.question.questions.length}\r\n              pageSize={this.state.pageSize}\r\n              currentPage={this.state.currentPage}\r\n              onPageHandler={this.onPageHandler}\r\n            />\r\n\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  //this.setState({ toogleChecked: !this.state.toogleChecked });\r\n                  this.props.onSelectedQuestionsLoader(\r\n                    this.state.checkedQuestions,\r\n                    this.state.checkedQuestionIds\r\n                  );\r\n                }}\r\n                className=\"mr-5 mb-2 mb-sm-0\"\r\n              >\r\n                Add to Preview Cart\r\n              </Button>\r\n              {/* onChange={actionHandleChange} */}\r\n              <Form.Group controlId=\"formGridParent\">\r\n                <Form.Label>Actions</Form.Label>\r\n                <Form.Control as=\"select\" name=\"action\" onChange={this.actionHandleChange}  >\r\n                <option>Select...</option>\r\n                  <option value=\"mAll\">Mark All</option>\r\n                  <option value=\"uAll\">UnMark All</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onGetQuestionLoader: () => dispatch(getQuestionLoader()),\r\n    onGetQuestionByCategoryLoader: (id) =>\r\n      dispatch(getQuestionByCategoryLoader(id)),\r\n    onSelectedQuestionsLoader: (questions, ids) =>\r\n      dispatch(selectedQuestionsLoader(questions, ids)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    question: state.question,\r\n    category: state.category,\r\n    api: state.api,\r\n    examPaper: state.examPaper,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamPaper);\r\n","import React, { Component } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport GallaryCard from \"../../components/exams/gallary/gallaryCard\";\r\nimport { getAllExamsLoader, resetExamResult } from \"../../store/exams\";\r\n\r\n\r\nclass ExamLists extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.onGetAllExamsLoader();\r\n    this.props.onResetExamResult();\r\n  }\r\n  type = [\r\n    \"Assignment\",\r\n    \"Weekly\",\r\n    \"Monthly\",\r\n    \"Assesment\",\r\n    \"Term\",\r\n    \"Test\",\r\n    \"Final\",\r\n  ];\r\n  render() {\r\n    return (\r\n      <>\r\n      {this.props.exams.exams.length < 1 && (\r\n          <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n          ></Spinner>\r\n        )}\r\n        {Object.keys(this.props.exams.exams).map(key=> this.props.exams.exams[key] && <GallaryCard title={key} exams={this.props.exams.exams[key]} />)}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetAllExamsLoader: () => dispatch(getAllExamsLoader()),\r\n    onResetExamResult: () => dispatch({ type: resetExamResult.type }),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams,\r\n    //   auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExamLists);\r\n","import React from \"react\";\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\nconst questionStemView = ({\r\n  id,\r\n  qType,\r\n  stem,\r\n  index,\r\n  handleChange,\r\n  defaultChecked,\r\n}) => {\r\n  return (\r\n    <Row className=\"pr-3 pl-2\">\r\n      <Col lg={10}>\r\n        <div>{index + \". \" + stem}</div>\r\n      </Col>\r\n      <Col lg={2}>\r\n        <Form.Group as={Col} controlId=\"formGroupQuestionStemAnswer\">\r\n          {qType === \"matrix\" ? (\r\n            <>\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"True\"\r\n                name={id + \"_\" + index}\r\n                id=\"formHorizontalRadios1\"\r\n                value={1}\r\n                defaultChecked={defaultChecked === \"1\"}\r\n                onChange={handleChange}\r\n                className=\"mb-0\"\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"False\"\r\n                name={id + \"_\" + index}\r\n                id=\"formHorizontalRadios2\"\r\n                value={0}\r\n                defaultChecked={defaultChecked === \"0\"}\r\n                onChange={handleChange}\r\n                className=\"mb-0\"\r\n              />\r\n            </>\r\n          ) : (\r\n            <Form.Check\r\n              type=\"radio\"\r\n              name={id}\r\n              id=\"formHorizontalRadios1\"\r\n              value={index}\r\n              defaultChecked={defaultChecked === index}\r\n              onChange={handleChange}\r\n              className=\"mb-0\"\r\n            />\r\n          )}\r\n        </Form.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default questionStemView;\r\n","import React from \"react\";\r\nimport {\r\n    ListGroup\r\n} from \"react-bootstrap\";\r\nimport Stem from \"./stem\";\r\n\r\n\r\n\r\nconst QuestionForm = ({ question, handleChange, defaultChecked }) => {\r\n  return (\r\n    <ListGroup as=\"ul\" className=\"mt-3\">\r\n      <ListGroup.Item as=\"li\" active>\r\n        {question.qText}\r\n      </ListGroup.Item>\r\n\r\n      {question.stems.map((stem, index) => (\r\n        <ListGroup.Item as=\"li\" key={index}>\r\n          <Stem\r\n            qType={question.qType}\r\n            stem={stem}\r\n            index={index + 1}\r\n            id={question.id}\r\n            handleChange={handleChange}\r\n            defaultChecked={defaultChecked ? defaultChecked[index] : null}\r\n          />\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst subNavBar = (props) => {\r\n  const pages = props.isAuthenticated\r\n    ? [\"dashboard\",\"exams\" ,\"logout\"]\r\n    : [\"exams\",\"signup\", \"login\"];\r\n\r\n  return (\r\n        <Nav className=\"\">\r\n          <Nav.Item as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                to={{ pathname: \"/\"}}\r\n                className=\"nav-link\"\r\n              >\r\n                {\"Home\".toUpperCase()}\r\n              </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                to={{ pathname: \"/contact\" }}\r\n                className=\"nav-link\"\r\n              >\r\n                {\"Contact\".toUpperCase()}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          {pages.map((value) => (\r\n            <Nav.Item key={value} as=\"li\" className=\"mr-3\">\r\n              <NavLink\r\n                // href={\"/\" + value}\r\n                to={{ pathname: \"/\" + value }}\r\n                className=\"nav-link\"\r\n              >\r\n                {value.toUpperCase()}\r\n              </NavLink>\r\n            </Nav.Item>\r\n          ))}\r\n          {/* </Scrollspy> */}\r\n        </Nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(subNavBar);\r\n","import React, { Component } from \"react\";\r\nimport { Alert, Badge, Button, Col, Modal, Row, Spinner } from \"react-bootstrap\";\r\nimport Countdown from \"react-countdown\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport QuestionView from \"../../components/exams/paper/question/question\";\r\nimport SubNavBar from \"../../components/navbar/subNavBar\";\r\nimport PaginationCustom from \"../../components/pagination/pagination\";\r\nimport { getExamByIdLoader, getFreeExamByIdLoader, postExamByIdLoader, postFreeExamByIdLoader, resetExamError } from \"../../store/exams\";\r\nimport { paginate } from \"../../utils/paginate\";\r\n\r\n\r\n// Random component\r\nconst Completionist = () => <span className=\"text-danger\">Your Time is Finished</span>;\r\n \r\n// Renderer callback with condition\r\nconst renderer = ({ hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    // Render a completed state\r\n    return <Completionist />;\r\n  } else {\r\n    // Render a countdown\r\n    return <span>\r\n      <Badge variant={(hours < 1 & minutes <5) ? \"danger\" : \"success\"} style={{fontSize:\"2rem\"}}>{hours + \" H\"}</Badge>\r\n      <Badge variant=\"light\" style={{fontSize:\"1.5rem\"}}>:</Badge>\r\n      <Badge variant={(hours < 1 & minutes <5) ? \"danger\" : \"success\"} style={{fontSize:\"2rem\"}}>{minutes + \" M\"}</Badge>\r\n      <Badge variant=\"light\" style={{fontSize:\"1.5rem\"}}>:</Badge>\r\n      <Badge variant={(hours < 1 & minutes <5) ? \"danger\" : \"success\"} style={{fontSize:\"2rem\"}}>{seconds + \" S\"}</Badge>\r\n    </span>;\r\n  }\r\n};\r\n\r\n\r\nclass ExamTaker extends Component {\r\n\r\n  state = {\r\n    loading: false,\r\n    //For Pagination\r\n    pageSize: 1,\r\n    currentPage: 1,\r\n    //For Main Answer Sheet React CountDown\r\n    date: Date.now(),\r\n    //use in ending exam\r\n    timeExpired: false,\r\n    modalShow: false,\r\n  };\r\n\r\n  timeTakenToComplete= 0;\r\n  answers = [];\r\n  answerIds = new Set();\r\n\r\n  modalShow = ()=>{\r\n    this.setState({modalShow:true})\r\n  }\r\n  modalHide = ()=>{\r\n    this.setState({modalShow:false})\r\n  }\r\n\r\n//For paination\r\n  onPageHandler = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    if (name.includes(\"_\")) {\r\n      const [id, index] = name.split(\"_\");\r\n      this.setState((preState) => {\r\n        if (!preState[id]) preState[id] = [];\r\n        preState[id][index - 1] = value;\r\n        this.answerIds.add(id);\r\n      });\r\n    } else {\r\n      this.setState((preState) => {\r\n        preState[name] = [value];\r\n        this.answerIds.add(name);\r\n      });\r\n    }\r\n  };\r\n\r\n// for submitting Answer Sheet\r\n  onSubmitHandler = () => {\r\n    this.setState({loading: true});\r\n\r\n    this.answerIds.forEach((id) => {\r\n      this.answers.push({\r\n        id: id,\r\n        stems: this.state[id],\r\n        type: _.find(\r\n          this.props.exams.questions,\r\n          (o) => o.id == id\r\n        ).qType,\r\n      });\r\n    });\r\n    if(this.props.free){\r\n      this.props.onPostFreeExamByIdLoader({\r\n        examId: this.props.match.params.id,\r\n        timeTakenToComplete: (this.timeTakenToComplete / 60).toFixed(4),\r\n        answers: this.answers,\r\n        questionIdsByOrder: this.props.exams.questionIdsByOrder,\r\n      });\r\n    }\r\n    else{\r\n      this.props.onPostExamByIdLoader({\r\n        examId: this.props.match.params.id,\r\n        timeTakenToComplete: Math.ceil (this.timeTakenToComplete / 60).toFixed(4),\r\n        answers: this.answers,\r\n        questionIdsByOrder: this.props.exams.questionIdsByOrder,\r\n      });\r\n    }\r\n   }\r\n\r\n  componentDidMount() {\r\n\r\n    this.props.onResetExamLoader();\r\n    if(this.props.auth.token){\r\n      this.props.onGetExamByIdLoader(this.props.match.params.id);\r\n    } else {\r\n      this.props.onGetFreeExamByIdLoader(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    const questions = paginate(\r\n      this.props.exams.questions,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {(this.props.exams.examResult || this.props.exams.error) && (\r\n          <Redirect to=\"/result\" />\r\n        )}\r\n\r\n          { this.state.loading && (<Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"dark\"\r\n            className=\"content-center\"\r\n            \r\n          >\r\n            \r\n          </Spinner>)}\r\n\r\n        {/* {(this.props.exams.examError) && (\r\n          <Redirect to={{\r\n            pathname: \"/error\", \r\n            state: {message:this.props.exams.examError}\r\n          }} />\r\n          \r\n        )} */}\r\n\r\n        {/* Modal tests are you want submit or time expired*/}\r\n        <Modal show={this.state.modalShow} onHide={this.modalHide}>\r\n          {\r\n          this.state.timeExpired ?  \r\n          <> \r\n            <Modal.Header>\r\n            <Modal.Title className=\"text-danger\">Time Expired</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div>\r\n                <p className=\"lead\">You will Taken To Result Page.</p>\r\n                <Countdown\r\n                  date={ Date.now() + 5 * 1000}\r\n                  renderer = {({seconds}) => \r\n                  <p className=\"text-center text-danger\" style={{fontSize:\"2rem\"}}>{seconds}</p>              \r\n                }\r\n                onComplete={this.onSubmitHandler}  \r\n                />\r\n              </div>\r\n            </Modal.Body>\r\n          </>\r\n          :\r\n          <> \r\n          <Modal.Header closeButton>\r\n           <Modal.Title>Submit Answer Sheet</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div>\r\n                <p className=\"lead\">Are You Sure ? You will Taken To Result Page.</p>\r\n                <Countdown\r\n                  date={ Date.now() + 5 * 1000}\r\n                  renderer = {({seconds}) => \r\n                  <p className=\"text-center text-danger\" style={{fontSize:\"2rem\"}}>{seconds}</p>              \r\n                }\r\n                onComplete={this.onSubmitHandler}  \r\n                />\r\n              </div>\r\n            </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.modalHide}>\r\n              Go Back\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.onSubmitHandler}>\r\n              Yes, I Want.\r\n            </Button>\r\n          </Modal.Footer>\r\n          </>\r\n          }\r\n        </Modal>\r\n        \r\n          {this.props.exams.timeLimit &&\r\n          <div className=\"text-dark text-center mt-1\"> \r\n            <Countdown\r\n                date={ this.state.date + this.props.exams.timeLimit * 60 * 1000}\r\n                renderer={renderer}\r\n                onTick={()=>{\r\n                  this.timeTakenToComplete++\r\n                }}\r\n                onComplete={() => {\r\n                  this.setState({timeExpired:true, modalShow: true})\r\n                }}\r\n              />\r\n          </div>\r\n          }\r\n        {this.props.exams.examError ? <> <Alert variant=\"danger\" className=\"text-center mt-5\">\r\n          <h2>{this.props.exams.examError}</h2>\r\n          <h4>Possible Solution</h4>\r\n          <p>\r\n            You may not be logged in. So you can not participate exams other than free.\r\n            So login or participate free exam only.\r\n          </p>\r\n        </Alert> \r\n        <SubNavBar />\r\n        </>\r\n        :\r\n        <Row className=\"\">\r\n          <Col lg={9}>\r\n            {questions.map((question) => (\r\n              <QuestionView\r\n                key={question.id}\r\n                question={question}\r\n                handleChange={this.onHandleChange}\r\n                defaultChecked={\r\n                  this.state[question.id] ? this.state[question.id] : null\r\n                }\r\n              />\r\n            ))}\r\n            <div className=\"mt-2 d-flex justify-content-center\">\r\n              <Pagination\r\n                activePage={this.state.currentPage}\r\n                itemsCountPerPage={1}\r\n                totalItemsCount={this.props.exams.questions.length}\r\n                pageRangeDisplayed={1}\r\n                onChange={this.onPageHandler}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n                prevPageText=\"Previous\"\r\n                nextPageText=\"Next\"\r\n              />\r\n              <Button\r\n              onClick={this.modalShow}\r\n              className=\"mb-3 ml-5 btn-md\"\r\n              >\r\n                Submit Answer Sheet\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col lg={3} className=\"mt-3\">\r\n            <PaginationCustom\r\n              itemsCount={this.props.exams.questions.length}\r\n              pageSize={this.state.pageSize}\r\n              currentPage={this.state.currentPage}\r\n              onPageHandler={this.onPageHandler}\r\n            />\r\n          </Col>\r\n        </Row>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetExamByIdLoader: (id) => dispatch(getExamByIdLoader(id)),\r\n    onGetFreeExamByIdLoader: (id) => dispatch(getFreeExamByIdLoader(id)),\r\n    onPostExamByIdLoader: (data) => dispatch(postExamByIdLoader(data)),\r\n    onPostFreeExamByIdLoader: (data) => dispatch(postFreeExamByIdLoader(data)),\r\n    onResetExamLoader: ()=> dispatch({type: resetExamError.type})\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams,\r\n    auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ExamTaker));\r\n","import React from \"react\";\r\nimport { Accordion, Button, Card, Form } from \"react-bootstrap\";\r\n\r\nconst questionUpload = ({\r\n  categories,\r\n  categoryRef,\r\n  handleChange,\r\n  submitHandler,\r\n  formErrors,\r\n}) => {\r\n  return (\r\n    <Accordion className=\"mt-3\">\r\n      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n        <h3> Upload by Excel file</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Form className=\"mt-2\" onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formGridCategory\">\r\n            <Form.Label>Question Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"category\"\r\n              onChange={handleChange}\r\n              ref={categoryRef}\r\n            >\r\n              {/* <option value=\"Top\">Top</option> */}\r\n              {categories.map((value, index) => {\r\n                let CategorySlug = value.slug.replace(/_/g, \" / \");\r\n                return (\r\n                  <option\r\n                    key={index}\r\n                    value={value.id}\r\n                    //selected={Question && value.id === Question.parentId}\r\n                  >\r\n                    {CategorySlug}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.category.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.category}</span>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Upload an excel file</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              className={\"form-control-file\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" className=\"btn-submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default questionUpload;\r\n","import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  Spinner,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  InputGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nconst questionStemView = ({ qType, stem, index, handleChange }) => {\r\n  return (\r\n    <Row className=\"pr-3 pl-2 mt-1\">\r\n      <Col lg={5}>\r\n        <Form.Group controlId=\"formGroupQuestionStem\">\r\n          <InputGroup className=\"mb-2\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>{index}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"stem...\"\r\n              name={\"qStem\" + index}\r\n              value={stem[\"qStem\" + index]}\r\n              // value={Question ? Question.title : null}\r\n              onChange={handleChange}\r\n            />\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Col>\r\n      <Col lg={2}>\r\n        <Form.Group as={Col} controlId=\"formGroupQuestionStemAnswer\">\r\n          {qType === \"matrix\" ? (\r\n            <>\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"True\"\r\n                name={\"aStem\" + index}\r\n                id=\"formHorizontalRadios1\"\r\n                value={1}\r\n                selected={stem[\"aStem\" + index] === \"1\"}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"False\"\r\n                name={\"aStem\" + index}\r\n                id=\"formHorizontalRadios2\"\r\n                value={0}\r\n                selected={stem[\"aStem\" + index] === \"0\"}\r\n                onChange={handleChange}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Form.Check\r\n              type=\"radio\"\r\n              name={\"aStemSba\"}\r\n              id=\"formHorizontalRadios1\"\r\n              value={index}\r\n              selected={stem[\"aStemSba\"] === index.toString()}\r\n              onChange={handleChange}\r\n            />\r\n          )}\r\n        </Form.Group>\r\n      </Col>\r\n      <Col lg={5}>\r\n        <Form.Group as={Col} controlId=\"formGroupQuestionStemFeedBack\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"FeedBack\"\r\n            name={\"fbStem\" + index}\r\n            value={stem[\"fbStem\" + index]}\r\n            // value={Question ? Question.title : null}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default questionStemView;\r\n","import React, { useState } from \"react\";\r\nimport { Accordion, Button, Card, Form } from \"react-bootstrap\";\r\nimport Stems from \"./questionStem.view\";\r\n\r\n\r\n\r\nconst QuestionForm = (props) => {\r\n  const {\r\n    submitHandler,\r\n    handleChange,\r\n    formErrors,\r\n    categories,\r\n    title,\r\n    categoryRef,\r\n    question,\r\n    showEditQuestionAccordionStateHandler,\r\n  } = props;\r\n  const [stemAmount, setStemAmount] = useState([1, 2, 3, 4, 5]);\r\n  return (\r\n    <Accordion className=\"mt-3\" defaultActiveKey={title && \"0\"}>\r\n      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n        <h3> {title ? \"Edit \" + title : \"Create A New\"} Question</h3>\r\n      </Accordion.Toggle>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Form className=\"mt-2\" onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formGroupQuestionTitle\">\r\n            <Form.Label>Question Title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Question Title\"\r\n              name=\"title\"\r\n              value={question.title}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.title.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.title}</span>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridCategory\">\r\n            <Form.Label>Question Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"category\"\r\n              defaultValue={question.category}\r\n              onChange={handleChange}\r\n              ref={categoryRef}\r\n            >\r\n              {/* <option value=\"Top\">Top</option> */}\r\n              {categories.map((value, index) => {\r\n                let CategorySlug = value.slug.replace(/_/g, \" / \");\r\n                return (\r\n                  <option\r\n                    key={index}\r\n                    value={value.id}\r\n                    //selected={Question && value.id === Question.parentId}\r\n                  >\r\n                    {CategorySlug}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n            {formErrors.category.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.category}</span>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGridQType\">\r\n            <Form.Label>Question Category</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"qType\"\r\n              value={question.qType}\r\n              onChange={handleChange}\r\n              // ref={selectOptionValueRef}\r\n            >\r\n              <option value=\"matrix\">Matrix</option>\r\n              <option value=\"sba\">SBA</option>\r\n            </Form.Control>\r\n            {formErrors.category.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.category}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupQuestionQText\">\r\n            <Form.Label>Question Text</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Question text\"\r\n              name=\"qText\"\r\n              value={question.qText}\r\n              // value={Question ? Question.title : null}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.title.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.qText}</span>\r\n            )}\r\n          </Form.Group>\r\n          <div>\r\n            {stemAmount.map((i) => (\r\n              <Stems\r\n                key={\"stem-\" + i}\r\n                index={i}\r\n                stem={question.stem}\r\n                qType={question.qType}\r\n                handleChange={handleChange}\r\n              />\r\n            ))}\r\n            {formErrors.stem.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.stem}</span>\r\n            )}\r\n            {/* <Button\r\n              onClick={() => {\r\n                setStemAmount((prevStemAmount) => [\r\n                  ...prevStemAmount,\r\n                  prevStemAmount.length + 1,\r\n                ]);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setStemAmount((prevStemAmount) =>\r\n                  prevStemAmount.filter((v, i, arr) => v !== arr.length)\r\n                );\r\n              }}\r\n            >\r\n              Delete\r\n            </Button> */}\r\n          </div>\r\n          {/* <Form.Group controlId=\"formGroupQuestionOrder\">\r\n            <Form.Label>Question Order</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"order\"\r\n              value={Question && Question.order}\r\n              placeholder=\"e.g. 5 <..Order makes priority. Lower value higher order..>\"\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.order.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.order}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGroupQuestionDes\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"textarea\"\r\n              placeholder=\"Enter short description\"\r\n              name=\"description\"\r\n              value={Question && Question.description}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.description.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.description}</span>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Upload Image</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              className={\"form-control-file\"}\r\n              onChange={handleChange}\r\n            />\r\n            {formErrors.image.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.image}</span>\r\n            )}\r\n          </Form.Group> */}\r\n\r\n          <Button type=\"submit\" className=\"btn-submit\">\r\n            Submit\r\n          </Button>\r\n          {title && (\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"ml-3\"\r\n              onClick={showEditQuestionAccordionStateHandler}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </Accordion.Collapse>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Alert, Badge, Button, ListGroup, Toast } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport validator from \"validator\";\r\nimport { fetchCategory } from \"../../store/category\";\r\nimport {\r\n  createQuestionLoader,\r\n  uploadQuestionLoader\r\n} from \"../../store/question\";\r\nimport errorHandler from \"../../utils/errorHandler\";\r\nimport QuestionUploadForm from \"./questionsUpload\";\r\nimport QuestionForm from \"./questionView\";\r\n\r\n\r\n\r\nconst centeredStyle = {\r\n  // styling to display server response in middle of screen\r\n  position: \"fixed\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  /* bring your own prefixes */\r\n  transform: \"translate(-50%, -50%)\",\r\n  zIndex: \"1000\",\r\n};\r\n\r\nconst formValid = ({ formErrors, rest }) => {\r\n  //to check if form fields are null or contain error\r\n  let valid = true;\r\n  let error = \"\";\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false) && (error = v);\r\n    v.length > 0 && (error = v);\r\n  });\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === (null || \"\") && (valid = false);\r\n  });\r\n  return { valid, error }; // valid: is it valid ; error: what is the error message\r\n};\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false, // controlls spinner state\r\n      id: null, // need to pass id in edit or delete category section\r\n      title: \"\", // used in editCategory component to display the category name in heading\r\n      category: \"Top\",\r\n      qType: \"matrix\",\r\n      qText: \"\",\r\n      stemAmount: [1, 2, 3, 4, 5],\r\n      uploadedExcelQuestion: null,\r\n      response: null, // to display response message\r\n      responseClass: \"success\", // depends on response type\r\n      showEditCategoryComponent: false, // show or hide editCategory component\r\n      toastShow: true,\r\n      formErrors: {\r\n        // for storing form feilds error on handle change\r\n        title: \"\",\r\n        category: \"\",\r\n        qType: \"\",\r\n        qText: \"\",\r\n        stem: \"\",\r\n      },\r\n    };\r\n    this.categoryRef = React.createRef(null);\r\n  }\r\n\r\n  hideResponse = () => {\r\n    // hide the response message\r\n    this.setState({ response: null });\r\n  };\r\n  resetState = () => {\r\n    this.setState({\r\n      title: \"\",\r\n      category: \"Top\",\r\n      qType: \"matrix\",\r\n      qText: \"\",\r\n      stemAmount: [1, 2, 3, 4, 5],\r\n      aStemSba: null,\r\n    });\r\n    this.state.stemAmount.map((v) => {\r\n      this.setState({\r\n        [\"qStem\" + v]: \"\",\r\n        [\"aStem\" + v]: null,\r\n        [\"fbStem\" + v]: \"\",\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    switch (name) {\r\n      case \"title\":\r\n        formErrors.title = validator.isLength(value, { min: 1, max: 200 })\r\n          ? \"\"\r\n          : \"Title should not be emty, more than 200 charecters\";\r\n        break;\r\n      case \"qText\":\r\n        formErrors.qText = validator.isLength(value, {\r\n          min: 1,\r\n          max: 500,\r\n        })\r\n          ? \"\"\r\n          : \"Question Text should not be empty or maximum 500 characters\";\r\n        break;\r\n      case \"category\":\r\n        formErrors.category =\r\n          value === \"Top\" || validator.isInt(value) || validator.isMongoId(value)\r\n            ? \"\"\r\n            : \"Category is not valid\";\r\n        break;\r\n      case \"qType\":\r\n        formErrors.qType = validator.isIn(value, [\"matrix\", \"sba\"])\r\n          ? \"\"\r\n          : \"Question Type is not valid\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (/((qStem)|(fbStem))\\d{1,2}/.test(name)) {\r\n      formErrors.stem = validator.isLength(value, {\r\n        max: 200,\r\n      })\r\n        ? \"\"\r\n        : \"qStem or fbStem should not be More than 200\";\r\n    } else if (/(aStem\\d{1,2})|(aStemSba)/.test(name)) {\r\n      formErrors.stem = validator.isLength(value, {\r\n        max: 1,\r\n      })\r\n        ? \"\"\r\n        : \"aStem is invalid\";\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: files ? files[0] : value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { title, qType, qText, formErrors, aStemSba } = this.state;\r\n    const category = this.categoryRef.current.value;\r\n    const rest = { title, category, qType, qText };\r\n    const stem = [];\r\n\r\n    if (qType === \"sba\" && !(aStemSba && this.state[\"qStem\" + aStemSba])) {\r\n      this.setState({\r\n        formErrors: {\r\n          ...formErrors,\r\n          stem: `${aStemSba} no. stem can not be emty`,\r\n        },\r\n      });\r\n    } else {\r\n      this.state.stemAmount.map((v) => {\r\n        if (qType === \"sba\" && this.state[\"qStem\" + v]) {\r\n          stem.push({\r\n            qStem: this.state[\"qStem\" + v],\r\n            aStem: this.state.aStemSba,\r\n            fbStem: this.state[\"fbStem\" + v],\r\n          });\r\n        } else if (this.state[\"qStem\" + v] && this.state[\"aStem\" + v]) {\r\n          stem.push({\r\n            qStem: this.state[\"qStem\" + v],\r\n            aStem: this.state[\"aStem\" + v],\r\n            fbStem: this.state[\"fbStem\" + v],\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const { valid, error } = formValid({ rest, formErrors });\r\n\r\n    if (valid && stem.length !== 0) {\r\n      \r\n      this.resetState();\r\n      this.props.onCreateQuestionLoader({ ...rest, stem });\r\n    } else {\r\n      this.setState({\r\n        response:\r\n          \"Please fill form corectly\" +\r\n          (error ? \" __ \" + error.toUpperCase() + \" __\" : \"\"),\r\n        responseClass: \"danger\",\r\n      });\r\n      setTimeout(this.hideResponse, 2000);\r\n    }\r\n  };\r\n\r\n  uploadHandler = (e) => {\r\n    e.preventDefault();\r\n    const { file } = this.state;\r\n    const category = this.categoryRef.current.value;\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"category\", category);\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + \"/questions/files\", data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          uploadedExcelQuestion: response.data,\r\n          response: \"Successfully Updated \",\r\n          responseClass: \"success\",\r\n        });\r\n        setTimeout(this.hideResponse, 2000);\r\n      })\r\n      .catch((error) => {\r\n      \r\n        const errorResponse = errorHandler(error);\r\n        this.setState({\r\n          response: errorResponse,\r\n          responseClass: \"danger\",\r\n        });\r\n        setTimeout(this.hideResponse, 2000);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchCategoryLoader();\r\n  }\r\n  render() {\r\n    let stem = {};\r\n    this.state.stemAmount.map((v) => {\r\n      stem = {\r\n        ...stem,\r\n        [\"qStem\" + v]: this.state[\"qStem\" + v],\r\n        [\"aStem\" + v]: this.state[\"aStem\" + v],\r\n        [\"fbStem\" + v]: this.state[\"bStem\" + v],\r\n      };\r\n    });\r\n\r\n    const { title, category, qType, qText, aStemSba } = this.state;\r\n    return (\r\n      <>\r\n        {this.state.uploadedExcelQuestion && this.state.toastShow && (\r\n          <Toast\r\n            show={this.state.toastShow}\r\n            onClose={() => {\r\n              this.setState({ toastShow: false });\r\n            }}\r\n            className=\"mt-3\"\r\n          >\r\n            <Toast.Header variant=\"success\">\r\n              <strong className=\"m-auto\">\r\n                Questions Uploaded Successfully.\r\n              </strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              <ListGroup>\r\n                {this.state.uploadedExcelQuestion.map((question, index) => (\r\n                  <ListGroup.Item key={index}>\r\n                    {`${index + 1}. ${question.title}`}{\" \"}\r\n                    <Badge variant=\"dark\" className=\"ml-2\">\r\n                      edit\r\n                    </Badge>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Toast.Body>\r\n          </Toast>\r\n        )}\r\n        {this.props.api.result && this.state.toastShow && (\r\n          <Toast\r\n            show={this.state.toastShow}\r\n            onClose={() => {\r\n              this.setState({ toastShow: false });\r\n            }}\r\n            className=\"mt-3\"\r\n          >\r\n            <Toast.Header variant=\"success\">\r\n              <strong className=\"mr-auto\">\r\n                Question Created Successfully.\r\n              </strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Want to Edit the \"\r\n              {this.props.api.result ? this.props.api.result.title : \"\"}\"\r\n              <Button size=\"sm\" variant=\"info\" className=\"mt-2 ml-3\">\r\n                Question\r\n              </Button>\r\n            </Toast.Body>\r\n          </Toast>\r\n        )}\r\n\r\n        {this.state.response && (\r\n          <Alert\r\n            variant={this.state.responseClass}\r\n            className=\"text-center\"\r\n            style={centeredStyle}\r\n          >\r\n            {this.state.response}\r\n          </Alert>\r\n        )}\r\n\r\n        <QuestionForm\r\n          submitHandler={this.submitHandler}\r\n          categories={this.props.category.categories}\r\n          question={{\r\n            title,\r\n            category,\r\n            qType,\r\n            qText,\r\n            stem: { ...stem, aStemSba },\r\n          }}\r\n          handleChange={this.handleChange}\r\n          categoryRef={this.categoryRef}\r\n          formErrors={this.state.formErrors}\r\n        />\r\n\r\n        {/* Upload start here */}\r\n\r\n        <QuestionUploadForm\r\n          categories={this.props.category.categories}\r\n          formErrors={this.state.formErrors}\r\n          submitHandler={this.uploadHandler}\r\n          handleChange={this.handleChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCategoryLoader: () => dispatch(fetchCategory()),\r\n    onCreateQuestionLoader: (data) => dispatch(createQuestionLoader(data)),\r\n    onUploadQuestionLoader: (data) => dispatch(uploadQuestionLoader(data)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    category: state.category,\r\n    api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\r\n","import moment from \"moment\";\r\nimport React, { Component } from 'react';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { examRankByIdLoader } from '../../store/exams';\r\n\r\nclass Rank extends Component {\r\n    componentDidMount(){\r\n        this.props.onExamRankByLoader(this.props.match.params.id)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <h3 className=\"text-center\">Rank</h3>\r\n                {this.props.exam && <ListGroup horizontal={\"lg\"}>\r\n                    <ListGroup.Item>Exam: {this.props.exam.title}</ListGroup.Item>\r\n                    <ListGroup.Item>Total Mark: {this.props.exam.singleQuestionMark * this.props.exam.questions.length}</ListGroup.Item>\r\n                    <ListGroup.Item>Total Questions : {this.props.exam.questions.length}</ListGroup.Item>\r\n                    <ListGroup.Item>Penalty Mark: {this.props.exam.penaltyMark}</ListGroup.Item>\r\n                    <ListGroup.Item>Time Limit: {this.props.exam.timeLimit} Mins</ListGroup.Item>\r\n                    <ListGroup.Item>Started From: {moment(this.props.exam.createdAt).calendar()}</ListGroup.Item>\r\n                </ListGroup>}\r\n                <Table striped bordered hover responsive=\"md\" className=\"mt-3\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Score</th>\r\n                        <th>Attempts</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        this.props.rank && this.props.rank.map((rank,ind)=><tr className={this.props.userId===rank.user.id ? \"bg-success text-light \" : \"\"}>\r\n                            <td>{ind+1}</td>\r\n                            <td>{rank.user.name}</td>\r\n                            <td>{rank.exam.length> 0 ? rank.exam[0].score : \"Exam Not Yet Tried\"}</td>\r\n                            <td>{rank.exam.length> 0 ? rank.exam[0].attempts : \"Exam Not Yet Tried\"}</td>\r\n                        </tr>)   \r\n                        }\r\n                    </tbody>\r\n            </Table>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onExamRankByLoader: (id) => dispatch(examRankByIdLoader(id)),\r\n    };\r\n  };\r\n  \r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      rank: state.exams.rank,\r\n      exam: state.exams.exam,\r\n      userId: state.auth.userId\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Rank);\r\n\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { FaCheckCircle, FaMinusCircle, FaRegCheckCircle, FaRegTimesCircle } from 'react-icons/fa'\r\n\r\nconst answerStatus = {\r\n    True: 1,\r\n    False: 0,\r\n    NotAnswered: -1,\r\n  }\r\n\r\nconst QTypeNumber = {\r\n    SingleBestAnswer: \"sba\",\r\n    Matrix: \"matrix\",\r\n  }\r\n  \r\n\r\nexport default function stem({index, qType, answer, qStem}) {\r\n    \r\n    return (\r\n        <div className=\"d-flex flex-nowrap\">\r\n            {qType === QTypeNumber.Matrix && <>\r\n                <div className=\"mr-2\" >\r\n                    {answer === answerStatus.True && <FaRegCheckCircle style={{color: '#3c763d'}}  size='1.4rem' />}\r\n                    {answer === answerStatus.False && <FaRegTimesCircle style={{color: '#a94442'}} size='1.4rem' />}\r\n                    {answer === answerStatus.NotAnswered && <FaMinusCircle style={{color: '#777'}} size='1.4rem' />}\r\n                </div>\r\n                <div className=\"mr-2\">\r\n                    {qStem}\r\n                </div>\r\n                <div>\r\n                    <Form.Check inline disabled label=\"true\" type=\"radio\" checked={answer === answerStatus.True}/>\r\n                    <Form.Check inline disabled  label=\"False\" type=\"radio\" checked={answer === answerStatus.False} />\r\n                </div> \r\n            </>}\r\n\r\n            {\r\n                qType === QTypeNumber.SingleBestAnswer && <>\r\n                <div className=\"mr-2\" >\r\n                    {index + 1 === answer[0] && <FaRegCheckCircle style={{color: '#3c763d'}}  size='1.4rem' />}\r\n                    {index + 1 === answer[0] && answer[0] === answer[1] && <FaCheckCircle className=\"ml-1\" style={{color: '#3c763d'}}  size='1.4rem' />}\r\n\r\n                    { index + 1 === answer[1] &&  answer[0] !== answer[1] && <FaRegTimesCircle style={{color: '#a94442'}} size='1.4rem' />}\r\n                </div>\r\n                <div className=\"\">\r\n                    {qStem}\r\n                </div>\r\n\r\n                </>\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Alert, Card, ListGroup } from \"react-bootstrap\";\r\nimport { FaMinusCircle } from 'react-icons/fa';\r\nimport { connect } from \"react-redux\";\r\nimport SubNavBar from \"../../components/navbar/subNavBar\";\r\nimport QuestionResultStem from \"../../components/result/stem\";\r\n\r\nconst QType = {\r\n  SingleBestAnswer: \"sba\",\r\n  Matrix: \"matrix\",\r\n}\r\n\r\nclass Result extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      examResult,\r\n      totalMark,\r\n      totalScore,\r\n      totalPenaltyMark,\r\n      totalScorePercentage,\r\n      timeTakenToComplete,\r\n      error,\r\n    } = this.props.exams;\r\n    return (\r\n      <div>\r\n        {error && (\r\n          <>\r\n          <Alert variant={\"danger\"} className=\"m-5 text-center\">\r\n            {error}\r\n          </Alert>\r\n          <SubNavBar />\r\n          </>\r\n\r\n        )}\r\n        {examResult && (\r\n          <div>\r\n            <Card className=\"mt-3\">\r\n              <Card.Header as=\"h5\" className=\"text-center\">\r\n                Result\r\n              </Card.Header>\r\n              <Card.Body className=\"d-flex justify-content-center\">\r\n                <div style={{width:\"250px\"}} className=\"mr-2 mb-1\">\r\n                  <p className=\"bg-warning text-center text-light mb-1 p-3\" style={{fontSize: \"1.5rem\"}}>{totalScore.toFixed(2)} out of{\" \"} {totalMark.toFixed(2)}</p>\r\n                  <p className=\"bg-warning text-center text-light p-1\" style={{fontSize: \"1rem\"}}>Score</p>\r\n                </div>\r\n                <div style={{width:\"250px\"}} className=\"mr-2 mb-1\">\r\n                  <p className=\"bg-info text-center text-light mb-1 p-3\" style={{fontSize: \"1.5rem\"}}>{timeTakenToComplete} Mins</p>\r\n                  <p className=\"bg-info text-center text-light p-1\" style={{fontSize: \"1rem\"}}>Time</p>\r\n                </div>\r\n                <div style={{width:\"250px\"}} className=\"mr-2 mb-1\">\r\n                  <p className=\"bg-primary text-center text-light mb-1 p-3\" style={{fontSize: \"1.5rem\"}}>{totalScorePercentage.toFixed(2)} %</p>\r\n                  <p className=\"bg-primary text-center text-light p-1\" style={{fontSize: \"1rem\"}}>Percentage</p>\r\n                </div>\r\n                \r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <Card className=\"mt-3\">\r\n              <Card.Header as=\"h5\" className=\"text-center\">\r\n                Detail\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {examResult.map((item, index) => (\r\n                  <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      {item.result.stemResult[0] === QType.Matrix && item.result.stemResult.length === 1 \r\n                      && <FaMinusCircle className=\"mr-2\" style={{color: '#777'}} size='1.4rem' />}\r\n                      {item.result.stemResult[0] === QType.SingleBestAnswer && item.result.stemResult.length === 2 \r\n                      && <FaMinusCircle lassName=\"mr-2\" style={{color: '#777'}} size='1.4rem' />}\r\n                      {index + 1 + \". \" + item.qText}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <ListGroup variant=\"flush\" className=\"pl-3\">\r\n                        {item.stems.map((stem, ind) => {\r\n                          if (item.result.stemResult[0] === QType.SingleBestAnswer)\r\n                            return (\r\n                              <>\r\n                                <ListGroup.Item>\r\n                                  <QuestionResultStem index={ind} qType={item.result.stemResult[0]} answer={[item.result.stemResult[1], item.result.stemResult[2]]} qStem={`${ind + 1}. ${stem.qStem}`} />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"ml-3\">\r\n                                  {stem.fbStem && \"Explanation is : \" + stem.fbStem}\r\n                                </ListGroup.Item>\r\n                              </>\r\n                            );\r\n                          else\r\n                            return (\r\n                              <>\r\n                                <ListGroup.Item>\r\n                                  <QuestionResultStem index={ind} qType={item.result.stemResult[0]} answer= {item.result.stemResult[(ind+1)]} qStem={`${ind + 1}. ${stem.qStem}`} />\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item\r\n                                  // className={\r\n                                  //   (item.result.stemResult[ind] === true\r\n                                  //     ? \"bg-success\"\r\n                                  //     : \"bg-danger\") + \" text-light ml-3\"\r\n                                  // }\r\n                                >\r\n                                  This Statement is:{\" \"}\r\n                                  {stem.aStem === \"1\" ? \"True\" : \"False\"}\r\n                                  <br />\r\n                                  {stem.fbStem && \"Explanation is : \" + stem.fbStem}\r\n                                </ListGroup.Item>\r\n                                \r\n                              </>\r\n                            );\r\n                        })}\r\n                      </ListGroup>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item className=\"ml-3\">\r\n                      {item.generalFeedbacks && \"Explanation is : \" + item.generalFeedbacks}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                ))}\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams,\r\n    //   auth: state.auth,\r\n    //   category: state.category,\r\n    //   api: state.api,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../assets/scss/section/dashboard.scss\";\r\nimport Sidebar from \"../components/sidebar/sidebar\";\r\nimport SidebarMini from \"../components/sidebar/sidebarMini\";\r\nimport Topbar from \"../components/topbar/topbar\";\r\nimport Category from \"./category/category\";\r\n//importing routing parts\r\nimport Dashboard from \"./dashboard/dashboard\";\r\nimport ExamBuilder from \"./examBuilder/examBuilder\";\r\nimport ExamLists from \"./exams/examLists\";\r\nimport ExamTaker from \"./exams/examTaker\";\r\nimport Question from \"./question/question\";\r\nimport Rank from \"./result/rank\";\r\nimport Result from \"./result/result\";\r\n\r\n\r\n\r\n\r\n\r\nconst InnerContent = (props) => {\r\n  const pageName = props.match.url.split(\"/\", 2)[1];\r\n  return (\r\n    <>\r\n      <Menu styles={styles}>\r\n        <SidebarMini />\r\n      </Menu>\r\n      <Container fluid=\"true\">\r\n        <Row className=\"no-gutters\">\r\n          <Col xl={2} lg={3} md={4} className=\"sidebar\">\r\n            <Sidebar />\r\n          </Col>\r\n\r\n          <Col xl={10} lg={9} md={8} sm={12} >\r\n            <div>\r\n              <Topbar pageName={pageName} />\r\n              <div className=\"px-1 ml-md-4\" style={{marginTop: '70px'}}>\r\n                \r\n                  {\r\n                    <>\r\n                      <Route path=\"/dashboard\" exact component={Dashboard} />\r\n                      <Route path=\"/category\" exact component={Category} />\r\n                      <Route path=\"/question\" exact component={Question} />\r\n                      <Route path=\"/exambuilder\" exact component={ExamBuilder} />\r\n                      {/* <Route path=\"/exams/:id\" exact component={ExamTaker} /> */}\r\n                      <Route path=\"/exams/:id\" exact render={(props)=><ExamTaker free={false} {...props}/>} />\r\n                      <Route path=\"/exams\" exact component={ExamLists} />\r\n                      <Route path=\"/exams/free/:id\" exact render={(props)=><ExamTaker free={true} {...props}/>} />\r\n                      <Route path=\"/result\" exact component={Result} />\r\n                      <Route path=\"/result/rank/:id\" exact component={Rank} />\r\n                    </>\r\n                  }\r\n                \r\n              </div>  \r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InnerContent;\r\n\r\nvar styles = {\r\n  bmBurgerButton: {\r\n    position: \"fixed\",\r\n    width: \"30px\",\r\n    height: \"25px\",\r\n    right: \"28px\",\r\n    top: \"10px\",\r\n    // @media (min-width: 767.98px) {\r\n    //   display: none;\r\n    // }\r\n  },\r\n  bmBurgerBars: {\r\n    background: \"#67aaaa\",\r\n  },\r\n  bmBurgerBarsHover: {\r\n    background: \"#a90000\",\r\n  },\r\n  bmCrossButton: {\r\n    height: \"24px\",\r\n    width: \"24px\",\r\n  },\r\n  bmCross: {\r\n    background: \"#bdc3c7\",\r\n  },\r\n  bmMenuWrap: {\r\n    position: \"fixed\",\r\n    height: \"100%\",\r\n  },\r\n  bmMenu: {\r\n    background: \"#373a47\",\r\n    padding: \"2.5em 1.5em 0\",\r\n    fontSize: \"1.15em\",\r\n  },\r\n  bmMorphShape: {\r\n    fill: \"#373a47\",\r\n  },\r\n  bmItemList: {\r\n    color: \"#b8b7ad\",\r\n    padding: \"0.8em\",\r\n  },\r\n  bmItem: {\r\n    display: \"inline-block\",\r\n  },\r\n  bmOverlay: {\r\n    background: \"rgba(0, 0, 0, 0.3)\",\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validator from \"validator\";\r\nimport \"../../assets/scss/section/registration.scss\";\r\nimport NavbarHome from \"../../components/navbar/navbarHome\";\r\nimport { auth, autoAuth } from \"../../store/auth\";\r\n\r\n\r\n\r\nconst isValid = (formErrors) => {\r\n  let valid = true;\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false);\r\n  });\r\n  return valid;\r\n};\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    username: null,\r\n    password: null,\r\n    formErrors: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errorMessage: null,\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, formErrors } = this.state;\r\n\r\n    this.setState({ errorMessage: null });\r\n\r\n    if (isValid(formErrors)) {\r\n      this.props.onAuth(username, password);\r\n    } else {\r\n      this.setState({\r\n        errorMessage:\r\n          \"Login Failed. Server may be down. please try sometime later\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    this.setState({ errorMessage: null });\r\n\r\n    switch (name) {\r\n      case \"username\":\r\n        formErrors.username =\r\n          !validator.isEmpty(value) && validator.isEmail(value)\r\n            ? \"\"\r\n            : \"Email should not be empty && must be valid\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = !validator.isEmpty(value)\r\n          ? \"\"\r\n          : \"Password should not be empty\";\r\n        break;\r\n    }\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    //this.props.onAutoAuth();\r\n  }\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    // let authRedirect;\r\n    // if (this.props.isAuthenticated) {\r\n    //   console.log(this.props.isAuthenticated);\r\n    //   authRedirect = <Redirect to=\"/dashboard\" />;\r\n    // }\r\n    return (\r\n      <div className=\"registration\">\r\n        {/* {authRedirect} */}\r\n        <NavbarHome isLanding={false} />\r\n        {/* Landing */}\r\n        <div className=\"landing\">\r\n          {/* <div className=\"home-wrap\"> */}\r\n            <div className=\"home-inner\"></div>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className=\"caption text-center\" style={{ top: \"15%\" }}>\r\n          {/* <Spinner animation=\"border\" role=\"status\"></Spinner> */}\r\n          <h1>Login Form</h1>\r\n          {this.props.auth.loading && (\r\n            <Spinner\r\n              animation=\"border\"\r\n              role=\"status\"\r\n              variant=\"light\"\r\n              className=\"mr-2\"\r\n            ></Spinner>\r\n          )}\r\n          <div className=\"heading-underline\"></div>\r\n          <Form className=\"mb-4\" onSubmit={this.submitHandler} noValidate>\r\n            <div className=\"text-white mb-2 bg-danger\">\r\n              {this.props.auth.error &&\r\n                this.props.auth.error}\r\n            </div>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"username\" // do not be confused; due to passportjs use only \"username\" for password verification though it is actually the user email\r\n                onChange={this.handleChange}\r\n                className={formErrors.username.length > 0 && \"is-invalid\"}\r\n              />\r\n              {formErrors.username.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.username}</span>\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={this.handleChange}\r\n                className={formErrors.password.length > 0 && \"is-invalid\"}\r\n              />\r\n              {formErrors.password.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.password}</span>\r\n              )}\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"btn-submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <Row></Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <p className=\"lead\">Forget Your Password</p>\r\n              {/* <Button variant=\"danger\">\r\n                Reset Your Password\r\n              </Button> */}\r\n              <p className=\"bg-danger p-1\">Please Email to {process.env.REACT_APP_HELP_EMAIL}</p>\r\n            </Col>\r\n            <Col md={6}>\r\n              <p className=\"lead\">I am not a member yet!</p>\r\n              <Link to=\"/signup\" className=\"btn btn-secondary\">\r\n                Sign up\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {/* End of Landing */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (username, password) => dispatch(auth(username, password)),\r\n    onAutoAuth: () => {\r\n      dispatch(autoAuth());\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    api: state.api,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logoutLoader } from \"../../store/auth\";\r\n\r\nclass Logout extends React.Component {\r\n  componentDidMount() {\r\n    this.props.onLogoutLoader();\r\n  }\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogoutLoader: () => {\r\n      dispatch(logoutLoader());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","//import React from \"react\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport validator from \"validator\";\r\nimport \"../../assets/scss/section/registration.scss\";\r\nimport NavbarHome from \"../../components/navbar/navbarHome\";\r\n\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n  Object.values(formErrors).forEach((v) => {\r\n    v.length > 0 && (valid = false);\r\n  });\r\n\r\n  Object.values(rest).forEach((v) => {\r\n    v === null && (valid = false);\r\n  });\r\n  return valid;\r\n};\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.passwordRef = React.createRef();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      firstName: null,\r\n      lastName: null,\r\n      userName: null,\r\n      password: null,\r\n      repeatPassword: null,\r\n      gender: \"male\",\r\n      errorMessage: null,\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        repeatPassword: \"\",\r\n        checked: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    this.setState({ errorMessage: null });\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName = validator.isLength(value, { min: 3, max: 15 })\r\n          ? \"\"\r\n          : \"First Name should be minimum 3 or maximum 20 characters\";\r\n        break;\r\n      case \"lastName\":\r\n        formErrors.lastName = validator.isLength(value, { min: 3, max: 15 })\r\n          ? \"\"\r\n          : \"Last Name should be minimum 3 or maximum 20 characters\";\r\n        break;\r\n      case \"userName\":\r\n        formErrors.userName =\r\n          validator.isLength(value, { min: 3, max: 15 }) &&\r\n          validator.isAlphanumeric(value)\r\n            ? \"\"\r\n            : \"Username should be alpha neumaric with minimum 3 or maximum 20 characters\";\r\n        break;\r\n      case \"email\":\r\n        formErrors.email = validator.isEmail(value)\r\n          ? \"\"\r\n          : \"Email address is not valid\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = validator.matches(\r\n          value,\r\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n        )\r\n          ? \"\"\r\n          : \"Password should be minimum 8 characters and contain atleast one capital and lowercase alpha, neumeric and special value\";\r\n        break;\r\n      case \"repeatPassword\":\r\n        formErrors.repeatPassword = validator.equals(\r\n          value,\r\n          this.passwordRef.current.value\r\n        )\r\n          ? \"\"\r\n          : \"Password and RepeatPassword should be same\";\r\n        break;\r\n      //case \"gender\":\r\n      // formErrors.password = validator.isIn(value,[\"male\",\"female\"])\r\n      //   ? \"\"\r\n      //   : \"Password should be minimum 8 characters and contain one alpha,neumeric and special value\";\r\n      // break;\r\n      case \"checked\":\r\n        formErrors.checked = e.target.checked ? \"\" : \"Check Me is not selected\";\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: formErrors,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ errorMessage: null });\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      userName,\r\n      email,\r\n      password,\r\n      repeatPassword,\r\n      gender,\r\n      formErrors,\r\n    } = this.state;\r\n    this.setState({ loading: true });\r\n\r\n    if (\r\n      formValid({\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        email,\r\n        password,\r\n        repeatPassword,\r\n        gender,\r\n        formErrors,\r\n      })\r\n    ) {\r\n      axios\r\n        .post(process.env.REACT_APP_SITE_URL + \"/auth/registration\", {\r\n          firstName,\r\n          lastName,\r\n          userName,\r\n          email,\r\n          password,\r\n          repeatPassword,\r\n          gender,\r\n        })\r\n        .then((res) => {\r\n          this.setState({ loading: false });\r\n          if (res.status === 201) {\r\n            // <Route exact path=\"/\">\r\n            this.props.history.push({ pathname: \"/login\" });\r\n            // </Route>;\r\n          }\r\n        })\r\n\r\n        .catch((e) => {\r\n          this.setState({ loading: false });\r\n          //  console.log(\"/b/b onError:  \", e.response);\r\n          if (e.response) {\r\n            // if server has response\r\n            e = e.response;\r\n            if (e.data.statusCode === 409) {\r\n              // user duplication error, so redirecting to login page\r\n              this.setState({\r\n                errorMessage: e.data.message + \" Redirecting .....\",\r\n              });\r\n              setTimeout(() => {\r\n                this.props.history.push({ pathname: \"/login\" });\r\n              }, 3000);\r\n            } else if (e.data.statusCode === 400) {\r\n              // specific server validation error\r\n              let message = \"\";\r\n              e.data.message.forEach((v) => {\r\n                message += `${v.value} is not valid in [ ${\r\n                  v.property\r\n                } ] field due to \" ${Object.values(\r\n                  v.constraints\r\n                ).toString()} \"`;\r\n              });\r\n              //  console.log(message);\r\n              this.setState({\r\n                errorMessage: message,\r\n              });\r\n            } else {\r\n              // for any other server error response\r\n              this.props.history.push({ pathname: \"/\" });\r\n            }\r\n          } else {\r\n            // if server has no any response\r\n            this.setState({\r\n              errorMessage: \"Server may be down. Please try sometime later\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n        errorMessage: \"Please fill form correctly.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n    return (\r\n      <div className=\"registration\">\r\n        <NavbarHome isLanding={false} />\r\n        {/* Landing */}\r\n        <div className=\"landing\">\r\n          {/* <div className=\"home-wrap\"> */}\r\n            <div className=\"home-inner\"></div>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className=\"caption text-center\">\r\n          <h1>Registration Form</h1>\r\n          {this.state.loading && (\r\n            <Spinner\r\n              animation=\"border\"\r\n              role=\"status\"\r\n              variant=\"light\"\r\n              className=\"mb-2\"\r\n            ></Spinner>\r\n          )}\r\n          <div className=\"heading-underline\"></div>\r\n\r\n          <Form onSubmit={this.submitHandler} novalidate>\r\n            <div className=\"text-white mb-2 bg-danger\">\r\n              {this.state.errorMessage}\r\n            </div>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                <Form.Label>First Name: </Form.Label>\r\n                <Form.Control\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Eaqub\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.firstName.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.firstName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.firstName}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Sarder\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.lastName.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.lastName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.lastName}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridUserName\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  name=\"userName\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.userName.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.userName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.userName}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.email.length > 0 && \"is-invalid\"}\r\n                />\r\n                {formErrors.email.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.email}</span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  ref={this.passwordRef}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  className={formErrors.password.length > 0 && \"is-invalid\"}\r\n                />\r\n                <Form.Text className=\"text-warning\">\r\n                  e.g. 123abcDEF!$%\r\n                </Form.Text>\r\n                {formErrors.password.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.password}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridRepeatPassword\">\r\n                <Form.Label>Repeat Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"repeatPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter again Password\"\r\n                  onChange={this.handleChange}\r\n                  className={\r\n                    formErrors.repeatPassword.length > 0 && \"is-invalid\"\r\n                  }\r\n                />\r\n                {formErrors.repeatPassword.length > 0 && (\r\n                  <span className=\"errorMessage\">\r\n                    {formErrors.repeatPassword}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control\r\n                  name=\"gender\"\r\n                  as=\"select\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group id=\"formGridCheckbox\">\r\n              <Form.Check\r\n                name=\"checked\"\r\n                type=\"checkbox\"\r\n                label=\"By checking the box, You will agree our terms and conditions.\"\r\n                //checked={true}\r\n                onChange={this.handleChange}\r\n                className={formErrors.checked.length > 0 && \"is-invalid\"}\r\n              />\r\n              {formErrors.checked.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.checked}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" className=\"btn-submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        {/* End of Landing */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { canActivate, rolePermitted } from \"../utils/canActivate\";\r\nimport NotFoundPage from \"./404\";\r\nimport Landing from \"./landing/landing\";\r\nimport InnerContent from \"./layout\";\r\nimport Login from \"./registration/login\";\r\nimport LogoutPage from \"./registration/logout\";\r\nimport Signup from \"./registration/signup\";\r\n\r\n\r\n\r\nconst RoutePages = (props) => {\r\n  // const tokenRole = props.token ? jwtDecode(props.token).role : -1;\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/signup\" component={Signup} />\r\n      <Route path=\"/exams\" exact component={InnerContent} />\r\n      <Route path=\"/exams/:id\" exact component={InnerContent} />\r\n      <Route path=\"/exams/free/:id\" component={InnerContent} />\r\n      <Route path=\"/result\" component={InnerContent} />\r\n      <Route path=\"/result/rank/:id\" component={InnerContent} />\r\n      <Route path=\"/error\" render={(props)=><NotFoundPage {...props}/>} />\r\n      <Route path=\"/\" exact component={Landing} />\r\n      <Route render={(props)=><NotFoundPage {...props}/>} />\r\n    </Switch>\r\n  );\r\n  if (\r\n    props.isAuthenticated &&\r\n    canActivate(rolePermitted.student, props.token)\r\n  ) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/dashboard\" component={InnerContent} />\r\n        <Route path=\"/exams\" component={InnerContent} />\r\n        <Route path=\"/exams/:id\" component={InnerContent} />\r\n        <Route path=\"/result\" component={InnerContent} />\r\n        <Route path=\"/rank\" component={InnerContent} />\r\n        <Route path=\"/logout\" component={LogoutPage} />\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Redirect to=\"/dashboard\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  if (canActivate(rolePermitted.mentor, props.token)) {\r\n    \r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/dashboard\" component={InnerContent} />\r\n        <Route path=\"/question\" component={InnerContent} />\r\n        <Route path=\"/exambuilder\" component={InnerContent} />\r\n        <Route path=\"/logout\" component={LogoutPage} />\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Redirect to=\"/dashboard\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  if (canActivate(rolePermitted.admin, props.token)) {\r\n  \r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/dashboard\" component={InnerContent} />\r\n        <Route path=\"/category\" component={InnerContent} />\r\n        <Route path=\"/question\" component={InnerContent} />\r\n        <Route path=\"/exambuilder\" component={InnerContent} />\r\n        <Route path=\"/logout\" component={LogoutPage} />\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Redirect to=\"/dashboard\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return routes;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RoutePages);\r\n//export default RoutePages;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// import Navbar from \"./components/layouts/layouts\";\r\n// import Modal from \"./components/modal/modal\";\r\nimport RoutePages from \"./container/routePages\";\r\nimport { checkAuthState } from \"./store/auth\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    modalShow: false,\r\n  };\r\n\r\n  modalShowHandler = () => {\r\n    this.setState({ modalShow: true });\r\n  };\r\n  modalCloseHandler = () => {\r\n    this.setState({ modalShow: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onTryAutologin();\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        {/* <Navbar logoutClick={this.modalShowHandler} />\r\n        <Modal\r\n          show={this.state.modalShow}\r\n          modalHandleClose={this.modalCloseHandler}\r\n        /> */}\r\n        <RoutePages />\r\n        {/* <Signup /> */}\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutologin: () => {\r\n      dispatch(checkAuthState());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport rootReducers from \"./store\";\nimport { api } from \"./store/middleware/index\";\nimport App from \"./App\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faHome,\n  faUser,\n  faEnvelope,\n  faShoppingCart,\n  faChartLine,\n  faChartBar,\n  faTable,\n  faWrench,\n  faFileAlt,\n  faSearch,\n  faComments,\n  faBell,\n  faSignOutAlt,\n  faSync,\n  faFileImport,\n  faMedal,\n  faClock,\n  faPoll,\n  faBalanceScale,\n  faUsers,\n  faFile,\n  faCalendarAlt,\n  faStar,\n  faBars,\n  faCloud,\n  faHourglass,\n  faThumbsUp,\n  faQuoteLeft,\n  faArrowUp,\n} from \"@fortawesome/free-solid-svg-icons\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nlibrary.add(\n  fab,\n  faHome,\n  faUser,\n  faEnvelope,\n  faShoppingCart,\n  faChartLine,\n  faChartBar,\n  faTable,\n  faWrench,\n  faFileAlt,\n  faSearch,\n  faComments,\n  faBell,\n  faSignOutAlt,\n  faSync,\n  faFileImport,\n  faMedal,\n  faClock,\n  faPoll,\n  faBalanceScale,\n  faUsers,\n  faFile,\n  faCalendarAlt,\n  faStar,\n  faBars,\n  faCloud,\n  faHourglass,\n  faThumbsUp,\n  faQuoteLeft,\n  faArrowUp\n);\n\nconst store = configureStore({\n  reducer: rootReducers,\n  middleware: [...getDefaultMiddleware(), api],\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />{\" \"}\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}